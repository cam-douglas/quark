(self.webpackChunkk3d=self.webpackChunkk3d||[]).push([[659],{1022:e=>{"use strict";e.exports="#include <common>\r\n#include <clipping_planes_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <lights_pars_begin>\r\n\r\nuniform float size;\r\nuniform float specular;\r\nuniform float opacity;\r\nuniform mat4 projectionMatrix;\r\n\r\nvarying vec4 vColor;\r\nvarying vec4 mvPosition;\r\n\r\nvoid main(void)\r\n{\r\n    #include <clipping_planes_fragment>\r\n\r\n    vec2 impostorSpaceCoordinate = (gl_PointCoord.xy - vec2(0.5, 0.5)) * 2.0;\r\n    float distanceFromCenter = length(impostorSpaceCoordinate);\r\n\r\n    if (distanceFromCenter > 1.0) discard;\r\n\r\n    float normalizedDepth = sqrt(1.0 - distanceFromCenter * distanceFromCenter);\r\n    float depthOfFragment = normalizedDepth * size * 0.5;\r\n\r\n    vec4 pos = vec4(mvPosition.xyz, 1.0);\r\n    pos.z += depthOfFragment;\r\n    pos = projectionMatrix * pos;\r\n\r\n    #ifdef USE_LOGDEPTHBUF_EXT\r\n    float depth = log2(1.0 + pos.w) * logDepthBufFC * 0.5;\r\n    #else\r\n    pos = pos / pos.w;\r\n    float depth = ((gl_DepthRange.diff * pos.z) + gl_DepthRange.near + gl_DepthRange.far) / 2.0;\r\n    #endif\r\n\r\n    gl_FragDepthEXT = depth;\r\n    float fragCoordZ = pos.z;\r\n\r\n    vec3 normal = vec3(impostorSpaceCoordinate, normalizedDepth);\r\n\r\n    vec4 addedLights = vec4(ambientLightColor / PI, 1.0);\r\n    vec4 finalSphereColor = vColor;\r\n\r\n    finalSphereColor.a *= opacity;\r\n\r\n    for (int l = 0; l < NUM_DIR_LIGHTS; l++) {\r\n        vec3 lightDirection = -directionalLights[l].direction;\r\n        float lightingIntensity = clamp(dot(-lightDirection, normal), 0.0, 1.0);\r\n        addedLights.rgb += directionalLights[l].color / PI * (0.05 + 0.95 * lightingIntensity);\r\n\r\n        #if (USE_SPECULAR == 1)\r\n        finalSphereColor.rgb += directionalLights[l].color / PI * pow(lightingIntensity, 80.0);\r\n        #endif\r\n    }\r\n\r\n    gl_FragColor = finalSphereColor * addedLights;\r\n}\r\n"},1184:e=>{e.exports={pow10ceil:e=>10**Math.ceil(Math.log10(e)),fmod:(e,t)=>Number((e-Math.floor(e/t)*t).toPrecision(8)),decodeFloat16(e){const t=(31744&e)>>10,n=1023&e;return(e>>15?-1:1)*(t?31===t?n?NaN:1/0:2**(t-15)*(1+n/1024):n/1024*6103515625e-14)}}},1586:(e,t,n)=>{const r=n(6101),o=n(7915),i=n(69522),a=n(76749),s=n(62419),l=n(98947).typedArrayToThree,c=n(98947).areAllChangesResolve,d=n(98947).commonUpdate,p=[1,0,0,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,1,0,0,1];function u(e){const t=a.createCanvasColorList(e);return new r.CanvasTexture(t,r.UVMapping,r.ClampToEdgeWrapping,r.ClampToEdgeWrapping,r.NearestFilter,r.NearestFilter)}function m(e,t){const n=new Float32Array(36).fill(0),r=(e[0]+.5)/t[2],o=(e[1]+.5)/t[1],i=(e[2]+.5)/t[0];return r>=0&&n.set([-.5+r,-.5,-.5,-.5+r,.5,-.5,-.5+r,.5,.5,-.5+r,-.5,.5],0),o>=0&&n.set([-.5,-.5+o,-.5,.5,-.5+o,-.5,.5,-.5+o,.5,-.5,-.5+o,.5],12),i>=0&&n.set([-.5,-.5,-.5+i,.5,-.5,-.5+i,.5,.5,-.5+i,-.5,.5,-.5+i],24),n}e.exports={create(e,t){e.color=void 0!==e.color?e.color:255,e.mask_opacity=void 0!==e.mask_opacity?e.mask_opacity:.5,e.opacity=void 0!==e.opacity?e.opacity:1,e.interpolation=void 0!==e.interpolation?e.interpolation:1;const c=new r.Matrix4,d=e.color_map&&e.color_map.data||null;let h=null;const g=new r.BufferGeometry;let f=[],v=[],y=[],_=0;e.opacity_function&&e.opacity_function.data&&e.opacity_function.data.length>0&&(h=e.opacity_function.data);const x=Array.isArray(e.volume)?e.volume[0].shape:e.volume.shape;e.volume=Array.isArray(e.volume)?e.volume:[e.volume];const b=a.createCanvasGradient(d,1024,e.volume.length,h),w=new r.CanvasTexture(b,r.UVMapping,r.ClampToEdgeWrapping,r.ClampToEdgeWrapping,r.NearestFilter,r.NearestFilter);w.needsUpdate=!0,g.setAttribute("position",new r.BufferAttribute(m([e.slice_x,e.slice_y,e.slice_z],x),3)),g.setAttribute("normals",new r.BufferAttribute(new Float32Array(p),3)),g.setIndex(new r.BufferAttribute(new Uint32Array([0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11]),1)),e.mask.data.length>0&&e.color_map_masks.data.length>0&&(f=new r.Data3DTexture(e.mask.data,e.mask.shape[2],e.mask.shape[1],e.mask.shape[0]),f.format=r.RedFormat,f.type=r.UnsignedByteType,f.generateMipmaps=!1,f.minFilter=r.NearestFilter,f.magFilter=r.NearestFilter,f.wrapS=r.ClampToEdgeWrapping,f.wrapT=r.ClampToEdgeWrapping,f.needsUpdate=!0,y=u(e.active_masks.data),v=u(e.color_map_masks.data),_=e.active_masks.data.length);let M={opacity:{value:e.opacity},mask:{type:"t",value:f},maskColors:{type:"t",value:v},maskOpacity:{value:e.mask_opacity},activeMasksCount:{value:_},activeMasks:{type:"t",value:y},colormap:{type:"t",value:w}};!function(e,t){let n=t.volume.reduce(function(e,n,o){const i=new r.Data3DTexture(n.data,n.shape[2],n.shape[1],n.shape[0]);return i.format=r.RedFormat,i.type=l(n.data.constructor),i.generateMipmaps=!1,i.wrapS=r.ClampToEdgeWrapping,i.wrapT=r.ClampToEdgeWrapping,t.interpolation>0?(i.minFilter=r.LinearFilter,i.magFilter=r.LinearFilter):(i.minFilter=r.NearestFilter,i.magFilter=r.NearestFilter),i.needsUpdate=!0,e.low.push(t.color_range[2*o]),e.high.push(t.color_range[2*o+1]),e.volumeTexture.push(i),e.volumeSize.push(new r.Vector3(n.shape[2],n.shape[1],n.shape[0])),e},{low:[],high:[],volumeTexture:[],volumeSize:[]});e.low={value:n.low},e.high={value:n.high},e.volumeTexture={type:"tv",value:n.volumeTexture},e.volumeSize={value:n.volumeSize}}(M,e);const E=new r.ShaderMaterial({uniforms:s.merge(M,r.UniformsLib.lights),defines:{CUBIC:2===e.interpolation?1:0},side:r.DoubleSide,vertexShader:n(93512),fragmentShader:n(79454),depthWrite:1===e.opacity&&null===h,transparent:1!==e.opacity||null!==h,lights:!1,clipping:!0,onBeforeCompile:function(t){t.fragmentShader=t.fragmentShader.replace(/TEXTURE_COUNT/g,e.volume.length),t.vertexShader=t.vertexShader.replace(/TEXTURE_COUNT/g,e.volume.length)}});!1===e.flat_shading&&g.computeVertexNormals(),g.computeBoundingSphere(),g.computeBoundingBox();const C=new r.Mesh(g,E);return c.set.apply(c,e.model_matrix.data),C.applyMatrix4(c),C.updateMatrixWorld(),i.init(e,C,t,o),Promise.resolve(C)},update(e,t,n,r){const o={},s=Array.isArray(e.volume)?e.volume[0].shape:e.volume.shape;void 0===t.color_range||t.color_range.timeSeries||(Array.isArray(n.material.uniforms.low.value)?(n.material.uniforms.low.value[0]=t.color_range[0],n.material.uniforms.high.value[0]=t.color_range[1]):(n.material.uniforms.low.value=t.color_range[0],n.material.uniforms.high.value=t.color_range[1]),o.color_range=null);let l=!1;if(["x","y","z"].forEach(r=>{if(!l&&void 0!==t[`slice_${r}`]&&!t[`slice_${r}`].timeSeries){const r=n.geometry.attributes.position.array,i=m([void 0!==t.slice_x?t.slice_x:e.slice_x,void 0!==t.slice_y?t.slice_y:e.slice_y,void 0!==t.slice_z?t.slice_z:e.slice_z],s);for(let e=0;e<r.length;e++)r[e]=i[e];n.geometry.attributes.position.needsUpdate=!0,o.slice_x=null,o.slice_y=null,o.slice_z=null,l=!0}}),void 0!==t.volume&&!t.volume.timeSeries&&(Array.isArray(t.volume)||(t.volume=[t.volume]),t.volume.length===n.material.uniforms.volumeTexture.value.length)){let e=!0;t.volume.forEach(function(t,r){let o=n.material.uniforms.volumeTexture.value[r];o.image.data.constructor===t.data.constructor&&o.image.width===t.shape[2]&&o.image.height===t.shape[1]&&o.image.depth===t.shape[0]?(o.image.data=t.data,o.needsUpdate=!0):e=!1}),e&&(o.volume=null)}if(void 0===t.mask||t.mask.timeSeries||n.material.uniforms.mask.value.image.data.length>0&&n.material.uniforms.mask.value.image.data.constructor===t.mask.data.constructor&&(n.material.uniforms.mask.value.image.data=t.mask.data,n.material.uniforms.mask.value.needsUpdate=!0,o.mask=null),void 0===t.active_masks||t.active_masks.timeSeries||(n.material.uniforms.activeMasks.value=u(t.active_masks.data),n.material.uniforms.activeMasks.value.needsUpdate=!0,n.material.uniforms.activeMasksCount.value=t.active_masks.data.length,o.active_masks=null),void 0===t.color_map_masks||t.color_map_masks.timeSeries||(n.material.uniforms.maskColors.value=u(t.color_map_masks.data),n.material.uniforms.maskColors.value.needsUpdate=!0,o.color_map_masks=null),void 0===t.mask_opacity||t.mask_opacity.timeSeries||(n.material.uniforms.maskOpacity.value=t.mask_opacity,o.mask_opacity=null),void 0!==t.color_map&&!t.color_map.timeSeries||void 0!==t.opacity_function&&!t.opacity_function.timeSeries){const r=a.createCanvasGradient(t.color_map&&t.color_map.data||e.color_map.data,1024,e.volume.length,t.opacity_function&&t.opacity_function.data||e.opacity_function.data);n.material.uniforms.colormap.value.image=r,n.material.uniforms.colormap.value.needsUpdate=!0,o.color_map=null,o.opacity_function=null}return i.update(e,t,o,n,r),["opacity"].forEach(e=>{t[e]&&!t[e].timeSeries&&(n.material.uniforms[e].value=t[e],n.material.needsUpdate=!0,o[e]=null)}),d(e,t,o,n,r),!!c(t,o)&&Promise.resolve({json:e,obj:n})}}},3650:e=>{"use strict";e.exports="uniform vec4 rotation;\r\nuniform vec4 translation;\r\n\r\nvarying vec4 worldPosition;\r\nvarying vec3 localPosition;\r\nvarying vec3 transformedCameraPosition;\r\nvarying vec3 transformedWorldPosition;\r\n\r\nvec3 rotate_vertex_position(vec3 pos, vec3 t, vec4 q) {\r\n    vec3 p = pos.xyz - t.xyz;\r\n\r\n    return p.xyz + 2.0 * cross(cross(p.xyz, q.xyz) + q.w * p.xyz, q.xyz) + t.xyz;\r\n}\r\n\r\nvoid main() {\r\n    vec3 p;\r\n\r\n    #include <begin_vertex>\r\n    #include <project_vertex>\r\n\r\n    localPosition = position;\r\n    worldPosition = modelMatrix * vec4(transformed, 1.0);\r\n\r\n    transformedCameraPosition = rotate_vertex_position(cameraPosition.xyz, translation.xyz, rotation);\r\n    transformedWorldPosition = rotate_vertex_position(worldPosition.xyz, translation.xyz, rotation);\r\n\r\n    #include <worldpos_vertex>\r\n}\r\n"},3899:(e,t,n)=>{const r=n(71967),o=n(27244),i=n(62282).GUI,{viewModes:a}=n(69358),{cameraUpAxisModes:s}=n(31543),l=n(62419),{cameraModes:c}=n(8444),d=n(84135),p=n(63806),u=n(87564),m=n(58248),h=n(57458),g=n(62855),f=n(47189),{viewModeGUI:v}=n(69358),{cameraModeGUI:y}=n(8444),{cameraUpAxisGUI:_}=n(31543),x=n(73380),{getColorLegend:b}=n(82054),w=n(14042),M=n(81151),E=n(4184),{base64ToArrayBuffer:C}=n(80228),S=o.createCodec({preset:!0}),A=n(95080);function P(e,t,A){const z=this;let D=null,T=1;const k=t.ownerDocument.defaultView||t.ownerDocument.parentWindow,O={ObjectsListJson:{},ObjectsById:{},chunkList:{},targetDOMNode:t,overlayDOMNode:null};let j={},I=0;const L={controls:null,objects:null};let F;function V(e,t){return!!j[e]&&(Object.keys(j[e]).forEach(n=>{j[e][n](t)}),!0)}function R(e,t){V(z.events.PARAMETERS_CHANGE,{key:e,value:t})}function B(){z.gui=new i({width:220,autoPlace:!1,title:"K3D panel"}),F.appendChild(z.gui.domElement),L.controls=z.gui.addFolder("Controls").close(),L.objects=z.gui.addFolder("Objects").close(),L.info=z.gui.addFolder("Info").close(),u.screenshotGUI(L.controls,z),m.snapshotGUI(L.controls,z),h(L.controls,z),k===window&&(g(L.controls,z),f.isAvailable()&&f.initialize(O.targetDOMNode,L.controls,k,z)),L.controls.add(z.parameters,"cameraAutoFit").onChange(R.bind(z,"camera_auto_fit")),L.controls.add(z.parameters,"gridAutoFit").onChange(e=>{z.setGridAutoFit(e),R.call(z,"grid_auto_fit",e)}),L.controls.add(z.parameters,"gridVisible").onChange(e=>{z.setGridVisible(e),R.call(z,"grid_visible",e)}),L.controls.add(z.parameters,"fpsMeter").onChange(e=>{z.setFpsMeter(e),R.call(z,"fps_meter",e)}),L.controls.add(z.parameters,"depthPeels").step(1).min(0).max(16).onChange(e=>{z.setDepthPeels(e),R.call(z,"depth_peels",e)}),v(L.controls,z),y(L.controls,z),_(L.controls,z),x.manipulateGUI(L.controls,z,R),L.controls.add(z.parameters,"cameraFov").step(.1).min(1).max(179).name("FOV").onChange(e=>{z.setCameraFOV(e),R.call(z,"camera_fov",e)}),L.controls.add(z.parameters,"voxelPaintColor").step(1).min(0).max(255).name("voxelColor").onChange(R.bind(z,"voxel_paint_color")),L.controls.add(z.parameters,"lighting").step(.01).min(0).max(4).name("lighting").onChange(e=>{z.setDirectionalLightingIntensity(e),R.call(z,"lighting",e)}),E.timeSeriesGUI(L.controls,z,R),L.clippingPlanes=L.controls.addFolder("Clipping planes").close(),L.info.add(z.parameters,"guiVersion").name("Js version:"),L.info.controllers[0].$input.readOnly=!0,z.parameters.backendVersion&&(L.info.add({version:z.parameters.backendVersion},"version").name("Python version:"),L.info.controllers[1].$input.readOnly=!0),Object.keys(O.ObjectsListJson).forEach(e=>{w.update(z,O.ObjectsListJson[e],L.objects,null)})}function U(e){let t=z.Provider.Helpers.getObjectById(O,e);t&&(O.K3DObjects.remove(t),delete O.ObjectsById[e],t.onRemove&&t.onRemove(),t.geometry&&t.geometry.dispose(),t.material&&t.material.map&&t.material.map.dispose(),t.material&&t.material.dispose(),t.mesh&&t.mesh.dispose(),t=void 0)}if(n(75418),!(this instanceof P))return new P(e,t,A);if("object"!=typeof e)throw new Error("Provider should be an object (a key-value map following convention)");this.refreshAfterObjectsChange=function(e,t){return!(!z.parameters.autoRendering&&!t)&&(e||z.getWorld().setCameraToFitScene(),L.controls&&E.refreshTimeScale(z,L),e?z.render(!0):z.rebuildSceneData().then(z.render.bind(null,!0)))},this.render=function(e){O.render(e)},this.resizeHelper=function(){z.disabling||(z.gui&&(z.gui.domElement.parentNode.style["max-height"]=`${O.targetDOMNode.offsetHeight}px`),z.Provider.Helpers.resizeListener(O),V(z.events.RESIZED),z.render())},O.overlayDOMNode=k.document.createElement("div"),O.overlayDOMNode.style.cssText=["position: absolute","width: 100%","height: 100%","top: 0","right: 0","pointer-events: none","overflow: hidden","user-select: none","-webkit-user-select: none"].join(";"),this.GUI=L,this.parameters=l.assignWith({viewMode:a.view,cameraMode:c.trackball,manipulateMode:x.manipulateModes.translate,voxelPaintColor:0,snapshotIncludeJs:!0,menuVisibility:!0,cameraAutoFit:!0,gridAutoFit:!0,gridVisible:!0,grid:[-1,-1,-1,1,1,1],gridColor:15132390,labelColor:4473924,antialias:1,logarithmicDepthBuffer:!0,screenshotScale:5,renderingSteps:1,clearColor:16777215,clippingPlanes:[],fpsMeter:!1,lighting:1.5,sliceViewerDirection:"z",sliceViewerObjectId:-1,sliceViewerMaskObjectIds:[],colorbarObjectId:-1,colorbarScientific:!1,fps:25,time:0,timeSpeed:1,axes:["x","y","z"],minimumFps:-1,cameraNoRotate:!1,cameraNoZoom:!1,cameraNoPan:!1,cameraRotateSpeed:1,cameraZoomSpeed:1.2,cameraPanSpeed:.3,cameraDampingFactor:0,name:null,cameraFov:60,cameraUpAxis:s.none,cameraAnimation:{},autoRendering:!0,axesHelper:1,axesHelperColors:[16711680,65280,255],depthPeels:0,snapshotType:"full",customData:null,additionalJsCode:"",hiddenObjectIds:[],guiVersion:n(59970).version},A||{},(e,t)=>void 0===t?e:t);let N=z.parameters.depthPeels;this.autoRendering=!1,this.setMinimumFps=function(e){z.parameters.minimumFps=e},this.startAutoPlay=function(){E.startAutoPlay(z,R)},this.stopAutoPlay=function(){E.stopAutoPlay(z)},this.setFps=function(e){z.parameters.fps=e,L.controls&&L.controls.controllersMap.fps.updateDisplay()},this.setTimeSpeed=function(e){z.parameters.timeSpeed=e,L.controls&&L.controls.controllersMap.timeSpeed.updateDisplay()},this.setAdditionalJsCode=function(e){z.parameters.additionalJsCode=e},this.setFpsMeter=function(e){let t;if(e){if(D)return;t=n(7739),D=new t,D.dom.style.position="absolute",O.targetDOMNode.appendChild(D.dom),requestAnimationFrame(function e(){D&&(D.update(),requestAnimationFrame(e))})}else D&&(D.domElement.remove(),D=null);z.parameters.fpsMeter=e,L.controls&&L.controls.controllers.forEach(e=>{"fpsMeter"===e.property&&e.updateDisplay()})},this.dispatch=V,this.Provider=e,this.setFullscreen=function(e){e?f.screenfull.request(O.targetDOMNode):f.screenfull.exit()},this.getFullscreen=function(){return f.screenfull.isFullscreen},this.setDirectionalLightingIntensity=function(e){z.parameters.lighting=Math.min(Math.max(e,0),4),z.getWorld().recalculateLights(z.parameters.lighting),z.render(),L.controls&&L.controls.controllers.forEach(e=>{"lighting"===e.property&&e.updateDisplay()})},this.setViewMode=function(e){z.parameters.viewMode=e,V(z.events.VIEW_MODE_CHANGE,e)&&z.render(),L.controls&&(L.controls.controllers.forEach(e=>{"viewMode"===e.property&&e.updateDisplay()}),x.refreshManipulateGUI(z,L)),O.targetDOMNode.style.cursor="auto"},this.setCameraMode=function(e){void 0===l.invert(c)[e]&&(e=c.trackball),z.parameters.cameraMode=e,z.getWorld().changeControls(),z.getWorld().setCameraToFitScene(!0),V(z.events.CAMERA_MODE_CHANGE,e),z.render(),L.controls&&L.controls.controllers.forEach(e=>{"cameraMode"===e.property&&e.updateDisplay()})},this.setManipulateMode=function(e){z.parameters.manipulateMode=e,V(z.events.MANIPULATE_MODE_CHANGE,e)&&z.render(),L.controls&&L.controls.controllers.forEach(e=>{"manipulateMode"===e.property&&e.updateDisplay()})},this.setAutoRendering=function(e){z.parameters.autoRendering=e},this.setMenuVisibility=function(e){z.parameters.menuVisibility=e,e?z.gui||B():z.gui&&(z.gui_map={},z.gui_groups={},z.gui_counts={},z.gui.destroy(),z.gui.domElement.remove(),z.gui=null)},this.setClippingPlanes=function(e){const t=l.cloneDeep(e);z.parameters.clippingPlanes.length=0,t.forEach(e=>{z.parameters.clippingPlanes.push(e)}),L.clippingPlanes&&M(z,L.clippingPlanes),z.render()},this.setSliceViewerMaskObjects=function(e){e=l.cloneDeep(e),z.parameters.sliceViewerMaskObjectIds.length=0,e.forEach(e=>{z.parameters.sliceViewerMaskObjectIds.push(e)}),Object.keys(O.ObjectsListJson).forEach(e=>{const t=-1!==z.parameters.sliceViewerMaskObjectIds.indexOf(parseInt(e,10));O.ObjectsListJson[e].volumeSliceMask=t,w.update(z,O.ObjectsListJson[e],L.objects,{volumeSliceMask:t})}),R("slice_viewer_mask_object_ids",z.parameters.sliceViewerMaskObjectIds),O.controls.reslice&&O.controls.reslice(),O.controls.update(),z.render()},this.setColorbarScientific=function(e){z.parameters.colorbarScientific=e,z.render()},this.setSliceViewerDirection=function(e){z.parameters.sliceViewerDirection=e,O.controls.update(),z.render()},this.setSliceViewer=function(e){const t=e.id||e;z.parameters.sliceViewerObjectId!==t&&(z.parameters.sliceViewerObjectId=t,R("slice_viewer_object_id",z.parameters.sliceViewerObjectId),Object.keys(O.ObjectsListJson).forEach(e=>{O.ObjectsListJson[e].sliceViewer&&(O.ObjectsListJson[e].sliceViewer=!1)}),t>0&&void 0!==O.ObjectsListJson[t]&&(O.ObjectsListJson[t].sliceViewer=!0),L.objects&&Object.keys(L.objects.folders).forEach(e=>{L.objects.folders[e].controllers.forEach(e=>{"sliceViewer"===e.property&&e.updateDisplay()})}),O.controls.update(),z.render())},this.setColorMapLegend=function(e){const t=e.id||e;z.parameters.colorbarObjectId!==t&&(z.parameters.colorbarObjectId=t,R("colorbar_object_id",z.parameters.colorbarObjectId),Object.keys(O.ObjectsListJson).forEach(e=>{O.ObjectsListJson[e].colorLegend&&(O.ObjectsListJson[e].colorLegend=!1)}),t>0&&void 0!==O.ObjectsListJson[t]&&(O.ObjectsListJson[t].colorLegend=!0),L.objects&&Object.keys(L.objects.folders).forEach(e=>{L.objects.folders[e].controllers.forEach(e=>{"colorLegend"===e.property&&e.updateDisplay()})})),b(z,O.ObjectsListJson[z.parameters.colorbarObjectId]||e)},this.setCameraAutoFit=function(e){z.parameters.cameraAutoFit=e,L.controls&&L.controls.controllers.forEach(e=>{"cameraAutoFit"===e.property&&e.updateDisplay()}),e&&z.getWorld().setCameraToFitScene()},this.setRenderingSteps=function(e){z.parameters.renderingSteps=e},this.setAxes=function(e){z.parameters.axes=e,z.rebuildSceneData(!0).then(()=>{z.render()})},this.setName=function(e){z.parameters.name=e},this.setAxesHelper=function(e){z.parameters.axesHelper=e,z.rebuildSceneData(!0).then(()=>{z.render()})},this.setAxesHelperColors=function(e){z.parameters.axesHelperColors=e,z.rebuildSceneData(!0).then(()=>{z.render()})},this.setGridAutoFit=function(e){z.parameters.gridAutoFit=e,L.controls&&L.controls.controllers.forEach(e=>{"gridAutoFit"===e.property&&e.updateDisplay()})},this.setCameraLock=function(e,t,n){z.parameters.cameraNoRotate=e,z.parameters.cameraNoZoom=t,z.parameters.cameraNoPan=n,O.controls.noRotate=e,O.controls.noZoom=t,O.controls.noPan=n},this.setCameraSpeeds=function(e,t,n){z.parameters.cameraRotateSpeed=e,z.parameters.cameraZoomSpeed=t,z.parameters.cameraPanSpeed=n,O.controls.rotateSpeed=e,O.controls.zoomSpeed=t,O.controls.panSpeed=n},this.setCameraFOV=function(e){z.parameters.cameraFov=e,O.setupCamera(null,e),L.controls&&L.controls.controllers.forEach(e=>{"cameraFov"===e.property&&e.updateDisplay()}),z.rebuildSceneData(!1).then(()=>{z.render()})},this.setCameraDampingFactor=function(e){z.parameters.cameraDampingFactor=e,z.getWorld().changeControls(!0)},this.setCameraUpAxis=function(e){z.parameters.cameraUpAxis=e,z.getWorld().changeControls(!0),L.controls&&L.controls.controllers.forEach(e=>{"cameraUpAxis"===e.property&&e.updateDisplay()}),z.rebuildSceneData(!1).then(()=>{z.render()})},this.setGridVisible=function(e){z.parameters.gridVisible=e,L.controls&&L.controls.controllers.forEach(e=>{"gridVisible"===e.property&&e.updateDisplay()}),z.refreshGrid(),z.render()},this.setGridColor=function(e){z.parameters.gridColor=e,z.rebuildSceneData().then(()=>{z.render()})},this.setDepthPeels=function(e){let t=[];return z.parameters.depthPeels=e,L.controls&&L.controls.controllers.forEach(e=>{"depthPeels"===e.property&&e.updateDisplay()}),(0===N&&e>0||N>0&&0===e)&&l.values(O.ObjectsListJson).forEach(e=>{t.push(z.reload(e))}),N=e,Promise.all(t).then(function(){z.render()})},this.setHiddenObjectIds=function(e){z.parameters.hiddenObjectIds=e,z.render()},this.setLabelColor=function(e){z.parameters.labelColor=e,z.rebuildSceneData(!0).then(()=>{z.render()})},this.setScreenshotScale=function(e){z.parameters.screenshotScale=e},this.setSnapshotType=function(e){z.parameters.snapshotType=e},this.setGrid=function(e){z.parameters.grid=e,z.rebuildSceneData(!0).then(()=>{z.refreshGrid(),z.render()})},this.setCamera=function(e){e.length>0&&O.setupCamera(e)},this.setCameraAnimation=function(e){z.parameters.cameraAnimation=e,L.controls&&E.refreshTimeScale(z,L)},this.resetCamera=function(e){O.setCameraToFitScene(!0,e),O.render()},this.setVoxelPaint=function(e){z.parameters.voxelPaintColor=e,L.controls&&L.controls.controllers.forEach(e=>{"voxelPaintColor"===e.property&&e.updateDisplay()})},this.setClearColor=function(e){if(z.parameters.clearColor=e,e>=0){const t=parseInt(e,10)+16777216;O.targetDOMNode.style.backgroundColor=`#${t.toString(16).substr(1)}`}else O.targetDOMNode.style.backgroundColor="#fff"},this.on=function(e,t){return j[e]=j[e]||{},j[e][I]=t,I+=1,I-1},this.off=function(e,t){j[e]=j[e]||{},delete j[e][t]},this.getScene=function(){return O.scene},this.addOrUpdateObject=function(e,t){try{U(e.id)}catch(e){}return"Text"!==e.type&&"Text2d"!==e.type&&O.K3DObjects.add(t),T+=1,z.heavyOperationSync=!0,T},this.getObjectById=function(e){return z.Provider.Helpers.getObjectById(O,e)},this.setChunkList=function(e){O.chunkList=e},this.removeObject=function(e){return U(e),delete O.ObjectsListJson[e],e===z.parameters.colorbarObjectId&&z.setColorMapLegend(-1),V(z.events.OBJECT_REMOVED,e),z.refreshAfterObjectsChange(!1),Promise.resolve(!0)},this.setTime=function(e){const t=E.getObjectsWithTimeSeriesAndMinMax(z);z.parameters.time=Math.min(Math.max(e,t.min),t.max);const n=t.objects.reduce((e,t)=>(e.push(z.reload(t,null,!0)),e),[]);if(Object.keys(z.parameters.cameraAnimation).length>0){const t={camera:z.parameters.cameraAnimation};t.camera.timeSeries=!0;const n=E.interpolateTimeSeries(t,e);O.setupCamera(n.json.camera,null,!0)}return L.controls&&L.controls.controllersMap.time.updateDisplay(),Promise.all(n).then(()=>z.refreshAfterObjectsChange(!0))},this.load=function(e){return d(z,e).then(e=>(e.forEach(e=>{w.update(z,e.json,L.objects,null),O.ObjectsListJson[e.json.id]=e.json,O.ObjectsById[e.json.id]=e.obj,(-1===z.parameters.colorbarObjectId&&e.json.color_range&&2===e.json.color_range.length||z.parameters.colorbarObjectId===e.json.id)&&z.setColorMapLegend(e.json)}),V(z.events.OBJECT_LOADED),z.refreshAfterObjectsChange(!1),e))},this.reload=function(e,t,n){if(!1===e.visible){!0!==n&&(z.refreshAfterObjectsChange(!0),w.update(z,e,L.objects,t));try{U(e.id)}catch(e){}return Promise.resolve(!0)}const r={objects:[e]};return null!==t&&(r.changes=[t]),d(z,r).then(e=>(e.forEach(e=>{!0!==n&&w.update(z,e.json,L.objects,t),O.ObjectsListJson[e.json.id]=e.json,O.ObjectsById[e.json.id]=e.obj,(-1===z.parameters.colorbarObjectId&&e.json.color_range&&2===e.json.color_range.length||z.parameters.colorbarObjectId===e.json.id)&&z.setColorMapLegend(e.json)}),V(z.events.OBJECT_LOADED),!0!==n&&z.refreshAfterObjectsChange(!0),e))},this.getWorld=function(){return O},this.getScreenshot=function(e,t){return u.getScreenshot(this,e,t)},this.getHTMLSnapshot=function(e){return m.getHTMLSnapshot(this,e)},this.getSnapshot=function(e){const t=Object.keys(O.chunkList).reduce((e,t)=>{const n=O.chunkList[t].attributes;return e[t]=Object.keys(n).reduce((e,t)=>(e[t]=p.serialize(n[t]),e),{}),e},{}),n=l.values(O.ObjectsListJson).map(e=>Object.keys(e).reduce((t,n)=>(t[n]=p.serialize(e[n]),t),{})),i=l.cloneDeep(z.parameters);return i.camera=z.getWorld().controls.getCameraArray(),r.zlibSync(o.encode({objects:n,chunkList:t,plot:i},{codec:S}),{level:e})},this.setSnapshot=function(e){try{return"string"==typeof e&&(e=r.unzlibSync(new Uint8Array(C(e)))),e instanceof Uint8Array&&(e=o.decode(e,{codec:S})),Object.keys(e.chunkList).forEach(t=>{const n=e.chunkList[t];O.chunkList[n.id]={attributes:Object.keys(n).reduce((e,t)=>(e[t]=p.deserialize(n[t]),e),{})}}),e.objects.forEach(e=>{Object.keys(e).forEach(t=>{e[t]=p.deserialize(e[t])})}),z.load({objects:e.objects}).then(()=>z.refreshAfterObjectsChange(!1,!0))}catch(e){throw console.error("K3D: Failed to set snapshot:",e.message),new Error("Invalid snapshot data: "+e.message)}},this.extractSnapshot=function(e){return e.match(/var data = '(.+)';/im)},this.disable=function(){this.disabling=!0,this.gui&&this.gui.destroy(),this.autoRendering=!1,Object.keys(O.ObjectsListJson).forEach(function(e){U(e),delete O.ObjectsListJson[e]}),O.cleanup(),D&&D.domElement.remove(),j={},this.resizeObserver.disconnect(),O.renderer.removeContextLossListener(),O.renderer.forceContextLoss()},O.targetDOMNode.appendChild(O.overlayDOMNode),this.Provider.Initializers.Renderer.call(O,this),this.Provider.Initializers.Setup.call(O,this),this.Provider.Initializers.Camera.call(O,this),this.Provider.Initializers.Canvas.call(O,this),this.Provider.Initializers.Scene.call(O,this),this.Provider.Initializers.Manipulate.call(O,this),this.resizeObserver=new ResizeObserver(e=>{this.resizeHelper()}),this.resizeObserver.observe(t),F=k.document.createElement("div"),F.className="dg",F.style.cssText=["position: absolute","top: 0","color: black","right: 0","z-index: 16777271",`max-height: ${t.clientHeight}px`].join(";"),O.targetDOMNode.appendChild(F),z.parameters.menuVisibility&&B(),this.resizeHelper(),z.setScreenshotScale(z.parameters.screenshotScale),z.setClearColor(z.parameters.clearColor),z.setMenuVisibility(z.parameters.menuVisibility),z.setTime(z.parameters.time),z.setFps(z.parameters.fps),z.setTimeSpeed(z.parameters.timeSpeed),z.setAdditionalJsCode(z.parameters.additionalJsCode),z.setGridAutoFit(z.parameters.gridAutoFit),z.setGridVisible(z.parameters.gridVisible),z.setGrid(z.parameters.grid),z.setDepthPeels(z.parameters.depthPeels),z.setCameraAutoFit(z.parameters.cameraAutoFit),z.setCameraDampingFactor(z.parameters.cameraDampingFactor),z.setCameraUpAxis(z.parameters.cameraUpAxis),z.setClippingPlanes(z.parameters.clippingPlanes),z.setSliceViewer(z.parameters.sliceViewerObjectId),z.setSliceViewerMaskObjects(z.parameters.sliceViewerMaskObjectIds),z.setSliceViewerDirection(z.parameters.sliceViewerDirection),z.setDirectionalLightingIntensity(z.parameters.lighting),z.setColorMapLegend(z.parameters.colorbarObjectId),z.setColorbarScientific(z.parameters.colorbarScientific),z.setAutoRendering(z.parameters.autoRendering),z.setCameraLock(z.parameters.cameraNoRotate,z.parameters.cameraNoZoom,z.parameters.cameraNoPan),z.setCameraSpeeds(z.parameters.cameraRotateSpeed,z.parameters.cameraZoomSpeed,z.parameters.cameraPanSpeed),z.setCameraFOV(z.parameters.cameraFov),z.setViewMode(z.parameters.viewMode),z.setHiddenObjectIds(z.parameters.hiddenObjectIds),z.setFpsMeter(z.parameters.fpsMeter),z.MsgpackCodec=S,z.msgpack=o,z.serialize=p,z.render(),O.targetDOMNode.className+=" k3d-target"}window.Float16Array=A,S.addExtPacker(32,A,e=>e),S.addExtUnpacker(32,e=>A(e.buffer)),P.prototype.events={VIEW_MODE_CHANGE:"viewModeChange",CAMERA_MODE_CHANGE:"cameraModeChange",MANIPULATE_MODE_CHANGE:"manipulateModeChange",RENDERED:"rendered",BEFORE_RENDER:"before_render",RESIZED:"resized",CAMERA_CHANGE:"cameraChange",OBJECT_LOADED:"objectLoaded",OBJECT_REMOVED:"objectRemoved",OBJECT_CHANGE:"objectChange",OBJECT_HOVERED:"objectHovered",OBJECT_CLICKED:"objectClicked",PARAMETERS_CHANGE:"parametersChange",VOXELS_CALLBACK:"voxelsCallback",MOUSE_MOVE:"mouseMove",MOUSE_CLICK:"mouseClick"},e.exports=P},4184:(e,t,n)=>{const r=n(6101),o=n(62419),{pow10ceil:i}=n(1184);let a,s;function l(e){return"object"==typeof e?e.data?{data:e.data.slice(0),shape:e.shape}:o.cloneDeep(e):e}function c(e){let t=0,n=0;const r=e.getWorld(),o=[];return Object.keys(r.ObjectsListJson).forEach(e=>{const i=r.ObjectsListJson[e];let a=!1;Object.keys(i).forEach(e=>{i[e]&&void 0!==i[e].timeSeries&&(a=!0,Object.keys(i[e]).forEach(e=>{Number.isNaN(parseFloat(e))||(t=Math.min(t,parseFloat(e)),n=Math.max(n,parseFloat(e)))}))}),a&&o.push(i)}),Object.keys(e.parameters.cameraAnimation).forEach(e=>{e=parseFloat(e),Number.isNaN(e)||(t=Math.min(t,e),n=Math.max(n,e))}),{min:t,max:n,objects:o}}function d(e,t,n,i){let a,s,l,c;if("model_matrix"===i){const o=new r.Matrix4,i=new r.Vector3,a=new r.Quaternion,s=new r.Vector3,l=new r.Vector3,c=new r.Quaternion,d=new r.Vector3;o.set.apply(o,e.data),o.decompose(i,a,s),o.set.apply(o,t.data),o.decompose(l,c,d),i.lerp(l,n),a.slerp(c,n),s.lerp(d,n),o.compose(i,a,s);const p=o.toArray();return{data:new Float32Array([p[0],p[4],p[8],p[12],p[1],p[5],p[9],p[13],p[2],p[6],p[10],p[14],p[3],p[7],p[11],p[15]]),shape:e.shape}}if("string"==typeof e)return n>.5?t:e;if("boolean"==typeof e)return n>.5?t:e;if(o.isNumber(e))return e+n*(t-e);if(e.data){if(l=Math.min(e.data.length,t.data.length),c=Math.max(e.data.length,t.data.length),s=new e.data.constructor(c),"colors"===i)for(a=0;a<l;a++){let r=255&e.data[a],o=255&t.data[a],i=e.data[a]>>8&255,l=t.data[a]>>8&255,c=e.data[a]>>16&255,d=t.data[a]>>16&255,p=Math.round(r+n*(o-r)),u=Math.round(i+n*(l-i)),m=Math.round(c+n*(d-c));s[a]=m<<16|u<<8|p}else for(a=0;a<l;a++)s[a]=e.data[a]+n*(t.data[a]-e.data[a]);if(l!==c)for(a=l;a<c;a++)s[a]=e.data[a]||t.data[a];return{data:s,shape:e.shape}}for(l=Math.min(e.length,t.length),c=Math.max(e.length,t.length),s=Array(c),a=0;a<s.length;a++)s[a]=e[a]+n*(t[a]-e[a]);if(l!==c)for(a=l;a<c;a++)s[a]=e[a]||t[a];return s}function p(e,t){let n=-1;a=null,e.autoPlayed||(e.autoPlayed=!0,requestAnimationFrame(function r(o){if(!e.autoPlayed)return;null===a&&(a=o-1e3*e.parameters.time/e.parameters.timeSpeed);let i=(o-a)/1e3;const s=Math.round(i*e.parameters.fps);if(s!==n){let r=i*e.parameters.timeSpeed;r>e.GUI.controls.controllersMap.time._max&&(r-=e.GUI.controls.controllersMap.time._max,a=o-r),e.setTime(r),n=s,t("time",r)}requestAnimationFrame(r)}),e.GUI.controls.controllersMap.autoPlay.name("Stop loop"))}function u(e){e.autoPlayed&&(e.autoPlayed=!1,e.GUI.controls.controllersMap.autoPlay.name("Play loop"))}e.exports={refreshTimeScale(e,t){const n=c(e);t.controls.controllersMap.time.min(n.min).max(n.max).step(i(n.max-n.min)/1e4),s.domElement.hidden=n.min===n.max},interpolateTimeSeries(e,t){const n={},r={};return Object.keys(e).forEach(o=>{let i,a,s,c,p;if(e[o]&&void 0!==e[o].timeSeries){if(i=Object.keys(e[o]).reduce((e,t)=>(Number.isNaN(parseFloat(t))||e.push({v:parseFloat(t),k:t}),e),[]).sort((e,t)=>e.v-t.v),t<=i[0].v)n[o]=e[o][i[0].k];else if(t>=i[i.length-1].v)n[o]=e[o][i[i.length-1].k];else for(c=0;c<i.length;c++){if(Math.abs(i[c].v-t)<.001){n[o]=l(e[o][i[c].k]);break}if(i[c].v>t&&c>0){a=i[c-1].v,s=i[c].v,p=(t-a)/(s-a),n[o]=d(e[o][i[c-1].k],e[o][i[c].k],p,o);break}}r[o]=n[o]}else n[o]=e[o]}),{json:n,changes:r}},getObjectsWithTimeSeriesAndMinMax:c,timeSeriesGUI(e,t,n){const r={togglePlay(){t.autoPlayed?u(t):p(t,n)}};e.controllersMap=e.controllersMap||{},s=e.addFolder("Animation").close(),e.controllersMap.time=s.add(t.parameters,"time").min(0).max(1).name("time").onChange(e=>{t.setTime(e),n("time",e)}),e.controllersMap.fps=s.add(t.parameters,"fps").min(0).max(120).name("fps").onChange(e=>{n("fps",e)}),e.controllersMap.timeSpeed=s.add(t.parameters,"timeSpeed").min(.1).max(5).step(.01).name("timeSpeed").onChange(e=>{a=null,n("timeSpeed",e)}),e.controllersMap.autoPlay=s.add(r,"togglePlay").name("Play loop")},startAutoPlay:p,stopAutoPlay:u}},5994:(e,t,n)=>{const r=n(64022),o=n(62419),{areAllChangesResolve:i}=n(98947),{commonUpdate:a}=n(98947);function s(e){const t=e.coord.data[0],n=e.coord.data[1],r=e.coord.data[2],o=e.voxels.shape[2],i=e.voxels.shape[1],a=e.voxels.shape[0],{data:s}=e.voxels;function l(t){let n=e.coord.data[0]-t.offset[0],r=e.coord.data[1]-t.offset[1],o=e.coord.data[2]-t.offset[2];return n=n<0?1e3:n,r=r<0?1e3:r,o=o<0?1e3:o,n+r+o}this.neighbours=[],this.data=s,this.set=function(e,s,l,c,d){const p=e-t,u=s-n,m=l-r;if(p>=0&&p<o&&u>=0&&u<i&&m>=0&&m<a)this.data[(m*i+u)*o+p]=c;else if(!d)for(let t=0;t<this.neighbours.length;t++)if(this.neighbours[t].voxels.set(e,s,l,c,!0))return!0;return!0},this.get=function(e,s,l,c){const d=e-t,p=s-n,u=l-r;if(d>=0&&d<o&&p>=0&&p<i&&u>=0&&u<a)return this.data[(u*i+p)*o+d];if(!c)for(let t=0;t<this.neighbours.length;t++){const n=this.neighbours[t].voxels.get(e,s,l,!0);if(-1!==n)return n}return-1},this.setNeighbours=function(t,n){this.neighbours=t.reduce((t,r)=>{if(r.id===n.id)return t;const o=Math.max(e.coord.data[0]+e.voxels.shape[2],r.offset[0]+r.size[0])-Math.min(e.coord.data[0],r.offset[0]),i=Math.max(e.coord.data[1]+e.voxels.shape[1],r.offset[1]+r.size[1])-Math.min(e.coord.data[1],r.offset[1]),a=Math.max(e.coord.data[2]+e.voxels.shape[0],r.offset[2]+r.size[2])-Math.min(e.coord.data[2],r.offset[2]),s=e.voxels.shape[2]+r.size[0],l=e.voxels.shape[1]+r.size[1],c=e.voxels.shape[0]+r.size[2];if(o<=s&&i<=l&&a<=c){if(o===s&&i===l&&a===c)return t;t.push(r)}return t},[]),this.neighbours.sort((e,t)=>l(e)-l(t))}}function l(e,t){return{voxels:new s(e),size:[e.voxels.shape[2],e.voxels.shape[1],e.voxels.shape[0]],offset:e.coord.data,multiple:e.multiple,id:e.id||t,idx:t}}e.exports={create(e,t){const n=[];return void 0!==e.voxels_group&&e.voxels_group.forEach((e,t)=>{n.push(l(e,t))}),void 0!==e.chunks_ids&&e.chunks_ids.forEach((e,r)=>{n.push(l(t.getWorld().chunkList[e].attributes,r))}),n.forEach(e=>{e.voxels.setNeighbours(n,e)}),r.create(e,n,e.space_size.data,t)},update(e,t,n,r){const s={};if(void 0===t.opacity||t.opacity.timeSeries||(n.traverse(t=>{t.material&&(t.material.userData.outline?(t.material.uniforms.opacity.value=.75*e.opacity,t.material.opacity=t.material.uniforms.opacity.value):(t.material.opacity=e.opacity,t.material.depthWrite=1===e.opacity,t.material.transparent=1!==e.opacity))}),s.opacity=null),void 0!==t.chunks_ids&&!t.chunks_ids.timeSeries){const e={},i=new Set;n.children.forEach(t=>{t.voxel&&(e[t.voxel.chunk.id]=t)});const a=Object.keys(e).reduce((e,t)=>(e.push(parseInt(t,10)),e),[]);o.difference(a,t.chunks_ids).forEach(t=>{e[t].voxel.chunk.voxels.neighbours.forEach(e=>{i.add(e.id)}),n.remove(e[t]),n.voxelsChunks=n.voxelsChunks.filter(e=>e.id!==t),e[t].children.forEach(e=>{e.geometry.dispose(),e.material.dispose()}),e[t]=null}),o.difference(t.chunks_ids,a).forEach(t=>{const o=l(r.getWorld().chunkList[t].attributes,n.voxelsChunks.length),i=n.addChunk(o);n.voxelsChunks.push(o),e[t]=i}),n.voxelsChunks.forEach(e=>{e.voxels.setNeighbours(n.voxelsChunks,e)}),o.difference(t.chunks_ids,a).forEach(t=>{const{chunk:n}=e[t].voxel;i.add(n.id),n.voxels.neighbours.forEach(e=>{i.add(e.id)})}),i.forEach(t=>{e[t]&&n.updateChunk(e[t].voxel.chunk,!0)}),s.chunks_ids=null}return void 0===t._hold_remeshing||t._hold_remeshing.timeSeries||(n.holdRemeshing=e._hold_remeshing,e._hold_remeshing||n.rebuildChunk(),s._hold_remeshing=null),a(e,t,s,n,r),!!i(t,s)&&Promise.resolve({json:e,obj:n})}}},6230:e=>{"use strict";e.exports="#include <common>\r\n#include <color_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nuniform vec4 slicePlanes[MAXIMUM_SLICE_PLANES];\r\nuniform int slicePlanesCount;\r\n\r\nattribute vec3 next1;\r\nattribute vec3 next2;\r\nvarying float vectorVisible;\r\n\r\nvec3 intersectPlane(vec3 p1, vec3 p2, vec4 p) {\r\n    vec3 lineDirection = p2 - p1;\r\n\r\n    float distance1 = abs(dot(p1, p.xyz) + p.w);\r\n    float distance2 = abs(dot(p2, p.xyz) + p.w);\r\n\r\n    return p1 + lineDirection * distance1 / (distance1 + distance2);\r\n}\r\n\r\nvoid main() {\r\n    #include <color_vertex>\r\n\r\n    vec3 transformed = vec3(position);\r\n    vec3 transformedNext1 = vec3(next1);\r\n    vec3 transformedNext2 = vec3(next2);\r\n\r\n    vec4 mvPosition = vec4(transformed, 1.0);\r\n    vec4 mvPositionNext1 = vec4(transformedNext1, 1.0);\r\n    vec4 mvPositionNext2 = vec4(transformedNext2, 1.0);\r\n\r\n    for (int i = 0; i < slicePlanesCount; i++) {\r\n\r\n        vec4 slicePlane = slicePlanes[i];\r\n\r\n        bool side1 = dot(-mvPosition.xyz, slicePlane.xyz) > slicePlane.w;\r\n        bool side2 = dot(-mvPositionNext1.xyz, slicePlane.xyz) > slicePlane.w;\r\n        bool side3 = dot(-mvPositionNext2.xyz, slicePlane.xyz) > slicePlane.w;\r\n\r\n        if (!((side1 && side2 && side3) || (!side1 && !side2 && !side3))) {\r\n\r\n            if (side1 ^^ side2) {\r\n                mvPosition.xyz = intersectPlane(mvPosition.xyz, mvPositionNext1.xyz, slicePlane);\r\n            }\r\n\r\n            if (side1 ^^ side3) {\r\n                mvPosition.xyz = intersectPlane(mvPosition.xyz, mvPositionNext2.xyz, slicePlane);\r\n            }\r\n\r\n            mvPosition = modelViewMatrix * mvPosition;\r\n\r\n            vectorVisible = 1.0;\r\n\r\n            gl_Position = projectionMatrix * mvPosition;\r\n\r\n            #include <logdepthbuf_vertex>\r\n            #include <worldpos_vertex>\r\n            #include <clipping_planes_vertex>\r\n            return;\r\n        }\r\n    }\r\n\r\n    vectorVisible = 0.0;\r\n    gl_Position = vec4(0.0);\r\n}\r\n"},7659:e=>{function t(e){return{position:e.point.toArray(),distance:e.distance,index:e.index,K3DIdentifier:e.object.K3DIdentifier}}e.exports=function(e,n){return{onHover:e=>(n.dispatch(n.events.OBJECT_HOVERED,t(e)),!1),onClick:e=>(n.dispatch(n.events.OBJECT_CLICKED,t(e)),!1)}}},7915:(e,t,n)=>{const r=n(6101),{decodeFloat16:o}=n(1184);function i(e){const t=e.object.material.uniforms.volumeTexture.value[0],n=t.type===r.HalfFloatType,i=t.source.data,a=e.object.position.clone().sub(e.object.scale.clone().divideScalar(2)),s=e.point.clone().sub(a).divide(e.object.scale).multiply(new r.Vector3(i.width-1,i.height-1,i.depth-1)).round();let l=i.data[s.z*i.width*i.height+s.y*i.width+s.x];return n&&(l=o(l)),{position:e.point.toArray(),normal:e.face.normal.toArray(),distance:e.distance,face_index:e.faceIndex,face:[e.face.a,e.face.b,e.face.c],uv:e.uv,coord:[s.x,s.y,s.z],K3DIdentifier:e.object.K3DIdentifier,value:l}}e.exports=function(e,t){return{onHover:e=>(t.dispatch(t.events.OBJECT_HOVERED,i(e)),!1),onClick:e=>(t.dispatch(t.events.OBJECT_CLICKED,i(e)),!1)}}},8444:e=>{const t={trackball:"trackball",fly:"fly",orbit:"orbit",sliceViewer:"slice_viewer",volumeSides:"volume_sides"};e.exports={cameraModeGUI:function(e,n){e.add(n.parameters,"cameraMode",{Trackball:t.trackball,Orbit:t.orbit,Fly:t.fly,SliceViewer:t.sliceViewer,VolumeSides:t.volumeSides}).name("Camera").onChange(e=>{n.setCameraMode(e),n.dispatch(n.events.PARAMETERS_CHANGE,{key:"camera_mode",value:e})})},cameraModes:t}},8502:(e,t,n)=>{const r=n(6101),o=n(62419),i=n(76749),{closestPowOfTwo:a}=n(98947),{typedArrayToThree:s}=n(98947),{areAllChangesResolve:l}=n(98947),{commonUpdate:c}=n(98947),{ensure256size:d}=n(98947);e.exports={create(e,t){e.samples=e.samples||512,e.alpha_coef=void 0!==e.alpha_coef?e.alpha_coef:50,e.gradient_step=e.gradient_step||.005,e.shadow=e.shadow||"off",e.interpolation=void 0===e.interpolation||e.interpolation,e.shadow_delay=e.shadow_delay||500,e.shadow_res=a(e.shadow_res||128),e.ray_samples_count=e.ray_samples_count||16,e.focal_plane=e.focal_plane||512,e.focal_length=void 0!==e.focal_length?e.focal_length:0;const l=void 0!==window.randomMul?window.randomMul:255,c=t.getWorld().renderer.getContext(),p=new r.BoxBufferGeometry(1,1,1),u=new r.Matrix4,m=new r.Vector3,h=new r.Quaternion,g=new r.Vector3,f=c.getParameter(c.MAX_TEXTURE_SIZE);let v=e.shadow_res;const y=e.color_map&&e.color_map.data||null;let _=e.opacity_function&&e.opacity_function.data||null;const x=e.color_range,{samples:b}=e;let w,M,E,C,S,A,P,z=null,D=!1,T=0;v=v>512?512:v;const k=a(Math.sqrt(v*v*v));if(k>f)throw new Error(`To big light map size. gl.MAX_TEXTURE_SIZE=${f}`);null===_&&(_=[y[0],0,y[y.length-4],1]),u.set.apply(u,e.model_matrix.data),u.decompose(m,h,g);const O=new r.Data3DTexture(e.volume.data,e.volume.shape[2],e.volume.shape[1],e.volume.shape[0]);O.format=r.RedFormat,O.type=s(e.volume.data.constructor),O.generateMipmaps=!1,e.interpolation?(O.minFilter=r.LinearFilter,O.magFilter=r.LinearFilter):(O.minFilter=r.NearestFilter,O.magFilter=r.NearestFilter),O.wrapS=r.ClampToEdgeWrapping,O.wrapT=r.ClampToEdgeWrapping,O.wrapR=r.ClampToEdgeWrapping,O.needsUpdate=!0,S=new r.DataTexture(new Uint8Array(o.range(4096).map(()=>l*Math.random())),64,64,r.RedFormat,r.UnsignedByteType),S.minFilter=r.LinearFilter,S.magFilter=r.LinearFilter,S.wrapS=r.MirroredRepeatWrapping,S.wrapT=r.MirroredRepeatWrapping,S.generateMipmaps=!1,S.needsUpdate=!0;const j=i.createCanvasGradient(y,1024,1,_),I=new r.CanvasTexture(j,r.UVMapping,r.ClampToEdgeWrapping,r.ClampToEdgeWrapping,r.NearestFilter,r.NearestFilter);I.needsUpdate=!0,"off"!==e.shadow&&(C=new r.WebGLRenderTarget(k,k,{minFilter:r.LinearFilter,magFilter:r.LinearFilter,format:r.RedFormat,type:r.UnsignedByteType,generateMipmaps:!1,stencilBuffer:!1,depthBuffer:!1})),e.mask.data.length>0&&e.mask_opacities.data.length>0&&(z=new r.Data3DTexture(e.mask.data,e.mask.shape[2],e.mask.shape[1],e.mask.shape[0]),z.format=r.RedFormat,z.type=r.UnsignedByteType,z.generateMipmaps=!1,z.minFilter=r.NearestFilter,z.magFilter=r.NearestFilter,z.wrapS=r.ClampToEdgeWrapping,z.wrapT=r.ClampToEdgeWrapping,z.needsUpdate=!0,D=!0);const L={maskOpacities:{value:d(e.mask_opacities.data)},lightMapSize:{value:new r.Vector3(v,v,v)},volumeMapSize:{value:new r.Vector3(e.volume.shape[2],e.volume.shape[1],e.volume.shape[0])},lightMapRenderTargetSize:{value:new r.Vector2(k,k)},low:{value:x[0]},high:{value:x[1]},samples:{value:b},alpha_coef:{value:e.alpha_coef},gradient_step:{value:e.gradient_step},translation:{value:m},rotation:{value:h},shadowTexture:{type:"t",value:C?C.texture:null},focal_length:{value:e.focal_length},focal_plane:{value:e.focal_plane},scale:{value:g},volumeTexture:{type:"t",value:O},mask:{type:"t",value:z},colormap:{type:"t",value:I},jitterTexture:{type:"t",value:S}},F=new r.ShaderMaterial({uniforms:o.merge(L,r.UniformsLib.lights),defines:{USE_SHADOW:"off"!==e.shadow?1:0,USE_MASK:D?1:0,RAY_SAMPLES_COUNT:0!==e.focal_length?e.ray_samples_count:0},vertexShader:n(85138),fragmentShader:n(22096),side:r.BackSide,depthTest:!1,depthWrite:!1,lights:!0,clipping:!0,transparent:!0});p.computeBoundingSphere(),p.computeBoundingBox();const V=new r.Mesh(p,F);return V.applyMatrix4(u),V.updateMatrixWorld(),"off"!==e.shadow&&(w=new r.Scene,E=new r.Mesh(new r.PlaneBufferGeometry(k,k),new r.ShaderMaterial({uniforms:o.merge(L,r.UniformsLib.lights,{lightDirection:{type:"v3",value:new r.Vector3}}),defines:{USE_MAP:1,USE_MASK:D?1:0},vertexShader:n(60378),fragmentShader:n(65320),clipping:!0,depthWrite:!1,depthTest:!1})),E.applyMatrix4(u),E.updateMatrixWorld(),M=new r.OrthographicCamera(k/-2,k/2,k/2,k/-2,-1e4,1e4),M.position.z=100,w.add(E),V.refreshLightMap=function(e){if(C){const{renderer:n}=t.getWorld(),o=new r.Vector3;e?E.material.uniforms.lightDirection.value.fromArray(e).normalize():(t.getWorld().camera.getWorldPosition(o),E.material.uniforms.lightDirection.value.copy(m.clone().sub(o).normalize())),t.getWorld().camera.updateMatrixWorld(),E.material.uniformsNeedUpdate=!0,n.clippingPlanes=[],t.parameters.clippingPlanes.forEach(e=>{n.clippingPlanes.push(new r.Plane((new r.Vector3).fromArray(e),e[3]))}),n.setRenderTarget(C),n.clear(!0,!0,!0),n.render(w,M),n.setRenderTarget(null)}},"dynamic"===e.shadow&&(A=t.on(t.events.BEFORE_RENDER,()=>{const n=(new Date).getTime();P&&clearTimeout(P),n-T>=e.shadow_delay?(V.refreshLightMap(),T=n):P=setTimeout(()=>{V.refreshLightMap(),T=n,t.render()},Math.max(e.shadow_delay,500))})),V.quadRTT=E,V.refreshLightMap()),V.onRemove=function(){E&&(E.material.uniforms.volumeTexture.value.dispose(),E.material.uniforms.volumeTexture.value=void 0),V.material.uniforms.volumeTexture.value=void 0,V.material.uniforms.colormap.value.dispose(),V.material.uniforms.colormap.value=void 0,S.dispose(),S=void 0,w&&(w=void 0),M&&(M=void 0),C&&(C.dispose(),C=void 0),A&&t.off(t.events.BEFORE_RENDER,A)},Promise.resolve(V)},update(e,t,n,r){const o={};if(void 0===t.color_range||t.color_range.timeSeries||(n.material.uniforms.low.value=t.color_range[0],n.material.uniforms.high.value=t.color_range[1],o.color_range=null),void 0!==t.focal_length&&!t.focal_length.timeSeries&&(0===n.material.uniforms.focal_length.value&&0!==t.focal_length||0===t.focal_length))return!1;if(void 0===t.volume||t.volume.timeSeries||n.material.uniforms.volumeTexture.value.image.data.constructor===t.volume.data.constructor&&n.material.uniforms.volumeTexture.value.image.width===t.volume.shape[2]&&n.material.uniforms.volumeTexture.value.image.height===t.volume.shape[1]&&n.material.uniforms.volumeTexture.value.image.depth===t.volume.shape[0]&&(n.material.uniforms.volumeTexture.value.image.data=t.volume.data,n.material.uniforms.volumeTexture.value.needsUpdate=!0,o.volume=null),void 0===t.mask||t.mask.timeSeries||null!==n.material.uniforms.mask.value&&n.material.uniforms.mask.value.image.data.constructor===t.mask.data.constructor&&n.material.uniforms.mask.value.image.width===t.mask.shape[2]&&n.material.uniforms.mask.value.image.height===t.mask.shape[1]&&n.material.uniforms.mask.value.image.depth===t.mask.shape[0]&&(n.material.uniforms.mask.value.image.data=t.mask.data,n.material.uniforms.mask.value.needsUpdate=!0,o.mask=null),void 0===t.mask_opacities||t.mask_opacities.timeSeries||null!==n.material.uniforms.maskOpacities.value&&(n.material.uniforms.maskOpacities.value=d(t.mask_opacities.data),n.material.uniforms.maskOpacities.value.needsUpdate=!0,o.mask_opacities=null),void 0!==t.color_map&&!t.color_map.timeSeries||void 0!==t.opacity_function&&!t.opacity_function.timeSeries){const r=i.createCanvasGradient(t.color_map&&t.color_map.data||e.color_map.data,1024,1,t.opacity_function&&t.opacity_function.data||e.opacity_function.data);n.material.uniforms.colormap.value.image=r,n.material.uniforms.colormap.value.needsUpdate=!0,n.quadRTT&&(n.quadRTT.material.uniforms.colormap.value.image=r,n.quadRTT.material.uniforms.colormap.value.needsUpdate=!0),o.color_map=null,o.opacity_function=null}return["samples","alpha_coef","gradient_step","focal_plane","focal_length"].forEach(e=>{void 0===t[e]||t[e].timeSeries||(n.material.uniforms[e].value=t[e],o[e]=null)}),c(e,t,o,n,r),!!l(t,o)&&Promise.resolve({json:e,obj:n})}}},9418:(e,t,n)=>{"use strict";n.d(t,{A:()=>r});const r="<div id=\"canvasTarget_[ID]\" class=\"k3d_plot\" style=\"position: relative;\"></div>\n\n<script>\n  var K3DInstance;\n  var data_[ID] = '[DATA]';\n\n  function loadScript(path, cb) {\n    var script = document.createElement('script');\n    script.src = path;\n    script.onload = cb;\n    script.onerror = cb;\n    document.head.appendChild(script);\n  }\n\n  function loadK3D() {\n    function load(lib) {\n      function _base64ToArrayBuffer(base64) {\n        var binary_string = window.atob(base64);\n        var len = binary_string.length;\n        var bytes = new Uint8Array(len);\n        for (var i = 0; i < len; i++) {\n          bytes[i] = binary_string.charCodeAt(i);\n        }\n        return bytes;\n      }\n\n      try {\n        document.getElementById('canvasTarget_[ID]').style.cssText = [\n          'height:[HEIGHT]px',\n          'position: relative',\n        ].join(';');\n\n        K3DInstance = new lib.CreateK3DAndLoadBinarySnapshot(\n          _base64ToArrayBuffer(data_[ID]),\n          document.getElementById('canvasTarget_[ID]'),\n        );\n\n        K3DInstance.then(function (K3DInstance) {\n          [ADDITIONAL]\n        });\n      } catch (e) {\n        console.log(e);\n        return;\n      }\n    }\n\n    require(['k3d'],\n            load,\n            function () {\n              loadScript('https://unpkg.com/k3d@[VERSION]/dist/standalone.js', function () {\n                try {\n                  delete require.s.contexts._.registry.k3d;\n                } catch(err) {\n                  console.log(err);\n                }\n\n                require(['k3d'], load);\n              });\n            });\n  }\n\n  if (typeof (require) === 'undefined') {\n    loadScript('https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js', loadK3D);\n  } else {\n    loadK3D();\n  }\n<\/script>"},10017:(e,t,n)=>{const r=n(6101),o=n(69522),{handleColorMap:i}=n(98947),{areAllChangesResolve:a}=n(98947),{commonUpdate:s}=n(98947);e.exports={create(e,t){e.visible=void 0===e.visible||e.visible,e.color=void 0!==e.color?e.color:255,e.wireframe=void 0!==e.wireframe&&e.wireframe,e.flat_shading=void 0===e.flat_shading||e.flat_shading,e.opacity=void 0!==e.opacity?e.opacity:1,e.shininess=void 0!==e.shininess?e.shininess:50;const n=e.heights.data,a=e.heights.shape[1],s=e.heights.shape[0],l=new r.Matrix4,c=e.wireframe?r.MeshBasicMaterial:r.MeshPhongMaterial,d=e.color_range,p=e.color_map&&e.color_map.data||null,u=e.attribute&&e.attribute.data||null,m=new c({color:e.color,opacity:e.opacity,depthWrite:1===e.opacity,transparent:1!==e.opacity,emissive:0,shininess:e.shininess,specular:1118481,side:r.DoubleSide,flatShading:e.flat_shading,wireframe:e.wireframe}),h=new r.BufferGeometry,g=new Float32Array(a*s*3),f=[];let v,y,_,x;for(y=0,_=0,x=0;y<s;y++)for(v=0;v<a;v++,x++,_+=3)g[_]=v/(a-1),g[_+1]=y/(s-1),g[_+2]=n[x];for(y=0,_=0;y<s-1;y++)for(v=0;v<a-1;v++,_+=6)f[_]=v+y*a,f[_+1]=v+1+y*a,f[_+3]=f[_+1],f[_+2]=v+(y+1)*a,f[_+5]=f[_+2],f[_+4]=v+1+(y+1)*a;h.setAttribute("position",new r.BufferAttribute(g,3)),h.setIndex(f),!1===e.flat_shading&&h.computeVertexNormals(),u&&d&&p&&u.length>0&&d.length>0&&p.length>0&&i(h,p,d,u,m),h.computeBoundingSphere(),h.computeBoundingBox();const b=new r.Mesh(h,m);return o.init(e,b,t),l.set.apply(l,e.model_matrix.data),b.position.set(-.5,-.5,0),b.initialPosition=b.position.clone(),b.updateMatrix(),b.applyMatrix4(l),b.updateMatrixWorld(),Promise.resolve(b)},update(e,t,n,r){const i={};return o.update(e,t,i,n),s(e,t,i,n,r),!!a(t,i)&&Promise.resolve({json:e,obj:n})}}},11271:(e,t,n)=>{const r=n(6101),o=n(62419),i=n(21051),a=n(70770),s=n(99834)(r),{viewModes:l}=n(69358),{pow10ceil:c}=n(1184),{cameraModes:d}=n(8444);let p=null;function u(e){const t=new r.Box3;let n,o=e.getWorld();return Object.keys(o.ObjectsListJson).forEach(function(e){let r=o.ObjectsById[e];r&&r.traverse(e=>{if(e&&void 0!==e.position.z&&e.visible&&(e.geometry||e.boundingBox)){if(e.geometry&&e.geometry.boundingBox)n=e.geometry.boundingBox.clone();else{if(!e.boundingBox)return void console.log("Object without bbox");n=e.boundingBox.clone()}n.applyMatrix4(e.matrixWorld),t.union(n)}})}),t.getSize(new r.Vector3).lengthSq()<Number.EPSILON&&t.max.addScalar(.1),t.isEmpty()?null:t}function m(e,t){Object.keys(e.planes).forEach(n=>{e.planes[n].forEach(e=>{t.remove(e.obj),delete e.obj})}),Object.keys(e.labelsOnPlanes).forEach(t=>{e.labelsOnPlanes[t].labels.forEach(e=>{e.onRemove()})})}function h(e,t,n,l){const d=this;if(p)return Promise.all(p).then(()=>h.bind(d)(e,t,n,l));const u=[];let g,f,v,y,_,x,b=(new r.Box3).setFromArray(e.parameters.grid);const w={x:new r.Vector3(1,0,0),y:new r.Vector3(0,1,0),z:new r.Vector3(0,0,1)},M={"+x+y+z":["+x-y","+x-z","-x+y","+y-z","-x+z","-y+z"],"+x+y-z":["+x-y","+x+z","-x+y","+y+z","-x-z","-y-z"],"+x-y+z":["+x+y","+x-z","-x-y","-y-z","-x+z","+y+z"],"+x-y-z":["+x+y","+x+z","-x-y","-y+z","-x-z","+y-z"],"-x+y+z":["-x-y","-x-z","+x+y","+y-z","+x+z","-y+z"],"-x+y-z":["-x-y","-x+z","+x+y","+y+z","+x-z","-y-z"],"-x-y+z":["-x+y","-x-z","+x-y","-y-z","+x+z","+y+z"],"-x-y-z":["-x+y","-x+z","+x-y","-y+z","+x-z","+y-z"]},E=["x","x","y","y","z","z"],C=new r.Color(e.parameters.gridColor),S=new r.Color(e.parameters.labelColor);if(f=!e.parameters.axesHelper||e.parameters.axesHelper&&!n.x,n.x&&!f&&(f|=e.parameters.axes[0]!==n.x.text||e.parameters.axes[1]!==n.y.text||e.parameters.axes[2]!==n.z.text,f|=e.parameters.axesHelperColors[0]!==n.x.color||e.parameters.axesHelperColors[1]!==n.y.color||e.parameters.axesHelperColors[2]!==n.z.color),f&&(["x","y","z"].forEach(e=>{n[e]&&(n[e].onRemove(),n.scene.remove(n[e]),n[e]=null)}),n.arrows&&(n.scene.remove(n.arrows),n.arrows=null)),e.parameters.axesHelper>1?(n.width=e.parameters.axesHelper,n.height=e.parameters.axesHelper):e.parameters.axesHelper>0&&(n.width=100,n.height=100),f&&e.parameters.axesHelper>0&&function(e,t){const n=[],o=e.parameters.axesHelperColors,s={x:[1,0,0],y:[0,1,0],z:[0,0,1]},l={x:0,y:1,z:2},c=new r.Color(e.parameters.labelColor);["x","y","z"].forEach((a,d)=>{const p=i.create({position:(new r.Vector3).fromArray(s[a]).multiplyScalar(1.1).toArray(),reference_point:"cc",color:c,text:e.parameters.axes[l[a]],size:.75},e,t);n.push(p.then(e=>{t[a]=e,t[a].color=o[d]}))});const d=a.create({colors:{data:[o[0],o[0],o[1],o[1],o[2],o[2]]},origins:{data:[0,0,0,0,0,0,0,0,0]},vectors:{data:[].concat(s.x,s.y,s.z)},line_width:.05,head_size:2.5},e);return n.push(d.then(e=>{t.arrows=e,t.scene.add(e)})),n}(e,n).forEach(e=>{u.push(e)}),e.parameters.gridAutoFit||l){for(b=e.getSceneBoundingBox()||b,m(t,this.gridScene),v=b.getSize(new r.Vector3),y=c(Math.max(v.x,v.y,v.z))/10,_=y/10,["x","y","z"].forEach(e=>{b.min[e]===b.max[e]&&(b.min[e]-=y/2,b.max[e]+=y/2)}),v=b.getSize(new r.Vector3),b.min=new r.Vector3(Math.floor(b.min.x/_)*_,Math.floor(b.min.y/_)*_,Math.floor(b.min.z/_)*_),b.max=new r.Vector3(Math.ceil(b.max.x/_)*_,Math.ceil(b.max.y/_)*_,Math.ceil(b.max.z/_)*_),v=b.getSize(new r.Vector3),t.planes={x:[{normal:new r.Vector3(-1,0,0),p1:new r.Vector3(b.max.x,b.min.y,b.min.z),p2:b.max},{normal:new r.Vector3(1,0,0),p1:b.min,p2:new r.Vector3(b.min.x,b.max.y,b.max.z)}],y:[{normal:new r.Vector3(0,-1,0),p1:new r.Vector3(b.min.x,b.max.y,b.min.z),p2:b.max},{normal:new r.Vector3(0,1,0),p1:b.min,p2:new r.Vector3(b.max.x,b.min.y,b.max.z)}],z:[{normal:new r.Vector3(0,0,-1),p1:new r.Vector3(b.min.x,b.min.y,b.max.z),p2:b.max},{normal:new r.Vector3(0,0,1),p1:b.min,p2:new r.Vector3(b.max.x,b.max.y,b.min.z)}]},A=b,g={"-x+z":[new r.Vector3(A.min.x,A.min.y,A.max.z),new r.Vector3(A.min.x,A.max.y,A.max.z)],"+y+z":[new r.Vector3(A.min.x,A.max.y,A.max.z),A.max],"+x+z":[new r.Vector3(A.max.x,A.min.y,A.max.z),A.max],"-y+z":[new r.Vector3(A.min.x,A.min.y,A.max.z),new r.Vector3(A.max.x,A.min.y,A.max.z)],"-x-z":[A.min,new r.Vector3(A.min.x,A.max.y,A.min.z)],"+y-z":[new r.Vector3(A.min.x,A.max.y,A.min.z),new r.Vector3(A.max.x,A.max.y,A.min.z)],"+x-z":[new r.Vector3(A.max.x,A.min.y,A.min.z),new r.Vector3(A.max.x,A.max.y,A.min.z)],"-y-z":[A.min,new r.Vector3(A.max.x,A.min.y,A.min.z)],"-x+y":[new r.Vector3(A.min.x,A.max.y,A.min.z),new r.Vector3(A.min.x,A.max.y,A.max.z)],"-x-y":[A.min,new r.Vector3(A.min.x,A.min.y,A.max.z)],"+x+y":[new r.Vector3(A.max.x,A.max.y,A.min.z),A.max],"+x-y":[new r.Vector3(A.max.x,A.min.y,A.min.z),new r.Vector3(A.max.x,A.min.y,A.max.z)]},x=0;x<8;x++){let n=(1&x?"-":"+")+"x"+(2&x?"-":"+")+"y"+(4&x?"-":"+")+"z";t.labelsOnPlanes[n]={},t.labelsOnPlanes[n].labels=[],M[n].forEach(function(a,s){let l,c,d;const p=o.difference(["x","y","z"],a.replace(/[^xyz]/g,"").split(""))[0];let m=w[p].clone().multiplyScalar(y),h=v[p]/y,f=g[a];if(h<=2){const e=h;h=Math.max(5*e,2),m=w[p].clone().multiplyScalar(e*y/h)}let x="+"===n[2*Math.floor(s/2)];for(l=1;l<=h-1;l++)c=f[0].clone().add(m.clone().multiplyScalar(l)).add(w[E[s]].clone().multiplyScalar(_*(x?1:-1))),d=i.create({position:c.toArray(),reference_point:"cc",color:S,text:parseFloat(c[p].toFixed(10)).toString(),size:.75},e),u.push(d.then(e=>{t.labelsOnPlanes[n].labels.push(e)}));c=(new r.Vector3).lerpVectors(f[0],f[1],.5).add(w[E[s]].clone().multiplyScalar(2*_*(x?1:-1))),i.create({position:c.toArray(),reference_point:"cc",color:S,text:e.parameters.axes[["x","y","z"].indexOf(p)],size:1},e).then(e=>{t.labelsOnPlanes[n].labels.push(e)})})}Object.keys(t.planes).forEach(function(n){t.planes[n].forEach(function(t){let o=[];const i=[],a=[],l=["x","y","z"].filter(e=>e!==n),c=new s.MeshLine,d=new s.MeshLineMaterial({color:new r.Color(1,1,1),opacity:.75,sizeAttenuation:!0,transparent:!0,lineWidth:.05*_,resolution:new r.Vector2(e.getWorld().width,e.getWorld().height),side:r.DoubleSide},e);l.forEach(e=>{const n=w[e].clone().multiplyScalar(_);let r,s,l;for(l=0;l<=v[e]/_;l++)r=t.p1.clone().add(n.clone().multiplyScalar(l)),o=o.concat(r.toArray()),s=t.p2.clone(),s[e]=r[e],o=o.concat(s.toArray()),l%10==0?(i.push(1.5,1.5),a.push(.72*C.r,.72*C.g,.72*C.b),a.push(.72*C.r,.72*C.g,.72*C.b)):(i.push(1,1),a.push(C.r,C.g,C.b),a.push(C.r,C.g,C.b))},this),c.setGeometry(new Float32Array(o),!0,i,a),c.geometry.computeBoundingSphere(),c.geometry.computeBoundingBox(),t.obj=new r.Mesh(c.geometry,d),this.gridScene.add(t.obj)},this)},this)}var A;const P=b.clone();Object.keys(t.planes).forEach(function(e){t.planes[e].forEach(e=>{P.union(e.obj.geometry.boundingBox.clone())},this)},this);const z=P.getSize(new r.Vector3).length(),D=z/2/Math.sin(r.Math.degToRad(e.parameters.cameraFov/2));return this.camera.far=5*(D+z/2),this.camera.near=1e-4*z,this.camera.updateProjectionMatrix(),p=u,Promise.all(u).then(e=>(p=null,e))}function g(e,t){let n="";const o=new r.Vector3;this.camera.getWorldDirection(o),Object.keys(t.planes).forEach(r=>{const i=t.planes[r][0].normal.dot(o),a=t.planes[r][1].normal.dot(o);t.planes[r][0].obj.visible=i<=a&&e.parameters.gridVisible,t.planes[r][1].obj.visible=i>a&&e.parameters.gridVisible,n+=(i<=a?"-":"+")+r},this),Object.keys(t.labelsOnPlanes).forEach(r=>{t.labelsOnPlanes[r].labels.forEach(t=>{r===n&&e.parameters.gridVisible?t.show():t.hide()})})}function f(e,t,n,o,i,a){const s=[];let l=[],c=!1;if(this.raycaster.setFromCamera(new r.Vector2(t,n),o),this.K3DObjects.traverse(e=>{if(e.interactions){if(e.geometry&&0===e.geometry.attributes.position.count)return;e.interactions.intersect?l=l.concat(e.interactions.intersect(this.raycaster)):s.push(e)}}),s.length>0&&(l=l.concat(this.raycaster.intersectObjects(s))),l.length>0){let t=l[0];e.getWorld().targetDOMNode.style.cursor="pointer",!i&&t.object.interactions&&t.object.interactions.onHover&&(c|=t.object.interactions.onHover(t,a)),i&&t.object.interactions&&t.object.interactions.onClick&&(c|=t.object.interactions.onClick(t,a))}else e.getWorld().targetDOMNode.style.cursor="auto";return c}e.exports={Init(e){const t=new r.AmbientLight(16777215),n={planes:{},labelsOnPlanes:{}},o=this;function i(t,n){if(void 0===n){if(null===o.lastMouseCoord)return;n=o.lastMouseCoord}o.lastMouseCoord=n,e.parameters.viewMode!==l.view&&(e.parameters.cameraMode===d.volumeSides?n.x<0&&n.y>0?(e.getWorld().controls.beforeRender(0),f.call(o,e,2*(n.x+.5),2*(n.y-.5),o.camera,t,e.parameters.viewMode)&&!e.autoRendering&&e.render(),e.getWorld().controls.afterRender(0)):n.x<0&&n.y<0?(e.getWorld().controls.beforeRender(1),f.call(o,e,2*(n.x+.5),1+2*n.y,o.camera,t,e.parameters.viewMode)&&!e.autoRendering&&e.render(),e.getWorld().controls.afterRender(1)):n.x>0&&n.y>0?(e.getWorld().controls.beforeRender(2),f.call(o,e,2*n.x-1,2*(n.y-.5),o.camera,t,e.parameters.viewMode)&&!e.autoRendering&&e.render(),e.getWorld().controls.afterRender(2)):n.x>0&&n.y<0&&(e.getWorld().controls.beforeRender(3),f.call(o,e,2*n.x-1,1+2*n.y,o.camera,t,e.parameters.viewMode)&&!e.autoRendering&&e.render(),e.getWorld().controls.afterRender(3)):f.call(o,e,n.x,n.y,o.camera,t,e.parameters.viewMode)&&!e.autoRendering&&e.render())}this.lastMouseCoord=null,this.lights=[],this.raycaster=new r.Raycaster,this.raycaster.firstHitOnly=!0,this.keyLight=new r.DirectionalLight(16777215),this.headLight=new r.DirectionalLight(16777215),this.fillLight=new r.DirectionalLight(16777215),this.backLight=new r.DirectionalLight(16777215),this.keyLight.position.set(.25,1,1),this.headLight.position.set(0,0,1),this.fillLight.position.set(-.25,-1,1),this.backLight.position.set(-2.5,.4,-1),this.scene=new r.Scene,this.gridScene=new r.Scene,this.axesHelper.scene=new r.Scene,this.K3DObjects=new r.Group,[this.keyLight,this.headLight,this.fillLight,this.backLight].forEach(e=>{o.camera.add(e),o.camera.add(e.target)}),this.scene.add(t),this.scene.add(this.camera),this.scene.add(this.K3DObjects),this.cleanup=m.bind(this,n,this.gridScene),e.rebuildSceneData=h.bind(this,e,n,this.axesHelper),e.getSceneBoundingBox=u.bind(this,e),e.refreshGrid=g.bind(this,e,n),e.rebuildSceneData().then(()=>{e.refreshGrid(),e.render()}),this.recalculateLights=function(e){t.intensity=e<=1?1-.8*e:.2,o.keyLight.intensity=.4*e,o.headLight.intensity=.15*e,o.fillLight.intensity=.15*e,o.backLight.intensity=.1*e,o.backLight.visible=e>0,o.headLight.visible=e>0,o.fillLight.visible=e>0,o.backLight.visible=e>0},e.on(e.events.MOUSE_MOVE,i.bind(this,!1)),e.on(e.events.MOUSE_CLICK,i.bind(this,!0)),e.on(e.events.RENDERED,function(){setTimeout(i.bind(this,!1),0)}),e.on(e.events.RESIZED,function(){Object.keys(n.planes).forEach(function(t){n.planes[t].forEach(t=>{const n=t.obj.material.uniforms.resolution;n.value.x=e.getWorld().width,n.value.y=e.getWorld().height},this)},this)})}}},11794:(module,__unused_webpack_exports,__webpack_require__)=>{const widgets=__webpack_require__(21453),_=__webpack_require__(62419),K3D=__webpack_require__(3899),TFEdit=__webpack_require__(64756),serialize=__webpack_require__(63806),ThreeJsProvider=__webpack_require__(61812),CreateK3DAndLoadBinarySnapshot=__webpack_require__(56389).CreateK3DAndLoadBinarySnapshot,{viewModes}=__webpack_require__(69358),semverRange=__webpack_require__(31800).version,objectsList={},chunkList={},plotsList=[];function runOnEveryPlot(e,t){plotsList.forEach(n=>{-1!==n.model.get("object_ids").indexOf(e)&&t(n,n.K3DInstance.getObjectById(e))})}function evalInContext(){let K3DInstance=this.K3DInstance;eval(this.K3DInstance.parameters.additionalJsCode)}class ChunkModel extends widgets.WidgetModel{static serializers={...widgets.WidgetModel.serializers,voxels:serialize,coord:serialize};defaults(){return{...super.defaults(),_model_name:"ChunkModel",_model_module:"k3d",_model_module_version:semverRange}}initialize(){const e=arguments[0];widgets.WidgetModel.prototype.initialize.apply(this,arguments),this.on("change",this._change,this),chunkList[e.id]=this}_change(){const e=this.attributes;Object.keys(objectsList).forEach(t=>{"VoxelsGroup"===objectsList[t].attributes.type&&runOnEveryPlot(objectsList[t].attributes.id,(t,n)=>{n.updateChunk(e)})})}}class ObjectModel extends widgets.WidgetModel{static serializers={...widgets.WidgetModel.serializers,model_matrix:serialize,positions:serialize,scalar_field:serialize,alpha_coef:serialize,shadow:serialize,shadow_res:serialize,shadow_delay:serialize,ray_samples_count:serialize,focal_plane:serialize,focal_length:serialize,gradient_step:serialize,color_map:serialize,samples:serialize,color_range:serialize,attribute:serialize,triangles_attribute:serialize,vertices:serialize,indices:serialize,colors:serialize,origins:serialize,vectors:serialize,opacity:serialize,slice_x:serialize,slice_y:serialize,slice_z:serialize,opacities:serialize,point_sizes:serialize,point_size:serialize,width:serialize,shader:serialize,wireframe:serialize,radial_segments:serialize,color:serialize,flat_shading:serialize,heights:serialize,mesh_detail:serialize,voxels:serialize,voxels_group:serialize,sparse_voxels:serialize,space_size:serialize,volume:serialize,opacity_function:serialize,text:serialize,texture:serialize,binary:serialize,size:serialize,position:serialize,puv:serialize,visible:serialize,uvs:serialize,mask:serialize,color_map_masks:serialize,active_masks:serialize,volume_bounds:serialize,spacings_x:serialize,spacings_y:serialize,spacings_z:serialize,mask_opacities:serialize};defaults(){return{...super.defaults(),_model_name:"ObjectModel",_view_name:"ObjectView",_model_module:"k3d",_view_module:"k3d",_model_module_version:semverRange,_view_module_version:semverRange}}initialize(){const e=arguments[0];widgets.WidgetModel.prototype.initialize.apply(this,arguments),this.on("change",this._change,this),this.on("msg:custom",function(e){let t;"fetch"===e.msg_type&&(t=this.get(e.field),_.isObject(t)&&null!==t&&(t._lastModified=Date.now()),t.data&&t.shape&&(t.compression_level=this.attributes.compression_level),this.save(e.field,t)),"shadow_map_update"===e.msg_type&&"Volume"===this.get("type")&&runOnEveryPlot(this.get("id"),(t,n)=>{n&&n.refreshLightMap&&(n.refreshLightMap(e.direction),t.K3DInstance.render())})},this),objectsList[e.id]=this}_change(e){plotsList.forEach(function(t){t.refreshObject(this,e.changed)},this)}}const ObjectView=widgets.WidgetView.extend({});class PlotModel extends widgets.DOMWidgetModel{defaults(){return{...super.defaults(),_model_name:"PlotModel",_view_name:"PlotView",_model_module:"k3d",_view_module:"k3d",_model_module_version:semverRange,_view_module_version:semverRange}}}class PlotView extends widgets.DOMWidgetView{render(){const e=window.document.createElement("div"),t=window.document.createElement("div");e.style.cssText=[`height:${this.model.get("height")}px`,"position: relative"].join(";"),t.style.cssText=["width: 100%","height: 100%","position: relative"].join(";"),e.appendChild(t),this.el.appendChild(e),this.container=t,this.on("displayed",this._init,this)}remove(){_.pull(plotsList,this),this.K3DInstance.off(this.K3DInstance.events.CAMERA_CHANGE,this.cameraChangeId),this.K3DInstance.off(this.K3DInstance.events.OBJECT_CHANGE,this.GUIObjectChanges),this.K3DInstance.off(this.K3DInstance.events.PARAMETERS_CHANGE,this.GUIParametersChanges),this.K3DInstance.off(this.K3DInstance.events.VOXELS_CALLBACK,this.voxelsCallback),this.K3DInstance.off(this.K3DInstance.events.OBJECT_HOVERED,this.objectHoverCallback),this.K3DInstance.off(this.K3DInstance.events.OBJECT_CLICKED,this.objectClickCallback)}_init(){const e=this;this.renderPromises=[],plotsList.push(this),this.model.lastCameraSync=(new Date).getTime(),this.model.on("msg:custom",function(t){const{model:n}=this;"fetch_screenshot"===t.msg_type&&this.K3DInstance.getScreenshot(this.K3DInstance.parameters.screenshotScale,t.only_canvas).then(e=>{const t=e.toDataURL().split(",")[1];n.save("screenshot",t,{patch:!0})}),"fetch_snapshot"===t.msg_type&&n.save("snapshot",this.K3DInstance.getHTMLSnapshot(t.compression_level),{patch:!0}),"start_auto_play"===t.msg_type&&this.K3DInstance.startAutoPlay(),"stop_auto_play"===t.msg_type&&this.K3DInstance.stopAutoPlay(),"reset_camera"===t.msg_type&&this.K3DInstance.resetCamera(t.factor),"render"===t.msg_type&&(0===e.renderPromises.length?e.K3DInstance.refreshAfterObjectsChange(!1,!0):Promise.all(e.renderPromises).then(t=>{e.K3DInstance.refreshAfterObjectsChange(!1,!0),t.length===e.renderPromises.length&&(e.renderPromises=[])}))},this),this.model.on("change:camera_auto_fit",this._setCameraAutoFit,this),this.model.on("change:lighting",this._setDirectionalLightingIntensity,this),this.model.on("change:time",this._setTime,this),this.model.on("change:fps",this._setFps,this),this.model.on("change:time_speed",this._setTimeSpeed,this),this.model.on("change:grid_auto_fit",this._setGridAutoFit,this),this.model.on("change:grid_visible",this._setGridVisible,this),this.model.on("change:grid_color",this._setGridColor,this),this.model.on("change:label_color",this._setLabelColor,this),this.model.on("change:depth_peels",this._setDepthPeels,this),this.model.on("change:fps_meter",this._setFpsMeter,this),this.model.on("change:screenshot_scale",this._setScreenshotScale,this),this.model.on("change:voxel_paint_color",this._setVoxelPaintColor,this),this.model.on("change:background_color",this._setBackgroundColor,this),this.model.on("change:grid",this._setGrid,this),this.model.on("change:auto_rendering",this._setAutoRendering,this),this.model.on("change:camera",this._setCamera,this),this.model.on("change:camera_animation",this._setCameraAnimation,this),this.model.on("change:clipping_planes",this._setClippingPlanes,this),this.model.on("change:slice_viewer_mask_object_ids",this._setSliceViewMaskObjectIds,this),this.model.on("change:object_ids",this._onObjectsListChange,this),this.model.on("change:menu_visibility",this._setMenuVisibility,this),this.model.on("change:colorbar_object_id",this._setColorMapLegend,this),this.model.on("change:slice_viewer_object_id",this._setSliceViewer,this),this.model.on("change:slice_viewer_direction",this._setSliceViewerDirection,this),this.model.on("change:colorbar_scientific",this._setColorbarScientific,this),this.model.on("change:rendering_steps",this._setRenderingSteps,this),this.model.on("change:axes",this._setAxes,this),this.model.on("change:camera_no_rotate",this._setCameraLock,this),this.model.on("change:camera_no_zoom",this._setCameraLock,this),this.model.on("change:camera_no_pan",this._setCameraLock,this),this.model.on("change:camera_rotate_speed",this._setCameraSpeeds,this),this.model.on("change:camera_zoom_speed",this._setCameraSpeeds,this),this.model.on("change:camera_pan_speed",this._setCameraSpeeds,this),this.model.on("change:camera_fov",this._setCameraFOV,this),this.model.on("change:camera_damping_factor",this._setCameraDampingFactor,this),this.model.on("change:camera_up_axis",this._setCameraUpAxis,this),this.model.on("change:axes_helper",this._setAxesHelper,this),this.model.on("change:axes_helper_colors",this._setAxesHelperColors,this),this.model.on("change:snapshot_type",this._setSnapshotType,this),this.model.on("change:name",this._setName,this),this.model.on("change:mode",this._setViewMode,this),this.model.on("change:minimum_fps",this._setMinimumFps,this),this.model.on("change:camera_mode",this._setCameraMode,this),this.model.on("change:manipulate_mode",this._setManipulateMode,this),this.model.on("change:hidden_object_ids",this._setHiddenObjectIds,this),this.model.on("change:additional_js_code",this._setAdditionalJsCode,this);try{this.K3DInstance=new K3D(ThreeJsProvider,this.container,{antialias:this.model.get("antialias"),logarithmicDepthBuffer:this.model.get("logarithmic_depth_buffer"),lighting:this.model.get("lighting"),cameraMode:this.model.get("camera_mode"),snapshotType:this.model.get("snapshot_type"),backendVersion:this.model.get("_backend_version"),screenshotScale:this.model.get("screenshot_scale"),menuVisibility:this.model.get("menu_visibility"),cameraAutoFit:this.model.get("camera_auto_fit"),cameraNoRotate:this.model.get("camera_no_rotate"),cameraNoZoom:this.model.get("camera_no_zoom"),cameraNoPan:this.model.get("camera_no_pan"),cameraRotateSpeed:this.model.get("camera_rotate_speed"),cameraZoomSpeed:this.model.get("camera_zoom_speed"),cameraPanSpeed:this.model.get("camera_pan_speed"),cameraDampingFactor:this.model.get("camera_damping_factor"),cameraFov:this.model.get("camera_fov"),colorbarObjectId:this.model.get("colorbar_object_id"),cameraAnimation:this.model.get("camera_animation"),sliceViewerMaskObjectIds:this.model.get("slice_viewer_mask_object_ids"),sliceViewerObjectId:this.model.get("slice_viewer_object_id"),sliceViewerDirection:this.model.get("slice_viewer_direction"),name:this.model.get("name"),axes:this.model.get("axes"),axesHelper:this.model.get("axes_helper"),grid:this.model.get("grid"),fps:this.model.get("fps"),depthPeels:this.model.get("depth_peels"),autoRendering:this.model.get("auto_rendering"),gridVisible:this.model.get("grid_visible"),gridColor:this.model.get("grid_color"),gridAutoFit:this.model.get("grid_auto_fit"),clippingPlanes:this.model.get("clipping_planes"),labelColor:this.model.get("label_color"),voxelPaintColor:this.model.get("voxel_paint_color"),hiddenObjectIds:this.model.get("hidden_object_ids"),additionalJsCode:this.model.get("additional_js_code")}),!1===this.model.get("camera_auto_fit")&&this.K3DInstance.setCamera(this.model.get("camera"))}catch(e){return void console.log(e)}this.K3DInstance.setClearColor(this.model.get("background_color")),this.K3DInstance.setChunkList(chunkList),this.model.get("object_ids").forEach(function(e){this.renderPromises.push(this.K3DInstance.load({objects:[objectsList[e].attributes]}))},this),this.cameraChangeId=this.K3DInstance.on(this.K3DInstance.events.CAMERA_CHANGE,t=>{e.model._comm_live&&(new Date).getTime()-e.model.lastCameraSync>200&&(e.model.lastCameraSync=(new Date).getTime(),e.model.save("camera",t,{patch:!0}))}),this.GUIObjectChanges=this.K3DInstance.on(this.K3DInstance.events.OBJECT_CHANGE,t=>{e.model._comm_live&&(t.value.data&&t.value.shape&&(t.value.compression_level=objectsList[t.id].attributes.compression_level),objectsList[t.id]&&objectsList[t.id].save(t.key,t.value,{patch:!0}))}),this.GUIParametersChanges=this.K3DInstance.on(this.K3DInstance.events.PARAMETERS_CHANGE,t=>{e.model.save(t.key,t.value,{patch:!0})}),this.voxelsCallback=this.K3DInstance.on(this.K3DInstance.events.VOXELS_CALLBACK,e=>{objectsList[e.object.K3DIdentifier]&&objectsList[e.object.K3DIdentifier].send({msg_type:"click_callback",coord:e.coord})}),this.objectHoverCallback=this.K3DInstance.on(this.K3DInstance.events.OBJECT_HOVERED,e=>{objectsList[e.K3DIdentifier]&&this.K3DInstance.parameters.viewMode===viewModes.callback&&objectsList[e.K3DIdentifier].send(_.extend({msg_type:"hover_callback"},e))}),this.objectClickCallback=this.K3DInstance.on(this.K3DInstance.events.OBJECT_CLICKED,e=>{objectsList[e.K3DIdentifier]&&this.K3DInstance.parameters.viewMode===viewModes.callback&&objectsList[e.K3DIdentifier].send(_.extend({msg_type:"click_callback"},e))}),evalInContext.call(this)}_setDirectionalLightingIntensity(){this.K3DInstance.setDirectionalLightingIntensity(this.model.get("lighting"))}_setTime(){this.K3DInstance.parameters.time!==this.model.get("time")&&this.renderPromises.push(this.K3DInstance.setTime(this.model.get("time")))}_setCameraAutoFit(){this.K3DInstance.setCameraAutoFit(this.model.get("camera_auto_fit"))}_setGridAutoFit(){this.K3DInstance.setGridAutoFit(this.model.get("grid_auto_fit"))}_setGridVisible(){this.K3DInstance.setGridVisible(this.model.get("grid_visible"))}_setGridColor(){this.K3DInstance.setGridColor(this.model.get("grid_color"))}_setLabelColor(){this.K3DInstance.setLabelColor(this.model.get("label_color"))}_setDepthPeels(){this.K3DInstance.setDepthPeels(this.model.get("depth_peels"))}_setSliceViewer(){this.K3DInstance.setSliceViewer(this.model.get("slice_viewer_object_id"))}_setSliceViewerDirection(){this.K3DInstance.setSliceViewerDirection(this.model.get("slice_viewer_direction"))}_setHiddenObjectIds(){this.K3DInstance.setHiddenObjectIds(this.model.get("hidden_object_ids"))}_setAdditionalJsCode(){this.K3DInstance.setAdditionalJsCode(this.model.get("additional_js_code")),evalInContext.call(this)}_setFps(){this.K3DInstance.setFps(this.model.get("fps"))}_setTimeSpeed(){this.K3DInstance.setTimeSpeed(this.model.get("time_speed"))}_setFpsMeter(){this.K3DInstance.setFpsMeter(this.model.get("fps_meter"))}_setScreenshotScale(){this.K3DInstance.setScreenshotScale(this.model.get("screenshot_scale"))}_setVoxelPaintColor(){this.K3DInstance.setVoxelPaint(this.model.get("voxel_paint_color"))}_setBackgroundColor(){this.K3DInstance.setClearColor(this.model.get("background_color"))}_setGrid(){this.K3DInstance.setGrid(this.model.get("grid"))}_setAutoRendering(){this.K3DInstance.setAutoRendering(this.model.get("auto_rendering"))}_setMenuVisibility(){this.K3DInstance.setMenuVisibility(this.model.get("menu_visibility"))}_setColorMapLegend(){this.K3DInstance.setColorMapLegend(this.model.get("colorbar_object_id"))}_setColorbarScientific(){this.K3DInstance.setColorbarScientific(this.model.get("colorbar_scientific"))}_setCamera(){this.K3DInstance.setCamera(this.model.get("camera"))}_setCameraAnimation(){this.K3DInstance.setCameraAnimation(this.model.get("camera_animation"))}_setRenderingSteps(){this.K3DInstance.setRenderingSteps(this.model.get("rendering_steps"))}_setAxes(){this.K3DInstance.setAxes(this.model.get("axes"))}_setName(){this.K3DInstance.setName(this.model.get("name"))}_setViewMode(){this.K3DInstance.setViewMode(this.model.get("mode"))}_setMinimumFps(){this.K3DInstance.setMinimumFps(this.model.get("minimum_fps"))}_setCameraMode(){this.K3DInstance.setCameraMode(this.model.get("camera_mode"))}_setManipulateMode(){this.K3DInstance.setManipulateMode(this.model.get("manipulate_mode"))}_setAxesHelper(){this.K3DInstance.setAxesHelper(this.model.get("axes_helper"))}_setAxesHelperColors(){this.K3DInstance.setAxesHelperColors(this.model.get("axes_helper_colors"))}_setSnapshotType(){this.K3DInstance.setSnapshotType(this.model.get("snapshot_type"))}_setCameraLock(){this.K3DInstance.setCameraLock(this.model.get("camera_no_rotate"),this.model.get("camera_no_zoom"),this.model.get("camera_no_pan"))}_setCameraSpeeds(){this.K3DInstance.setCameraSpeeds(this.model.get("camera_rotate_speed"),this.model.get("camera_zoom_speed"),this.model.get("camera_pan_speed"))}_setCameraFOV(){this.K3DInstance.setCameraFOV(this.model.get("camera_fov"))}_setCameraDampingFactor(){this.K3DInstance.setCameraDampingFactor(this.model.get("camera_damping_factor"))}_setCameraUpAxis(){this.K3DInstance.setCameraUpAxis(this.model.get("camera_up_axis"))}_setClippingPlanes(){this.K3DInstance.setClippingPlanes(this.model.get("clipping_planes"))}_setSliceViewMaskObjectIds(){this.K3DInstance.setSliceViewerMaskObjects(this.model.get("slice_viewer_mask_object_ids"))}_onObjectsListChange(){const e=this.model.previous("object_ids"),t=this.model.get("object_ids");_.difference(e,t).forEach(function(e){this.renderPromises.push(this.K3DInstance.removeObject(e))},this),_.difference(t,e).forEach(function(e){this.renderPromises.push(this.K3DInstance.load({objects:[objectsList[e].attributes]}))},this)}refreshObject(e,t){-1!==this.model.get("object_ids").indexOf(e.get("id"))&&this.renderPromises.push(this.K3DInstance.reload(objectsList[e.get("id")].attributes,t))}processPhosphorMessage(e){switch(widgets.DOMWidgetView.prototype.processPhosphorMessage.call(this,e),e.type){case"after-attach":this.el.addEventListener("contextmenu",this,!0);break;case"before-detach":this.el.removeEventListener("contextmenu",this,!0);break;case"resize":this.handleResize(e)}}handleEvent(e){"contextmenu"===e.type?this.handleContextMenu(e):widgets.DOMWidgetView.prototype.handleEvent.call(this,e)}handleContextMenu(e){this.container.contains(e.target)&&(e.preventDefault(),e.stopPropagation())}handleResize(){this.K3DInstance&&this.K3DInstance.resizeHelper()}}module.exports={ChunkModel,PlotModel,PlotView,ObjectModel,ObjectView,ThreeJsProvider,CreateK3DAndLoadBinarySnapshot,TransferFunctionEditor:TFEdit.transferFunctionEditor,TransferFunctionModel:TFEdit.transferFunctionModel,TransferFunctionView:TFEdit.transferFunctionView,K3D}},11904:(e,t,n)=>{"use strict";n.d(t,{A:()=>r});const r="<!doctype html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>K3D snapshot viewer - [TIMESTAMP]</title>\n    <style>\n        body, html {\n            background-color: #F5F5F5;\n            margin: 0;\n            padding: 0;\n            overflow: hidden;\n        }\n\n        #canvasTarget {\n            width: 100%;\n            height: 100%;\n            position: absolute;\n        }\n    </style>\n    <script id='fflatejs'>[FFLATE_JS]<\/script>\n    <script>\n        window.k3dCompressed = '[K3D_SOURCE]';\n\n        function _base64ToArrayBuffer(base64) {\n            var binary_string = window.atob(base64);\n            var len = binary_string.length;\n            var bytes = new Uint8Array(len);\n            for (var i = 0; i < len; i++) {\n                bytes[i] = binary_string.charCodeAt(i);\n            }\n            return bytes;\n        }\n\n        var k3dSource = fflate.strFromU8(\n            fflate.unzlibSync(_base64ToArrayBuffer(window.k3dCompressed))\n        );\n    <\/script>\n    <script id='requirejs'>[REQUIRE_JS]<\/script>\n</head>\n<body>\n<div id=\"canvasTarget\"></div>\n<script>\n    var K3DInstance;\n    var data = '[DATA]';\n\n    // k3dSource is always trustable here, as it is generated by K3D and not user-supplied\n    eval(k3dSource);\n\n    require(['k3d'], function (lib) {\n        try {\n            K3DInstance = new lib.CreateK3DAndLoadBinarySnapshot(\n                _base64ToArrayBuffer(data),\n                document.getElementById('canvasTarget'),\n            );\n\n            K3DInstance.then(function(K3DInstance) {\n                [ADDITIONAL]\n            });\n        } catch (e) {\n            console.log(e);\n            return;\n        }\n    });\n<\/script>\n</body>\n</html>"},12471:e=>{e.exports=function(e){e.STLLoader=function(t){this.manager=void 0!==t?t:e.DefaultLoadingManager},e.STLLoader.prototype={constructor:e.STLLoader,load(t,n,r,o){const i=this,a=new e.FileLoader(i.manager);a.setPath(i.path),a.setResponseType("arraybuffer"),a.load(t,e=>{try{n(i.parse(e))}catch(e){o&&o(e)}},r,o)},setPath(e){return this.path=e,this},parse(t){function n(e,t,n){for(let r=0,o=e.length;r<o;r++)if(e[r]!==t.getUint8(n+r,!1))return!1;return!0}const r=function(e){if("string"==typeof e){const t=new Uint8Array(e.length);for(let n=0;n<e.length;n++)t[n]=255&e.charCodeAt(n);return t.buffer||t}return e}(t);return function(e){let t,r,o,i;if(i=new DataView(e),r=50,o=i.getUint32(80,!0),t=84+50*o,t===i.byteLength)return!0;const a=[115,111,108,105,100];for(let e=0;e<5;e++)if(n(a,i,e))return!1;return!0}(r)?function(t){const n=new DataView(t),r=n.getUint32(80,!0);let o,i,a,s,l,c,d,p,u=!1;for(let e=0;e<70;e++)1129270351==n.getUint32(e,!1)&&82==n.getUint8(e+4)&&61==n.getUint8(e+5)&&(u=!0,s=[],l=n.getUint8(e+6)/255,c=n.getUint8(e+7)/255,d=n.getUint8(e+8)/255,p=n.getUint8(e+9)/255);const m=new e.BufferGeometry,h=[],g=[];for(let e=0;e<r;e++){const t=84+50*e,r=n.getFloat32(t,!0),p=n.getFloat32(t+4,!0),m=n.getFloat32(t+8,!0);if(u){const e=n.getUint16(t+48,!0);32768&e?(o=l,i=c,a=d):(o=(31&e)/31,i=(e>>5&31)/31,a=(e>>10&31)/31)}for(let e=1;e<=3;e++){const l=t+12*e;h.push(n.getFloat32(l,!0)),h.push(n.getFloat32(l+4,!0)),h.push(n.getFloat32(l+8,!0)),g.push(r,p,m),u&&s.push(o,i,a)}}return m.setAttribute("position",new e.BufferAttribute(new Float32Array(h),3)),m.setAttribute("normal",new e.BufferAttribute(new Float32Array(g),3)),u&&(m.setAttribute("color",new e.BufferAttribute(new Float32Array(s),3)),m.hasColors=!0,m.alpha=p),m}(r):function(t){const n=new e.BufferGeometry,r=/facet([\s\S]*?)endfacet/g;let o=0;const i=/[\s]+([+-]?(?:\d*)(?:\.\d*)?(?:[eE][+-]?\d+)?)/.source,a=new RegExp(`vertex${i}${i}${i}`,"g"),s=new RegExp(`normal${i}${i}${i}`,"g"),l=[],c=[],d=new e.Vector3;let p;for(;null!==(p=r.exec(t));){let e=0,t=0;const n=p[0];for(;null!==(p=s.exec(n));)d.x=parseFloat(p[1]),d.y=parseFloat(p[2]),d.z=parseFloat(p[3]),t++;for(;null!==(p=a.exec(n));)l.push(parseFloat(p[1]),parseFloat(p[2]),parseFloat(p[3])),c.push(d.x,d.y,d.z),e++;1!==t&&console.error(`THREE.STLLoader: Something isn't right with the normal of face number ${o}`),3!==e&&console.error(`THREE.STLLoader: Something isn't right with the vertices of face number ${o}`),o++}return n.setAttribute("position",new e.Float32BufferAttribute(l,3)),n.setAttribute("normal",new e.Float32BufferAttribute(c,3)),n}("string"!=typeof(o=t)?e.LoaderUtils.decodeText(new Uint8Array(o)):o);var o}}}},12979:(e,t,n)=>{const r=n(6101),{viewModes:o}=n(69358);e.exports=function(e){const t=e.getWorld();let n=!1;e.on(e.events.VIEW_MODE_CHANGE,i=>{i===o.manipulate?t.K3DObjects.children.forEach(o=>{if(!o.transformControls&&t.ObjectsListJson[o.K3DIdentifier].model_matrix){const i=new r.TransformControls(t.camera,t.renderer.domElement);i.addEventListener("change",()=>{t.render()}),i.addEventListener("dragging-changed",e=>{t.controls.enabled=!e.value,!1===n&&e.value&&(n=!0,t.K3DObjects.children.forEach(t=>{t.transformControls&&t.transformControls!==e.target&&(t.transformControls.enabled=!1)})),!0!==n||e.value||(n=!1,t.K3DObjects.children.forEach(e=>{e.transformControls&&(e.transformControls.enabled=!0)}))}),i.setMode(e.parameters.manipulateMode),t.scene.add(i),i.attach(o),o.transformControls=i}}):t.K3DObjects.children.forEach(e=>{e.transformControls&&(e.transformControls.detach(),e.transformControls.dispose(),delete e.transformControls)})}),e.on(e.events.MANIPULATE_MODE_CHANGE,e=>{t.K3DObjects.children.forEach(t=>{t.transformControls&&-1!==["translate","rotate","scale"].indexOf(e)&&t.transformControls.setMode(e)})})}},13621:(e,t,n)=>{const r=n(6101),{colorsToFloat32Array:o}=n(80228),i=n(99834)(r),a=n(98947),{commonUpdate:s}=a,{areAllChangesResolve:l}=a,c=n(76749),{getColorsArray:d}=a;e.exports={create:function(e,t){e.width=void 0!==e.width?e.width:.1;const n=new i.MeshLineMaterial({color:new r.Color(1,1,1),opacity:e.opacity,sizeAttenuation:!0,lineWidth:e.width,resolution:new r.Vector2(t.getWorld().width,t.getWorld().height),side:r.DoubleSide},t),a=e.colors&&e.colors.data||null,s=new r.Color(e.color);let l=null,p=null;const u=e.color_range,m=e.color_map&&e.color_map.data||null,h=e.attribute&&e.attribute.data||null,g=new r.Matrix4,f=e.vertices.data;if(h&&u&&m&&h.length>0&&u.length>0&&m.length>0){const e=c.createCanvasGradient(m,1024,1),t=new r.CanvasTexture(e,r.UVMapping,r.ClampToEdgeWrapping,r.ClampToEdgeWrapping,r.NearestFilter,r.NearestFilter);t.needsUpdate=!0,n.uniforms.useMap.value=1,n.uniforms.map.value=t,p=new Float32Array(h.length);for(let e=0;e<h.length;e++)p[e]=(h[e]-u[0])/(u[1]-u[0])}else l=a&&a.length===f.length/3?o(a):d(s,f.length/3);const v=new i.MeshLine;v.setGeometry(new Float32Array(f),!1,null,l,p),v.geometry.computeBoundingSphere(),v.geometry.computeBoundingBox();const y=new r.Mesh(v.geometry,n);y.userData.meshLine=v,y.userData.lastPosition=new Float32Array(f),y.userData.lastUVs=p,y.userData.lastColors=l,g.set.apply(g,e.model_matrix.data),y.applyMatrix4(g),y.updateMatrixWorld();const _=t.on(t.events.RESIZED,()=>{y.material.uniforms.resolution.value.x=t.getWorld().width,y.material.uniforms.resolution.value.y=t.getWorld().height});return y.onRemove=function(){t.off(t.events.RESIZED,_),y.material.uniforms.map.value&&(y.material.uniforms.map.value.dispose(),y.material.uniforms.map.value=void 0)},Promise.resolve(y)},update:function(e,t,n,r){let o=n.userData.lastUVs,i=n.userData.lastPosition;const a=n.userData.lastColors,c={};if(void 0!==n.geometry.attributes.uv&&(void 0===t.color_range||t.color_range.timeSeries||(n.material.uniforms.low.value=t.color_range[0],n.material.uniforms.high.value=t.color_range[1],c.color_range=null),void 0!==t.attribute&&!t.attribute.timeSeries)){if(t.attribute.data.length!==n.geometry.attributes.uv.array.length)return!1;o=new Float32Array(t.attribute.data.length);for(let n=0;n<o.length;n++)o[n]=(t.attribute.data[n]-e.color_range[0])/(e.color_range[1]-e.color_range[0]);n.userData.lastUVs=o}if(void 0!==t.vertices&&!t.vertices.timeSeries){if(t.vertices.data.length!==i.length)return!1;i=t.vertices.data,n.userData.lastPosition=i}return void 0===t.attribute&&void 0===t.vertices||(n.userData.meshLine.setGeometry(i,!1,null,a,o),n.geometry.attributes.position.needsUpdate=!0,n.geometry.computeBoundingSphere(),n.geometry.computeBoundingBox(),c.attribute=null,c.vertices=null),s(e,t,c,n,r),!!l(t,c)&&Promise.resolve({json:e,obj:n})}}},14042:(e,t,n)=>{const r=n(35395);function o(e,t,n,r,o){const i={};i[n]=r,"name"!==n&&e.reload(t,i,o),e.dispatch(e.events.OBJECT_CHANGE,{id:t.id,key:n,value:r})}e.exports={update:function(e,t,n,i){let a;function s(e,t,n,r,o,i){const a=e.add(t,n,r,o,i);return e.controllersMap[n]=a,a}function l(e,t,n){const r=e.addColor(t,n);return e.controllersMap[n]=r,r}function c(n){const r=e.gui_map[t.id];let o,i,a;if("color_range"===n){if(i=r.controllersMap[`_${n}_low`],a=r.controllersMap[`_${n}_high`],void 0!==i)return[i,a]}else if(o=r.controllersMap[n],void 0!==o)return[o];return[]}if(!n)return;if(void 0===e.gui_map&&(e.gui_map={}),void 0===e.gui_groups&&(e.gui_groups={}),void 0===e.gui_counts&&(e.gui_counts={}),void 0===e.gui_map[t.id]){let r;e.gui_counts[t.type]=e.gui_counts[t.type]+1||1,null===t.group?r=n:(void 0===e.gui_groups[t.group]&&(e.gui_groups[t.group]=n.addFolder(`${t.group}`).close()),r=e.gui_groups[t.group]),e.gui_map[t.id]=r.addFolder(`${t.type} #${e.gui_counts[t.type]}`).close(),e.gui_map[t.id].controllersMap={},e.gui_map[t.id].listenersId=e.on(e.events.OBJECT_REMOVED,n=>{if(n.toString()===t.id.toString()){const{listenersId:n}=e.gui_map[t.id];e.gui_map[t.id].destroy(),null!==t.group&&e.gui_groups[t.group]&&0===e.gui_groups[t.group].children.length&&(e.gui_groups[t.group].destroy(),delete e.gui_groups[t.group]),delete e.gui_map[t.id],e.off(e.events.OBJECT_REMOVED,n)}})}const d=["visible","outlines","wireframe","flat_shading","use_head","head_size","line_width","scale","font_size","font_weight","size","point_size","level","samples","alpha_coef","gradient_step","shadow_delay","focal_length","focal_plane","on_top","max_length","label_box","is_html","shininess, mask_opacity"],p=d.concat(["color","origin_color","origin_color","head_color","outlines_color","text","shader","shadow_res","shadow","ray_samples_count","width","radial_segments","mesh_detail","opacity","color_range","name","group","color_map","mode","direction","slice_x","slice_y","slice_z","volumeSliceMask"]);if("VolumeSlice"===t.type&&(-1===e.parameters.sliceViewerObjectId&&(e.setSliceViewer(t),t.sliceViewer=!0),a=c("sliceViewer"),0===a.length&&(t.sliceViewer=e.parameters.sliceViewerObjectId===t.id,s(e.gui_map[t.id],t,"sliceViewer").onChange(n=>{t.sliceViewer=n,n?e.setSliceViewer(t):e.setSliceViewer(0)})),t.sliceViewer=e.parameters.sliceViewerObjectId===t.id),(i&&Object.keys(i)||Object.keys(t)).forEach(function(r){let i,a;if(-1!==p.indexOf(r)&&("name"===r&&(null===t.name?(t.name=`${t.type} #${e.gui_counts[t.type]}`,e.gui_map[t.id].title(t.name),o(e,t,"name",t.name)):e.gui_map[t.id].title(t.name)),"group"===r&&function(t){let r;null!=t.group?(void 0===e.gui_groups[t.group]&&(e.gui_groups[t.group]=n.addFolder(`${t.group}`).close()),r=e.gui_groups[t.group]):r=n,e.gui_map[t.id].parent.children.splice(e.gui_map[t.id].parent.children.indexOf(e.gui_map[t.id]),1),e.gui_map[t.id].parent.folders.splice(e.gui_map[t.id].parent.folders.indexOf(e.gui_map[t.id]),1),e.gui_map[t.id].parent=r,e.gui_map[t.id].parent.$children.append(e.gui_map[t.id].domElement),-1===r.children.indexOf(e.gui_map[t.id])&&r.children.push(e.gui_map[t.id]),-1===r.folders.indexOf(e.gui_map[t.id])&&r.folders.push(e.gui_map[t.id]),Object.keys(e.gui_groups).forEach(t=>{0===e.gui_groups[t].children.length&&(e.gui_groups[t].destroy(),delete e.gui_groups[t])})}(t),"color_range"===r&&t[r].length>=2&&(t[`_${r}_low`]=t[r][0],t[`_${r}_high`]=t[r][1],i=c("colorLegend"),0===i.length&&(t.colorLegend=e.parameters.colorbarObjectId===t.id,s(e.gui_map[t.id],t,"colorLegend").onChange(n=>{t.colorLegend=n,n?e.setColorMapLegend(t):e.setColorMapLegend(0)}))),t.colorLegend=e.parameters.colorbarObjectId===t.id,"color_map"!==r&&"color_range"!==r||t.colorLegend&&e.setColorMapLegend(t),!function(e){const n=c(e);return n.forEach(e=>{e.object=t,e.updateDisplay()}),n.length>0}(r)&&(-1===d.indexOf(r)||t[r].timeSeries||s(e.gui_map[t.id],t,r).onChange(o.bind(this,e,t,r)),"color"===r&&(-1===["Line","Points","VectorField","Vectors"].indexOf(t.type)?l(e.gui_map[t.id],t,r).onChange(o.bind(this,e,t,r)):-1!==["Points","VectorField","Vectors"].indexOf(t.type)?void 0!==t.colors&&0!==t.colors.length||l(e.gui_map[t.id],t,r).onChange(o.bind(this,e,t,r)):"Line"===t.type&&(void 0!==t.colors&&0!==t.colors.length||void 0!==t.attribute&&0!==t.attribute.length||void 0!==t.color_range&&0!==t.colors.color_range||void 0!==t.color_map&&0!==t.colors.color_map||l(e.gui_map[t.id],t,r).onChange(o.bind(this,e,t,r)))),null===t[r]||!t[r].timeSeries)))switch(r){case"origin_color":case"head_color":void 0===t.colors&&l(e.gui_map[t.id],t,r).onChange(o.bind(this,e,t,r));break;case"outlines_color":l(e.gui_map[t.id],t,r).onChange(o.bind(this,e,t,r));break;case"text":"STL"===t.type||Array.isArray(t.text)||s(e.gui_map[t.id],t,r).onChange(o.bind(this,e,t,r));break;case"shader":"Points"===t.type&&s(e.gui_map[t.id],t,r,["3dSpecular","3d","flat","mesh","dot"]).onChange(o.bind(this,e,t,r)),"Lines"!==t.type&&"Line"!==t.type||s(e.gui_map[t.id],t,r,["simple","thick","mesh"]).onChange(o.bind(this,e,t,r));break;case"mode":"Label"===t.type&&s(e.gui_map[t.id],t,r,["dynamic","local","side"]).onChange(o.bind(this,e,t,r));break;case"slice_x":if("VolumeSlice"===t.type){let n=Array.isArray(t.volume)?t.volume[0].shape:t.volume.shape;s(e.gui_map[t.id],t,r,-1,n[2]-1,1).onChange(o.bind(this,e,t,r))}break;case"slice_y":if("VolumeSlice"===t.type){let n=Array.isArray(t.volume)?t.volume[0].shape:t.volume.shape;s(e.gui_map[t.id],t,r,-1,n[1]-1,1).onChange(o.bind(this,e,t,r))}break;case"slice_z":if("VolumeSlice"===t.type){let n=Array.isArray(t.volume)?t.volume[0].shape:t.volume.shape;s(e.gui_map[t.id],t,r,-1,n[0]-1,1).onChange(o.bind(this,e,t,r))}break;case"shadow_res":"Volume"===t.type&&s(e.gui_map[t.id],t,r,[32,64,128,256,512]).onChange(o.bind(this,e,t,r));break;case"shadow":"Volume"===t.type&&s(e.gui_map[t.id],t,r,["off","on_demand","dynamic"]).onChange(o.bind(this,e,t,r));break;case"ray_samples_count":"Volume"===t.type&&s(e.gui_map[t.id],t,r,[8,16,32,64]).onChange(o.bind(this,e,t,r));break;case"width":"Line"!==t.type&&"Lines"!==t.type||"mesh"!==t.shader||s(e.gui_map[t.id],t,r).onChange(o.bind(this,e,t,r));break;case"radial_segments":s(e.gui_map[t.id],t,r,0,64,1).name("radialSeg").onChange(o.bind(this,e,t,r));break;case"mesh_detail":"mesh"===t.shader&&s(e.gui_map[t.id],t,r,0,12,1).name("meshDetail").onChange(o.bind(this,e,t,r));break;case"opacity":t[r].timeSeries||s(e.gui_map[t.id],t,r,0,1).name("opacity").onChange(o.bind(this,e,t,r));break;case"color_range":2===t[r].length&&(a=s(e.gui_map[t.id],t,`_${r}_low`).name("vmin").onChange(n=>{t.color_range[0]=n,o(e,t,"color_range",t.color_range)}),a.initialValue<20&&(a._step=.1),a=s(e.gui_map[t.id],t,`_${r}_high`).name("vmax").onChange(n=>{t.color_range[1]=n,o(e,t,"color_range",t.color_range)}),a.initialValue<20&&(a._step=.1))}}),"Mesh"===t.type&&(void 0===e.gui_map[t.id].controllersMap.volumeSliceMask&&(t.volumeSliceMask=-1!==e.parameters.sliceViewerMaskObjectIds.indexOf(t.id),s(e.gui_map[t.id],t,"volumeSliceMask").name("Slice mask").onChange(n=>{let r=e.parameters.sliceViewerMaskObjectIds.slice();t.volumeSliceMask=n,n?-1===r.indexOf(t.id)&&r.push(t.id):r=r.filter(e=>e!==t.id),e.setSliceViewerMaskObjects(r)})),void 0===e.gui_map[t.id].controllersMap.slice_planes&&(e.gui_map[t.id].controllersMap.slice_planes=e.gui_map[t.id].addFolder("Slice planes")),r.init(e,e.gui_map[t.id].controllersMap.slice_planes,t.slice_planes,"slicePlanes",o.bind(null,e,t,"slice_planes"))),"Volume"===t.type&&0===c("refreshLightMap").length){const n={refreshLightMap(){e.getObjectById(t.id).refreshLightMap(),e.render()}};s(e.gui_map[t.id],n,"refreshLightMap").name("Refresh light map")}},changeParameter:o}},16335:e=>{"use strict";e.exports="if (uLayer != 0){\r\n    vec2 screenPos = gl_FragCoord.xy * uScreenSize;\r\n\r\n    float prevDepth = unpackRGBAToDepth(texture2D(uPrevDepthTexture, screenPos));\r\n\r\n\r\n    #if (PROVIDED_FRAG_COORD_Z > 0)\r\n    if (prevDepth + uDepthOffset - fragCoordZ  >= 0.){\r\n        discard;\r\n    }\r\n    #else\r\n    if (prevDepth + uDepthOffset - gl_FragCoord.z >= 0.){\r\n        discard;\r\n    }\r\n    #endif\r\n}\r\n}\r\n"},16577:(e,t,n)=>{const r=n(71131),o=n(55228),i=n(85724);e.exports={create:(e,t)=>(e.visible=void 0===e.visible||e.visible,e.color=void 0!==e.color?e.color:65280,e.shader=void 0!==e.shader?e.shader:"simple","mesh"===e.shader?o.create(e,t):"simple"===e.shader?r.create(e,t):i.create(e,t)),update:(e,t,n,a)=>"mesh"===e.shader?o.update(e,t,n,a):"simple"===e.shader?r.update(e,t,n,a):i.update(e,t,n,a)}},17084:(e,t,n)=>{const r=n(6101),o=n(8444).cameraModes,i=n(78560).error,a=n(86479);function s(e,t){void 0===t.defines&&(t.defines={}),void 0===t.defines.PROVIDED_FRAG_COORD_Z&&(t.defines.PROVIDED_FRAG_COORD_Z=0),t.uniforms.uScreenSize=e.uScreenSize,t.uniforms.uPrevDepthTexture=e.uPrevDepthTexture,t.uniforms.uLayer=e.uLayer,t.uniforms.uDepthOffset=e.uDepthOffset,t.fragmentShader=n(85356)+t.fragmentShader,t.fragmentShader=t.fragmentShader.replace(/}(?![\s\S]*})/gm,n(16335))}function l(e,t){-1===t.fragmentShader.indexOf("#include <packing>")&&(t.fragmentShader=t.fragmentShader.replace("#include <common>","#include <common>\n#include <packing>")),t.fragmentShader=t.fragmentShader.replace("#include <packing>",""),t.fragmentShader=`#include <packing>\nuniform sampler2D uPrevColorTexture;\n${t.fragmentShader}`,s(e,t)}e.exports=function(e){const t=this;let c=null;const d=document.createElement("canvas"),p=d.getContext("webgl2",{antialias:e.parameters.antialias>0,preserveDrawingBuffer:!0,alpha:!0,stencil:!0,powerPreference:"high-performance"}),u=[];let m;const h=new r.Scene,g=new r.PlaneBufferGeometry(2,2,1,1),f=new r.ShaderMaterial({uniforms:{uTextureA:{value:null},uTextureB:{value:null},uBlit:{value:0}},vertexShader:n(74490),fragmentShader:n(46376),transparent:!0,depthTest:!1,depthWrite:!1,blending:r.CustomBlending,blendEquation:r.AddEquation,blendDst:r.OneFactor,blendDstAlpha:null,blendSrc:r.OneMinusDstAlphaFactor,blendSrcAlpha:null}),v={uLayer:{value:0},uPrevDepthTexture:{value:null},uPrevColorTexture:{value:null},uScreenSize:{value:new r.Vector2(1,1)},uDepthOffset:{value:1e-7}},y=new r.MeshDepthMaterial,_=new r.Mesh(g,f),x=[];function b(t){t.preventDefault(),e.disable(),i("WEBGL Error","Context lost.",!1)}t.renderer=new r.WebGLRenderer({alpha:!0,precision:"highp",premultipliedAlpha:!0,antialias:e.parameters.antialias>0,logarithmicDepthBuffer:e.parameters.logarithmicDepthBuffer,canvas:d,context:p}),p||("undefined"!=typeof WebGL2RenderingContext?i("Your browser appears to support WebGL2 but it might be disabled. Try updating your OS and/or video card driver.",!0):i("It's look like your browser has no WebGL2 support.",!0)),e.colorOnBeforeCompile=l.bind(this,v),d.addEventListener("webglcontextlost",b,!1),t.renderer.removeContextLossListener=function(){d.removeEventListener("webglcontextlost",b)};const w=t.renderer.getContext(),M=w.getExtension("WEBGL_debug_renderer_info");function E(e,t,n){if(!(u.length>0&&u[0].width===t&&u[0].height===n)){if(v.uScreenSize.value.set(1/t,1/n),u.length)for(let e=0;e<3;e++)u.pop().dispose();for(let o=0;o<3;o++)u.push(new r.WebGLRenderTarget(t,n,{minFilter:r.NearestFilter,magFilter:r.NearestFilter})),u[o].ownDepthBuffer=e}}function C(n,o,i){void 0===i?(i=null,E(m,e.getWorld().width,e.getWorld().height)):E(m,i.width,i.height),e.getWorld().K3DObjects.children.forEach(e=>{e.material&&e.material.opacity<=0&&(e.visible=!1)}),v.uLayer.value=0,v.uPrevDepthTexture.value=null,f.uniforms.uBlit.value=1,w.colorMask(!0,!0,!0,!0),w.depthMask(!0),t.renderer.setRenderTarget(u[0]),t.renderer.setClearColor(0,0),t.renderer.clear(),t.renderer.setRenderTarget(u[1]),t.renderer.setClearColor(16777215,1),t.renderer.clear(),t.renderer.setRenderTarget(u[2]),t.renderer.setClearColor(0,0),t.renderer.clear(),w.enable(w.STENCIL_TEST),w.colorMask(!0,!0,!0,!0),w.stencilFunc(w.ALWAYS,1,255),w.stencilOp(w.KEEP,w.KEEP,w.REPLACE),n.overrideMaterial=y,t.renderer.setRenderTarget(u[1]),t.renderer.render(n,o),n.overrideMaterial=null,w.stencilFunc(w.EQUAL,1,255),w.stencilOp(w.KEEP,w.KEEP,w.KEEP),t.renderer.setRenderTarget(u[0]),t.renderer.clear(!1,!0,!1),t.renderer.render(n,o),f.blendSrc=r.OneMinusDstAlphaFactor,f.blendDst=r.OneFactor,f.uniforms.uTextureA.value=u[0].texture,f.uniforms.uBlit.value=1,w.stencilFunc(w.EQUAL,1,255),w.stencilOp(w.KEEP,w.KEEP,w.KEEP),t.renderer.setRenderTarget(u[2]),t.renderer.render(h,o);let a=1;for(let r=0;r<e.parameters.depthPeels;r++){const e=r%2,i=(r+1)%2;v.uPrevDepthTexture.value=u[i].texture,v.uLayer.value=r+1,t.renderer.setRenderTarget(u[e]),t.renderer.setClearColor(0,0),t.renderer.clear(!0,!0,!1),a|=1<<r+1,w.stencilFunc(w.EQUAL,a,1<<r),w.colorMask(!0,!0,!0,!0),w.stencilOp(w.KEEP,w.KEEP,w.REPLACE),t.renderer.setRenderTarget(u[e]),t.renderer.render(n,o),f.uniforms.uTextureA.value=u[e].texture,w.stencilFunc(w.EQUAL,a,1<<r+1),w.stencilOp(w.KEEP,w.KEEP,w.KEEP),t.renderer.setRenderTarget(u[2]),t.renderer.render(h,o),t.renderer.setRenderTarget(u[e]),t.renderer.setClearColor(16777215,1),t.renderer.clear(!0,!0,!1),n.overrideMaterial=y,w.stencilFunc(w.EQUAL,a,1<<r+1),w.stencilOp(w.KEEP,w.KEEP,w.KEEP),t.renderer.setRenderTarget(u[e]),t.renderer.render(n,o),n.overrideMaterial=null}w.disable(w.STENCIL_TEST),v.uLayer.value=0,w.stencilFunc(w.ALWAYS,1,255),w.stencilOp(w.KEEP,w.KEEP,w.KEEP),t.renderer.setRenderTarget(i),f.uniforms.uBlit.value=0,f.blendSrc=r.OneFactor,f.blendDst=r.OneMinusSrcAlphaFactor,f.blendSrcAlpha=null,f.blendDstAlpha=null,f.uniforms.uTextureA.value=u[2].texture,t.renderer.render(h,o),e.getWorld().K3DObjects.children.forEach(e=>{e.material&&e.material.opacity<=0&&(e.visible=!0)})}function S(e,n,r){void 0===r&&(r=null),t.renderer.setRenderTarget(r),t.renderer.render(e,n)}function A(){const n=e.parameters.depthPeels>0?C:S;if(0===x.length)for(let e=0;e<3;e++)x.push(t.camera.clone());return new Promise(i=>{if(e.disabling)return void i(null);const a=new r.Vector2;t.renderer.getSize(a),e.refreshGrid(),t.renderer.clippingPlanes=[],t.camera.updateMatrixWorld(),t.renderer.clear(),t.renderer.setViewport(0,0,a.x,a.y),t.renderer.render(t.gridScene,t.camera),e.parameters.clippingPlanes.forEach(e=>{t.renderer.clippingPlanes.push(new r.Plane((new r.Vector3).fromArray(e),e[3]))}),e.dispatch(e.events.BEFORE_RENDER);let s=Promise.resolve();const l=t.controls.enabled;function c(r,o,i,l,c){const d=[];if(e.parameters.renderingSteps>1){const t=i/e.parameters.renderingSteps;for(let n=0;n<e.parameters.renderingSteps;n++){const e=Math.round(n*t),r=Math.min(Math.round((n+1)*t),i);d.push([e,r-e])}}e.parameters.renderingSteps>1?(t.controls.enabled=!1,t.controls.beforeRender&&(s=s.then(()=>{t.controls.beforeRender(c),c<3&&x[c].copy(t.controls.object,!1)})),d.forEach(e=>{s=s.then(()=>{t.renderer.setViewport(r+e[0],o,e[1],l),t.camera.setViewOffset(a.x,a.y,e[0],0,e[1],a.y),n(t.scene,c<3?x[c]:t.camera)}),s=s.then(()=>new Promise(e=>{setTimeout(e,50)}))}),t.controls.afterRender&&(s=s.then(()=>{t.controls.afterRender(c)}))):s=s.then(()=>{t.controls.beforeRender&&(t.controls.beforeRender(c),c<3&&x[c].copy(t.controls.object,!1)),t.renderer.setViewport(r,o,i,l),n(t.scene,c<3?x[c]:t.camera),t.controls.afterRender&&t.controls.afterRender(c)})}e.parameters.cameraMode===o.volumeSides?(c(0,a.y/2,a.x/2,a.y/2,0),c(0,0,a.x/2,a.y/2,1),c(a.x/2,a.y/2,a.x/2,a.y/2,2),c(a.x/2,0,a.x/2,a.y/2,3)):c(0,0,a.x,a.y),s=s.then(()=>{t.controls.enabled=l,t.renderer.setViewport(a.x-t.axesHelper.width,0,t.axesHelper.width,t.axesHelper.height),t.renderer.render(t.axesHelper.scene,t.axesHelper.camera),t.renderer.setViewport(0,0,a.x,a.y),t.camera.clearViewOffset(),e.dispatch(e.events.RENDERED),e.autoRendering?requestAnimationFrame(A):i(!0)}),i(null)})}console.log("K3D: (UNMASKED_VENDOR_WEBGL)",w.getParameter(M.UNMASKED_VENDOR_WEBGL)),console.log("K3D: (UNMASKED_RENDERER_WEBGL)",w.getParameter(M.UNMASKED_RENDERER_WEBGL)),console.log("K3D: (depth bits)",w.getParameter(w.DEPTH_BITS)),console.log("K3D: (stencil bits)",w.getParameter(w.STENCIL_BITS)),_.frustumCulled=!1,h.add(_),y.side=r.DoubleSide,y.depthPacking=r.RGBADepthPacking,y.onBeforeCompile=s.bind(null,v),y.needsUpdate=!0,m=w.createRenderbuffer(),this.renderer.setClearColor(0,0),this.renderer.autoClear=!1,this.render=function(t){if(e.labels=[],!e.autoRendering||t){if(null===c)return c=A().then(()=>{c=null}),c;t&&(c=c.then(A).then(()=>{c=null}))}return c},this.renderOffScreen=function(n,o){const i=[],s=Math.max(Math.min(128,e.parameters.renderingSteps),1),l=Math.max(Math.min(5,e.parameters.antialias),0),c=e.parameters.depthPeels>0?C:S,d=o/s,p=new r.Vector2;t.renderer.getSize(p);const u=Math.max(n/p.x,o/p.y);for(let e=0;e<s;e++){const t=Math.round(e*d),n=Math.min(Math.round((e+1)*d),o);i.push([t,n-t])}const m=new r.WebGLRenderTarget(n,Math.ceil(o/s),{type:r.FloatType}),h=new r.WebGLRenderTarget(t.axesHelper.width*u,t.axesHelper.height*u,{type:r.FloatType});return t.renderer.clippingPlanes=[],a(t.renderer,t.axesHelper.scene,t.axesHelper.camera,h,h.width,h.height,[[0,h.height]],l,S).then(s=>{const d=new Uint8ClampedArray(n*o*4);for(let e=0;e<h.height;e++)d.set(s.slice(e*h.width*4,(e+1)*h.width*4),4*(e*n+n-h.width));return a(t.renderer,t.gridScene,t.camera,m,n,o,[[0,o]],l,S).then(s=>(e.parameters.clippingPlanes.forEach(e=>{t.renderer.clippingPlanes.push(new r.Plane((new r.Vector3).fromArray(e),e[3]))}),a(t.renderer,t.scene,t.camera,m,n,o,i,l,c).then(e=>(m.dispose(),[s,e,d]))))})}}},17794:e=>{"use strict";e.exports="uniform float size;\r\nuniform float scale;\r\n\r\nattribute vec3 color;\r\n#if (USE_PER_POINT_OPACITY == 1)\r\nattribute float opacities;\r\n#endif\r\n\r\n#if (USE_PER_POINT_SIZE == 1)\r\nattribute float sizes;\r\n#endif\r\n\r\n#if (USE_COLOR_MAP == 1)\r\nuniform sampler2D colormap;\r\nuniform float low;\r\nuniform float high;\r\nattribute float attributes;\r\n#endif\r\n\r\nvarying vec4 vColor;\r\nvarying vec4 mvPosition;\r\n\r\n#include <common>\r\n#include <clipping_planes_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n\r\nvoid main() {\r\n    float perPointOpacity = 1.0;\r\n\r\n    mvPosition = modelViewMatrix * vec4(position, 1.0);\r\n\r\n    #if (USE_PER_POINT_SIZE == 1)\r\n    gl_PointSize = 2.0 * sizes;\r\n    #else\r\n    gl_PointSize = 2.0 * size;\r\n    #endif\r\n\r\n    gl_Position = projectionMatrix * mvPosition;\r\n\r\n    #include <logdepthbuf_vertex>\r\n    #include <clipping_planes_vertex>\r\n\r\n    #if (USE_PER_POINT_OPACITY == 1)\r\n    perPointOpacity = opacities;\r\n    #endif\r\n\r\n    #if (USE_COLOR_MAP == 1)\r\n    float scaled_px = (attributes - low) / (high - low);\r\n    vec4 finalSphereColor = texture2D(colormap, vec2(scaled_px, 0.5));\r\n\r\n    finalSphereColor.a *= perPointOpacity;\r\n    vColor = finalSphereColor;\r\n    #else\r\n    vColor = vec4(color, perPointOpacity);\r\n    #endif\r\n}\r\n"},17816:e=>{function t(e,t){if(Array.isArray(t)){const n=3*(Math.abs(t[0])-1),r=3*(Math.abs(t[1])-1);return[(e[n]+e[r])/2,(e[n+1]+e[r+1])/2,(e[n+2]+e[r+2])/2]}const n=3*(Math.abs(t)-1);return[e[n],e[n+1],e[n+2]]}function n(e,t,n,r,o){const i=18*o;t[i]=e[0][0],t[i+1]=e[0][1],t[i+2]=e[0][2],t[i+3]=e[3][0],t[i+4]=e[3][1],t[i+5]=e[3][2],t[i+6]=e[1][0],t[i+7]=e[1][1],t[i+8]=e[1][2],t[i+9]=e[1][0],t[i+10]=e[1][1],t[i+11]=e[1][2],t[i+12]=e[3][0],t[i+13]=e[3][1],t[i+14]=e[3][2],t[i+15]=e[2][0],t[i+16]=e[2][1],t[i+17]=e[2][2];for(let e=0;e<18;e+=3)n[i+e]=r[0],n[i+e+1]=r[1],n[i+e+2]=r[2]}function r(e,r,o,i,a){const s=[],l=[],c=[];let d=0,p=0;const{width:u}=o,{height:m}=o,{length:h}=o,g=[u,m,h],f=e.voxels instanceof Uint8Array,v=Math.max.apply(null,e.size),y=new Array((v+1)*(v+1)).fill(0);let _,x,b,w,M,E,C,S,A,P,z,D,T,k,O,j,I;const L=[e.offset[0]+e.size[0],e.offset[1]+e.size[1],e.offset[2]+e.size[2]],F=[Math.min(L[0]+1,u),Math.min(L[1]+1,m),Math.min(L[2]+1,h)];function V(t,n,r){return[[(t[0]-e.offset[0])/u,(t[1]-e.offset[1])/m,(t[2]-e.offset[2])/h],[(t[0]-e.offset[0]+r[0])/u,(t[1]-e.offset[1]+r[1])/m,(t[2]-e.offset[2]+r[2])/h],[(t[0]-e.offset[0]+n[0]+r[0])/u,(t[1]-e.offset[1]+n[1]+r[1])/m,(t[2]-e.offset[2]+n[2]+r[2])/h],[(t[0]-e.offset[0]+n[0])/u,(t[1]-e.offset[1]+n[1])/m,(t[2]-e.offset[2]+n[2])/h]]}function R(t,n,r,o,i,a,s,l,c){let d,p,u=o;for(d=1;r+d<s[a];d++)for(u+=l[i]-e.offset[i],p=0;p<t;p++)if(n!==c[p+u])return d;return d}function B(t,n,r,o){const i=6*o,a=[0,0,0];a[r]=1,t[i]=(n[0]-e.offset[0])/u,t[i+1]=(n[1]-e.offset[1])/m,t[i+2]=(n[2]-e.offset[2])/h,t[i+3]=(n[0]-e.offset[0]+a[0])/u,t[i+4]=(n[1]-e.offset[1]+a[1])/m,t[i+5]=(n[2]-e.offset[2]+a[2])/h}const U=[1,u,u*m],N=[[1,0,0],[0,1,0],[0,0,1]];for(_=0;_<3;_++)for(x=[0,0,0],b=(_+1)%3,w=(_+2)%3,x[_]=-1+e.offset[_];x[_]<L[_];){let o=!1;for(x[w]=e.offset[w],k=0;x[w]<F[w];x[w]++)for(x[b]=e.offset[b],j=x[0]+u*(x[1]+m*x[2]);x[b]<F[b];x[b]++,k++,j+=U[b])f?(M=x[_]>=0?e.voxels[j]:-1,E=x[_]<g[_]-1?e.voxels[j+U[_]]:-1):(M=x[_]>=0?e.voxels.get(x[0],x[1],x[2]):-1,E=x[_]<g[_]-1?e.voxels.get(x[0]+N[_][0],x[1]+N[_][1],x[2]+N[_][2]):-1),M===E||M>0&&E>0&&!a?y[k]=0:M>0?(y[k]=a&&E>0?[M,E]:M,o=!0):(y[k]=E>0?-E:0,o|=E>0);if(x[_]+=1,o){if(i)for(S=e.offset[w],k=0;S<L[w];S++){for(x[b]=e.offset[b],x[w]=S,0===e.offset[b]&&0!==y[k]&&B(c,x,w,p++),C=e.offset[b];C<F[b]-1;C++,k++)x[b]=C+1,y[k]!==y[k+1]&&B(c,x,w,p++);x[b]=L[b],C===g[b]-1&&0!==y[k]&&B(c,x,w,p++),k+=1}for(S=e.offset[w],k=0;S<L[w];S++){for(C=e.offset[b];C<L[b];)if(O=y[k],O){for(P=1;O===y[k+P]&&C+P<L[b];)P+=1;z=R(P,O,S,k,b,w,L,F,y),x[b]=C,x[w]=S,D=[0,0,0],T=[0,0,0],O>0?(T[w]=z,D[b]=P):(D[w]=z,T[b]=P),n(V(x,D,T),s,l,t(r,y[k]),d++),I=k;for(let t=0;t<z;t++){for(A=0;A<P;A++)y[I+A]=0;I+=F[b]-e.offset[b]}C+=P,k+=P}else C+=1,k+=1;L[b]!==F[b]&&(k+=1)}}}return{offset:e.offset,vertices:s,colors:l,outlines:c}}e.exports={initializeGreedyVoxelMesh:function(e,t,n,o,i){return r.bind(null,e,t,n,o,i)},generateGreedyVoxelMesh:r}},21051:(e,t,n)=>{const r=n(6101);let o=n(22919);const{areAllChangesResolve:i}=n(98947);function a(e,t,n,o){const i=new r.Vector3,a=.5*n.width,s=.5*n.height;return i.fromArray(e.positions,3*t),i.applyMatrix4(e.matrixWorld),o.frustum&&!o.frustum.containsPoint(i)?{x:-1e3,y:-1e3,z:-1e3}:(i.project(o),i.x=(i.x+1)*a+n.offsetX,i.y=(1-i.y)*s+n.offsetY,{x:Math.round(i.x),y:Math.round(i.y),z:i.z})}function s(e){return`#${new r.Color(e).getHexString()}`}o=o.default||o,e.exports={create(e,t,n){e.visible=void 0===e.visible||e.visible,e.color=void 0!==e.color?e.color:0,e.text=void 0!==e.text?e.text:"\\KaTeX";const i=new r.Matrix4,{text:l}=e,{color:c}=e,d=e.reference_point||"lb",p=e.size||1;let{position:u}=e;const m=new r.Object3D,h=t.getWorld(),{overlayDOMNode:g}=h;let f,v=[];for(u.data?m.positions=u.data:m.positions=u,m.text=l,f=0;f<m.positions.length/3;f++){const n=document.createElement("div");e.is_html?(n.innerHTML=Array.isArray(l)?l[f]:l,n.style.cssText="pointer-events: all"):n.innerHTML=o.renderToString(Array.isArray(l)?l[f]:l,{displayMode:!0}),n.style.position="absolute",n.style.color=s(c),n.style.fontSize=`${p}em`,e.label_box&&(n.style.padding="5px",n.style.background=t.getWorld().targetDOMNode.style.backgroundColor,n.style.border=`1px solid ${s(c)}`,n.style.borderRadius="10px"),g.appendChild(n),v.push(n)}e.model_matrix&&(i.set.apply(i,e.model_matrix.data),m.applyMatrix4(i)),m.updateMatrixWorld();const y=t.on(t.events.BEFORE_RENDER,function(){v.forEach(function(t,r){let o,i,s;if("hidden"!==t.style.display){switch(o=n?a(m,r,{width:n.width,height:n.height,offsetX:h.width-n.width,offsetY:h.height-n.height},n.camera):a(m,r,{width:h.width,height:h.height,offsetX:0,offsetY:0},h.camera),d[0]){case"l":i=`${o.x}px`;break;case"c":i=`calc(${o.x}px - 50%)`;break;case"r":i=`calc(${o.x}px - 100%)`}switch(d[1]){case"t":s=`${o.y}px`;break;case"c":s=`calc(${o.y}px - 50%)`;break;case"b":s=`calc(${o.y}px - 100%)`}t.style.transform=`translate(${i},${s})`,t.style.zIndex=e.on_top?16777271-Math.round(1e6*o.z):"15"}})});return m.domElements=v,m.onRemove=function(){v.forEach(function(e){g.contains(e)&&(g.removeChild(e),e=null)}),v=[],t.off(t.events.BEFORE_RENDER,y)},m.hide=function(){v.forEach(function(e){e.style.display="none"})},m.show=function(){v.forEach(function(e){e.style.display="block"})},m.boundingBox=(new r.Box3).setFromArray(m.positions),m.show(),Promise.resolve(m)},update(e,t,n){const r={};return void 0===t.text||t.text.timeSeries||(n.domElements.forEach(function(n,r){let i=Array.isArray(t.text)?t.text[r]:t.text;e.is_html?(n.innerHTML=i,n.style.pointerEvents="all"):(n.innerHTML=o.renderToString(i,{displayMode:!0}),n.style.pointerEvents="none")}),r.text=null),void 0===t.position||t.position.timeSeries||(n.positions=t.position.data||t.position,r.position=null),!!i(t,r)&&Promise.resolve({json:e,obj:n})}}},21320:(e,t,n)=>{const r=n(6101),o=n(62419),i=n(76749),{typedArrayToThree:a}=n(98947),{areAllChangesResolve:s}=n(98947),{commonUpdate:l}=n(98947),{ensure256size:c}=n(98947);e.exports={create(e){e.samples=e.samples||512,e.gradient_step=e.gradient_step||.005,e.interpolation=void 0===e.interpolation||e.interpolation;const t=void 0!==window.randomMul?window.randomMul:255,s=new r.BoxBufferGeometry(1,1,1),l=new r.Matrix4,d=new r.Vector3,p=new r.Quaternion,u=new r.Vector3,m=e.color_map&&e.color_map.data||null;let h=null,g=!1,f=e.opacity_function&&e.opacity_function.data||null;const v=e.color_range,{samples:y}=e;let _;null===f&&(f=[m[0],0,m[m.length-4],1]),l.set.apply(l,e.model_matrix.data),l.decompose(d,p,u);const x=new r.Data3DTexture(e.volume.data,e.volume.shape[2],e.volume.shape[1],e.volume.shape[0]);x.format=r.RedFormat,x.type=a(e.volume.data.constructor),x.generateMipmaps=!1,e.interpolation?(x.minFilter=r.LinearFilter,x.magFilter=r.LinearFilter):(x.minFilter=r.NearestFilter,x.magFilter=r.NearestFilter),x.wrapS=r.ClampToEdgeWrapping,x.wrapT=r.ClampToEdgeWrapping,x.wrapR=r.ClampToEdgeWrapping,x.needsUpdate=!0,_=new r.DataTexture(new Uint8Array(o.range(4096).map(()=>t*Math.random())),64,64,r.RedFormat,r.UnsignedByteType),_.minFilter=r.LinearFilter,_.magFilter=r.LinearFilter,_.wrapS=r.MirroredRepeatWrapping,_.wrapT=r.MirroredRepeatWrapping,_.generateMipmaps=!1,_.needsUpdate=!0;const b=i.createCanvasGradient(m,1024,1,f),w=new r.CanvasTexture(b,r.UVMapping,r.ClampToEdgeWrapping,r.ClampToEdgeWrapping,r.NearestFilter,r.NearestFilter);w.needsUpdate=!0,e.mask.data.length>0&&e.mask_opacities.data.length>0&&(h=new r.Data3DTexture(e.mask.data,e.mask.shape[2],e.mask.shape[1],e.mask.shape[0]),h.format=r.RedFormat,h.type=r.UnsignedByteType,h.generateMipmaps=!1,h.minFilter=r.NearestFilter,h.magFilter=r.NearestFilter,h.wrapS=r.ClampToEdgeWrapping,h.wrapT=r.ClampToEdgeWrapping,h.needsUpdate=!0,g=!0);const M={maskOpacities:{value:c(e.mask_opacities.data)},volumeMapSize:{value:new r.Vector3(e.volume.shape[2],e.volume.shape[1],e.volume.shape[0])},low:{value:v[0]},high:{value:v[1]},gradient_step:{value:e.gradient_step},samples:{value:y},translation:{value:d},rotation:{value:p},scale:{value:u},volumeTexture:{type:"t",value:x},mask:{type:"t",value:h},colormap:{type:"t",value:w},jitterTexture:{type:"t",value:_}},E=new r.ShaderMaterial({uniforms:o.merge(M,r.UniformsLib.lights),defines:{USE_SPECULAR:1,USE_MASK:g?1:0},vertexShader:n(3650),fragmentShader:n(24800),side:r.BackSide,depthTest:!1,depthWrite:!1,lights:!0,clipping:!0,transparent:!0});s.computeBoundingSphere(),s.computeBoundingBox();const C=new r.Mesh(s,E);return C.applyMatrix4(l),C.updateMatrixWorld(),C.onRemove=function(){C.material.uniforms.volumeTexture.value=void 0,C.material.uniforms.colormap.value.dispose(),C.material.uniforms.colormap.value=void 0,_.dispose(),_=void 0},Promise.resolve(C)},update(e,t,n,r){const o={};if(void 0===t.color_range||t.color_range.timeSeries||(n.material.uniforms.low.value=t.color_range[0],n.material.uniforms.high.value=t.color_range[1],o.color_range=null),void 0===t.volume||t.volume.timeSeries||n.material.uniforms.volumeTexture.value.image.data.constructor===t.volume.data.constructor&&(n.material.uniforms.volumeTexture.value.image.data=t.volume.data,n.material.uniforms.volumeTexture.value.needsUpdate=!0,o.volume=null),void 0!==t.color_map&&!t.color_map.timeSeries||void 0!==t.opacity_function&&!t.opacity_function.timeSeries){const r=i.createCanvasGradient(t.color_map&&t.color_map.data||e.color_map.data,1024,1,t.opacity_function&&t.opacity_function.data||e.opacity_function.data);n.material.uniforms.colormap.value.image=r,n.material.uniforms.colormap.value.needsUpdate=!0,o.color_map=null,o.opacity_function=null}return void 0===t.mask||t.mask.timeSeries||null!==n.material.uniforms.mask.value&&n.material.uniforms.mask.value.image.data.constructor===t.mask.data.constructor&&n.material.uniforms.mask.value.image.width===t.mask.shape[2]&&n.material.uniforms.mask.value.image.height===t.mask.shape[1]&&n.material.uniforms.mask.value.image.depth===t.mask.shape[0]&&(n.material.uniforms.mask.value.image.data=t.mask.data,n.material.uniforms.mask.value.needsUpdate=!0,o.mask=null),void 0===t.mask_opacities||t.mask_opacities.timeSeries||null!==n.material.uniforms.maskOpacities.value&&(n.material.uniforms.maskOpacities.value=c(t.mask_opacities.data),n.material.uniforms.maskOpacities.value.needsUpdate=!0,o.mask_opacities=null),["samples","gradient_step"].forEach(e=>{t[e]&&!t[e].timeSeries&&(n.material.uniforms[e].value=t[e],o[e]=null)}),l(e,t,o,n,r),!!s(t,o)&&Promise.resolve({json:e,obj:n})}}},21625:(e,t,n)=>{const r=n(64022),{areAllChangesResolve:o}=n(98947),{commonUpdate:i}=n(98947);e.exports={create:(e,t)=>r.create(e,r.generateRegularChunks(96,e.voxels.shape,e.voxels.data),[e.voxels.shape[2],e.voxels.shape[1],e.voxels.shape[0]],t),update(e,t,n,r){const a={};return void 0===t.opacity||t.opacity.timeSeries||(n.traverse(t=>{t.material&&(t.material.userData.outline?(t.material.uniforms.opacity.value=.75*e.opacity,t.material.opacity=t.material.uniforms.opacity.value):(t.material.opacity=e.opacity,t.material.depthWrite=1===e.opacity,t.material.transparent=1!==e.opacity))}),a.opacity=null),i(e,t,a,n,r),!!o(t,a)&&Promise.resolve({json:e,obj:n})}}},22096:e=>{"use strict";e.exports="#include <common>\r\n#include <clipping_planes_pars_fragment>\r\n#include <lights_pars_begin>\r\n\r\nprecision highp sampler3D;\r\n\r\nuniform vec3 lightMapSize;\r\nuniform vec2 lightMapRenderTargetSize;\r\nuniform sampler2D shadowTexture;\r\n\r\nuniform mat4 transform;\r\nuniform sampler3D volumeTexture;\r\n\r\nuniform sampler2D colormap;\r\nuniform sampler2D jitterTexture;\r\nuniform float focal_length;\r\nuniform float focal_plane;\r\nuniform float low;\r\nuniform float high;\r\nuniform mat4 modelViewMatrix;\r\nuniform float samples;\r\nuniform float alpha_coef;\r\nuniform float gradient_step;\r\n\r\nuniform vec4 scale;\r\nuniform vec4 translation;\r\n\r\nuniform sampler3D mask;\r\nuniform float maskOpacities[256];\r\n\r\nvarying vec3 localPosition;\r\nvarying vec3 transformedCameraPosition;\r\nvarying vec3 transformedWorldPosition;\r\n\r\nfloat inv_range;\r\n\r\nstruct Ray {\r\n    vec3 origin;\r\n    vec3 direction;\r\n    vec3 inv_direction;\r\n    int sign[3];\r\n};\r\n\r\nvec3 aabb[2] = vec3[2](\r\n    vec3(-0.5, -0.5, -0.5),\r\n    vec3(0.5, 0.5, 0.5)\r\n);\r\n\r\nRay makeRay(vec3 origin, vec3 direction) {\r\n    vec3 inv_direction = vec3(1.0) / direction;\r\n\r\n    return Ray(\r\n        origin,\r\n        direction,\r\n        inv_direction,\r\n        int[3](\r\n            ((inv_direction.x < 0.0) ? 1 : 0),\r\n            ((inv_direction.y < 0.0) ? 1 : 0),\r\n            ((inv_direction.z < 0.0) ? 1 : 0)\r\n        )\r\n    );\r\n}\r\n\r\n/*\r\n\tFrom: https://github.com/hpicgs/cgsee/wiki/Ray-Box-Intersection-on-the-GPU\r\n*/\r\nvoid intersect(\r\nin Ray ray, in vec3 aabb[2],\r\nout float tmin, out float tmax\r\n) {\r\n    float tymin, tymax, tzmin, tzmax;\r\n    tmin = (aabb[ray.sign[0]].x - ray.origin.x) * ray.inv_direction.x;\r\n    tmax = (aabb[1 - ray.sign[0]].x - ray.origin.x) * ray.inv_direction.x;\r\n    tymin = (aabb[ray.sign[1]].y - ray.origin.y) * ray.inv_direction.y;\r\n    tymax = (aabb[1 - ray.sign[1]].y - ray.origin.y) * ray.inv_direction.y;\r\n    tzmin = (aabb[ray.sign[2]].z - ray.origin.z) * ray.inv_direction.z;\r\n    tzmax = (aabb[1 - ray.sign[2]].z - ray.origin.z) * ray.inv_direction.z;\r\n    tmin = max(max(tmin, tymin), tzmin);\r\n    tmax = min(min(tmax, tymax), tzmax);\r\n}\r\n\r\nfloat getMaskOpacity(vec3 pos) {\r\n    int maskValue = int(texture(mask, pos).r * 255.0);\r\n\r\n    return maskOpacities[maskValue];\r\n}\r\n\r\nfloat getMaskedVolume(vec3 pos)\r\n{\r\n    #if (USE_MASK == 1)\r\n    return texture(volumeTexture, pos).x * getMaskOpacity(pos);\r\n    #else\r\n    return texture(volumeTexture, pos).x;\r\n    #endif\r\n}\r\n\r\nvec3 worldGetNormal(in float px, in vec3 pos)\r\n{\r\n    return normalize(\r\n        vec3(\r\n            px - getMaskedVolume(pos + vec3(gradient_step, 0, 0)),\r\n            px - getMaskedVolume(pos + vec3(0, gradient_step, 0)),\r\n            px - getMaskedVolume(pos + vec3(0, 0, gradient_step))\r\n        )\r\n    );\r\n}\r\n\r\nfloat getShadow(vec3 textcoord, vec2 sliceCount)\r\n{\r\n    float zidx1 = floor(textcoord.z * lightMapSize.z);\r\n    float zidx2 = ceil(textcoord.z * lightMapSize.z);\r\n\r\n    float shadow1 = texture2D(shadowTexture,\r\n                              vec2(\r\n                                  floor(mod(zidx1, sliceCount.x)) * lightMapSize.x / lightMapRenderTargetSize.x,\r\n                                  floor(zidx1 / sliceCount.x) * lightMapSize.y / lightMapRenderTargetSize.y\r\n                              )\r\n                              + vec2(textcoord.x / sliceCount.x, textcoord.y / sliceCount.y)\r\n    ).r;\r\n\r\n    float shadow2 = texture2D(shadowTexture,\r\n                              vec2(\r\n                                  floor(mod(zidx2, sliceCount.x)) * lightMapSize.x / lightMapRenderTargetSize.x,\r\n                                  floor(zidx2 / sliceCount.x) * lightMapSize.y / lightMapRenderTargetSize.y\r\n                              )\r\n                              + vec2(textcoord.x / sliceCount.x, textcoord.y / sliceCount.y)\r\n    ).r;\r\n\r\n    return mix(shadow1, shadow2, textcoord.z * lightMapSize.z - zidx1);\r\n}\r\n\r\nvoid main() {\r\n    float jitter = texture2D(jitterTexture, gl_FragCoord.xy / 64.0).r;\r\n    float tmin = 0.0;\r\n    float tmax = 0.0;\r\n    float px = 0.0;\r\n    float shadow = 0.0;\r\n    vec4 pxColor = vec4(0.0, 0.0, 0.0, 0.0);\r\n\r\n    inv_range = 1.0 / (high - low);\r\n    aabb[0] = aabb[0] * scale.xyz + translation.xyz;\r\n    aabb[1] = aabb[1] * scale.xyz + translation.xyz;\r\n\r\n    #if (RAY_SAMPLES_COUNT > 0)\r\n    vec4 accuColor = vec4(0.0, 0.0, 0.0, 0.0);\r\n\r\n    for (int ray_samples = 0; ray_samples < RAY_SAMPLES_COUNT; ray_samples++) {\r\n\r\n        vec4 value = vec4(0.0, 0.0, 0.0, 0.0);\r\n\r\n        vec3 direction = normalize(transformedWorldPosition - transformedCameraPosition);\r\n\r\n        // Focal plane correction\r\n        vec3 P = transformedCameraPosition + direction * focal_plane;\r\n\r\n        float r = texture2D(jitterTexture, vec2(0.3) + gl_FragCoord.xy / 64.0 * float(ray_samples + 3)).r;\r\n        vec3 apertureShift = normalize(vec3(\r\n                                           1.0 - 2.0 * texture2D(jitterTexture, vec2(0.0) + gl_FragCoord.xy / 64.0 * float(ray_samples)).r,\r\n                                           1.0 - 2.0 * texture2D(jitterTexture, vec2(0.1) + gl_FragCoord.xy / 64.0 * float(ray_samples + 1)).r,\r\n                                           1.0 - 2.0 * texture2D(jitterTexture, vec2(0.2) + gl_FragCoord.xy / 64.0 * float(ray_samples + 2)).r\r\n                                       )) * r * focal_length;\r\n\r\n        direction = normalize(P - (transformedCameraPosition + apertureShift));\r\n\r\n        vec3 eye = P - direction * 1000000.0;\r\n\r\n        intersect(makeRay(eye, direction), aabb, tmin, tmax);\r\n\r\n        vec3 textcoord_end = ((eye + direction * tmax) - translation.xyz) / scale.xyz + vec3(0.5);\r\n        #else\r\n        vec4 value = vec4(0.0, 0.0, 0.0, 0.0);\r\n        vec3 direction = normalize(transformedWorldPosition - transformedCameraPosition);\r\n        intersect(makeRay(transformedCameraPosition, direction), aabb, tmin, tmax);\r\n\r\n        vec3 textcoord_end = localPosition + vec3(0.5);\r\n        #endif\r\n        vec3 textcoord_start = textcoord_end - (tmax - max(0.0, tmin)) * direction / scale.xyz;\r\n        vec3 textcoord_delta = textcoord_end - textcoord_start;\r\n\r\n        int sampleCount = min(int(length(textcoord_delta) * samples), int(samples * 1.8));\r\n\r\n        textcoord_delta = textcoord_delta / float(sampleCount);\r\n        textcoord_start = textcoord_start - textcoord_delta * (0.01 + 0.98 * jitter);\r\n\r\n        vec3 textcoord = textcoord_start - textcoord_delta;\r\n\r\n        float step = length(textcoord_delta);\r\n\r\n        #if (USE_SHADOW == 1)\r\n        float sliceSize = lightMapSize.x * lightMapSize.y;\r\n        vec2 sliceCount = lightMapRenderTargetSize / lightMapSize.xy;\r\n        #endif\r\n\r\n        for (int count = 0; count < sampleCount; count++) {\r\n            textcoord += textcoord_delta;\r\n\r\n            #if NUM_CLIPPING_PLANES > 0\r\n            vec4 plane;\r\n            vec3 pos = -vec3(modelViewMatrix * vec4(textcoord - vec3(0.5), 1.0));\r\n\r\n            #pragma unroll_loop_start\r\n            for (int i = 0; i < UNION_CLIPPING_PLANES; i++) {\r\n                plane = clippingPlanes[i];\r\n                if (dot(pos, plane.xyz) > plane.w) continue;\r\n            }\r\n            #pragma unroll_loop_end\r\n            #endif\r\n\r\n            px = texture(volumeTexture, textcoord).x;\r\n            float scaled_px = (px - low) * inv_range;\r\n\r\n            if (scaled_px > 0.0) {\r\n                #if (USE_MASK == 1)\r\n                float maskOpacity = getMaskOpacity(textcoord);\r\n                #else\r\n                float maskOpacity = 1.0;\r\n                #endif\r\n\r\n                if (maskOpacity > 0.0) {\r\n                    #if (USE_SHADOW == 1)\r\n                    shadow =\r\n                    (getShadow(textcoord, sliceCount) +\r\n                    getShadow(textcoord + vec3(1.0 / lightMapSize.x, 0, 0), sliceCount) +\r\n                    getShadow(textcoord - vec3(1.0 / lightMapSize.x, 0, 0), sliceCount) +\r\n                    getShadow(textcoord + vec3(0, 1.0 / lightMapSize.y, 0), sliceCount) +\r\n                    getShadow(textcoord - vec3(0, 1.0 / lightMapSize.y, 0), sliceCount) +\r\n                    getShadow(textcoord + vec3(0, 0, 1.0 / lightMapSize.z), sliceCount) +\r\n                    getShadow(textcoord - vec3(0, 0, 1.0 / lightMapSize.z), sliceCount)) / 7.0;\r\n                    #else\r\n                    shadow = 0.0;\r\n                    #endif\r\n\r\n                    scaled_px = min(scaled_px, 0.99);\r\n\r\n                    pxColor = texture(colormap, vec2(scaled_px, 0.5));\r\n\r\n                    pxColor.a = 1.0 - pow(1.0 - pxColor.a, step * alpha_coef);\r\n                    pxColor.a *= (1.0 - value.a);\r\n                    pxColor.a *= maskOpacity;\r\n\r\n                    pxColor.rgb *= pxColor.a;\r\n\r\n                    // LIGHT\r\n                    #if NUM_DIR_LIGHTS > 0\r\n                    if (pxColor.a > 0.0) {\r\n                        vec4 addedLights = vec4(ambientLightColor / PI, 1.0);\r\n                        vec3 specularColor = vec3(0.0);\r\n\r\n                        vec3 normal = worldGetNormal(px * maskOpacity, textcoord);\r\n\r\n                        vec3 lightDirection;\r\n                        float lightingIntensity;\r\n\r\n                        vec3 lightReflect;\r\n                        float specularFactor;\r\n\r\n                        #pragma unroll_loop_start\r\n                        for (int i = 0; i < NUM_DIR_LIGHTS; i++) {\r\n                            lightDirection = directionalLights[i].direction;\r\n                            lightingIntensity = clamp(dot(lightDirection, normal), 0.0, 1.0);\r\n                            addedLights.rgb += directionalLights[i].color / PI * (0.2 + 0.8 * lightingIntensity) * (1.0 - shadow);\r\n\r\n                            lightReflect = normalize(reflect(lightDirection, normal));\r\n                            specularFactor = dot(direction, lightReflect);\r\n\r\n                            if (specularFactor > 0.0)\r\n                            specularColor += 0.002 * scaled_px * (1.0 / step) *\r\n                            directionalLights[i].color / PI * pow(specularFactor, 250.0) *\r\n                            pxColor.a * (1.0 - shadow);\r\n                        }\r\n                        #pragma unroll_loop_end\r\n\r\n                        pxColor.rgb = pxColor.rgb * addedLights.xyz + specularColor;\r\n                    }\r\n                    #endif\r\n\r\n                    value += pxColor;\r\n\r\n                    if (value.a >= 0.99) {\r\n                        value.a = 1.0;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        #if (RAY_SAMPLES_COUNT > 0)\r\n\r\n        accuColor += value;\r\n    }\r\n\r\n    gl_FragColor = accuColor / float(RAY_SAMPLES_COUNT);\r\n\r\n    #else\r\n\r\n    gl_FragColor = value;\r\n\r\n    #endif\r\n}\r\n"},22146:e=>{"use strict";e.exports="attribute vec3 offset;\r\nuniform float opacity;\r\n\r\nvarying vec3 vViewPosition;\r\nvarying vec3 vNormal;\r\n\r\n#if (USE_PER_POINT_OPACITY == 1)\r\nattribute float opacities;\r\n#endif\r\n\r\nvarying float perPointOpacity;\r\n\r\n#if (USE_COLOR_MAP == 1)\r\nuniform sampler2D colormap;\r\nuniform float low;\r\nuniform float high;\r\nattribute float attributes;\r\n#endif\r\n\r\n#include <common>\r\n#include <uv_pars_vertex>\r\n#include <uv2_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <envmap_pars_vertex>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n    #include <uv_vertex>\r\n    #include <uv2_vertex>\r\n\r\n    perPointOpacity = 1.0;\r\n\r\n    #if (USE_PER_POINT_OPACITY == 1)\r\n    perPointOpacity = opacities;\r\n    #endif\r\n\r\n    #if (USE_COLOR_MAP == 1)\r\n    float scaled_px = (attributes - low) / (high - low);\r\n    vec4 finalSphereColor = texture2D(colormap, vec2(scaled_px, 0.5));\r\n\r\n    perPointOpacity = finalSphereColor.a * perPointOpacity;\r\n    vColor = finalSphereColor.rgb;\r\n    #else\r\n    vColor = color.rgb;\r\n    #endif\r\n\r\n    #include <beginnormal_vertex>\r\n    #include <morphnormal_vertex>\r\n    #include <skinbase_vertex>\r\n    #include <skinnormal_vertex>\r\n    #include <defaultnormal_vertex>\r\n\r\n    vNormal = normalize(transformedNormal);\r\n\r\n    #include <begin_vertex>\r\n    #include <morphtarget_vertex>\r\n    #include <skinning_vertex>\r\n    #include <displacementmap_vertex>\r\n    #include <project_vertex>\r\n    #include <logdepthbuf_vertex>\r\n    #include <clipping_planes_vertex>\r\n    vViewPosition = -mvPosition.xyz;\r\n    #include <worldpos_vertex>\r\n    #include <envmap_vertex>\r\n    #include <shadowmap_vertex>\r\n    #include <fog_vertex>\r\n}\r\n"},24800:e=>{"use strict";e.exports="#include <common>\r\n#include <clipping_planes_pars_fragment>\r\n#include <lights_pars_begin>\r\n\r\nprecision highp sampler3D;\r\n\r\nuniform mat4 transform;\r\nuniform sampler3D volumeTexture;\r\n\r\nuniform sampler2D colormap;\r\nuniform sampler2D jitterTexture;\r\nuniform float low;\r\nuniform float high;\r\nuniform mat4 modelViewMatrix;\r\nuniform float samples;\r\nuniform float gradient_step;\r\n\r\nuniform sampler3D mask;\r\nuniform float maskOpacities[256];\r\n\r\nuniform vec4 scale;\r\nuniform vec4 translation;\r\n\r\nvarying vec3 localPosition;\r\nvarying vec3 transformedCameraPosition;\r\nvarying vec3 transformedWorldPosition;\r\n\r\nfloat inv_range;\r\n\r\nstruct Ray {\r\n    vec3 origin;\r\n    vec3 direction;\r\n    vec3 inv_direction;\r\n    int sign[3];\r\n};\r\n\r\nvec3 aabb[2] = vec3[2](\r\n    vec3(-0.5, -0.5, -0.5),\r\n    vec3(0.5, 0.5, 0.5)\r\n);\r\n\r\nRay makeRay(vec3 origin, vec3 direction) {\r\n    vec3 inv_direction = vec3(1.0) / direction;\r\n\r\n    return Ray(\r\n        origin,\r\n        direction,\r\n        inv_direction,\r\n        int[3](\r\n            ((inv_direction.x < 0.0) ? 1 : 0),\r\n            ((inv_direction.y < 0.0) ? 1 : 0),\r\n            ((inv_direction.z < 0.0) ? 1 : 0)\r\n        )\r\n    );\r\n}\r\n\r\n/*\r\n\tFrom: https://github.com/hpicgs/cgsee/wiki/Ray-Box-Intersection-on-the-GPU\r\n*/\r\nvoid intersect(\r\nin Ray ray, in vec3 aabb[2],\r\nout float tmin, out float tmax\r\n) {\r\n    float tymin, tymax, tzmin, tzmax;\r\n    tmin = (aabb[ray.sign[0]].x - ray.origin.x) * ray.inv_direction.x;\r\n    tmax = (aabb[1 - ray.sign[0]].x - ray.origin.x) * ray.inv_direction.x;\r\n    tymin = (aabb[ray.sign[1]].y - ray.origin.y) * ray.inv_direction.y;\r\n    tymax = (aabb[1 - ray.sign[1]].y - ray.origin.y) * ray.inv_direction.y;\r\n    tzmin = (aabb[ray.sign[2]].z - ray.origin.z) * ray.inv_direction.z;\r\n    tzmax = (aabb[1 - ray.sign[2]].z - ray.origin.z) * ray.inv_direction.z;\r\n    tmin = max(max(tmin, tymin), tzmin);\r\n    tmax = min(min(tmax, tymax), tzmax);\r\n}\r\n\r\nfloat getMaskOpacity(vec3 pos) {\r\n    int maskValue = int(texture(mask, pos).r * 255.0);\r\n\r\n    return maskOpacities[maskValue];\r\n}\r\n\r\nfloat getMaskedVolume(vec3 pos)\r\n{\r\n    #if (USE_MASK == 1)\r\n    return texture(volumeTexture, pos).x * getMaskOpacity(pos);\r\n    #else\r\n    return texture(volumeTexture, pos).x;\r\n    #endif\r\n}\r\n\r\nvec3 worldGetNormal(in float px, in vec3 pos)\r\n{\r\n    return normalize(\r\n        vec3(\r\n            px - getMaskedVolume(pos + vec3(gradient_step, 0, 0)),\r\n            px - getMaskedVolume(pos + vec3(0, gradient_step, 0)),\r\n            px - getMaskedVolume(pos + vec3(0, 0, gradient_step))\r\n        )\r\n    );\r\n}\r\n\r\nvoid main() {\r\n    float jitter = texture2D(jitterTexture, gl_FragCoord.xy / 64.0).r;\r\n    float tmin = 0.0;\r\n    float tmax = 0.0;\r\n    float px = -3.402823466e+38F;\r\n    vec4 pxColor = vec4(0.0, 0.0, 0.0, 0.0);\r\n\r\n    inv_range = 1.0 / (high - low);\r\n    aabb[0] = aabb[0] * scale.xyz + translation.xyz;\r\n    aabb[1] = aabb[1] * scale.xyz + translation.xyz;\r\n\r\n    vec3 direction = normalize(transformedWorldPosition - transformedCameraPosition);\r\n    intersect(makeRay(transformedCameraPosition, direction), aabb, tmin, tmax);\r\n\r\n    vec3 textcoord_end = localPosition + vec3(0.5);\r\n    vec3 textcoord_start = textcoord_end - (tmax - max(0.0, tmin)) * direction / scale.xyz;\r\n    vec3 textcoord_delta = textcoord_end - textcoord_start;\r\n\r\n    int sampleCount = min(int(length(textcoord_delta) * samples), int(samples * 1.8));\r\n\r\n    textcoord_delta = textcoord_delta / float(sampleCount);\r\n    textcoord_start = textcoord_start - textcoord_delta * (0.01 + 0.98 * jitter);\r\n\r\n    vec3 textcoord = textcoord_start - textcoord_delta;\r\n    vec3 maxTextcoord = textcoord;\r\n\r\n    float step = length(textcoord_delta);\r\n\r\n    for (int count = 0; count < sampleCount; count++) {\r\n        textcoord += textcoord_delta;\r\n\r\n        #if NUM_CLIPPING_PLANES > 0\r\n        vec4 plane;\r\n        vec3 pos = -vec3(modelViewMatrix * vec4(textcoord - vec3(0.5), 1.0));\r\n\r\n        #pragma unroll_loop_start\r\n        for (int i = 0; i < UNION_CLIPPING_PLANES; i++) {\r\n            plane = clippingPlanes[i];\r\n            if (dot(pos, plane.xyz) > plane.w) continue;\r\n        }\r\n        #pragma unroll_loop_end\r\n        #endif\r\n\r\n        #if (USE_MASK == 1)\r\n        float newPx = texture(volumeTexture, textcoord).x * getMaskOpacity(textcoord);\r\n        #else\r\n        float newPx = texture(volumeTexture, textcoord).x;\r\n        #endif\r\n\r\n        if (newPx > px) {\r\n            px = newPx;\r\n            maxTextcoord = textcoord;\r\n        }\r\n\r\n        if (px >= high) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    float scaled_px = (px - low) * inv_range;\r\n\r\n    if (scaled_px > 0.0) {\r\n        scaled_px = min(scaled_px, 0.99);\r\n\r\n        pxColor = texture(colormap, vec2(scaled_px, 0.5));\r\n    }\r\n\r\n    // LIGHT\r\n    #if NUM_DIR_LIGHTS > 0\r\n    vec4 addedLights = vec4(ambientLightColor / PI, 1.0);\r\n    vec3 normal = worldGetNormal(px, maxTextcoord);\r\n\r\n    vec3 lightDirection;\r\n    float lightingIntensity;\r\n\r\n    #pragma unroll_loop_start\r\n    for (int i = 0; i < NUM_DIR_LIGHTS; i++) {\r\n        lightDirection = -directionalLights[i].direction;\r\n        lightingIntensity = clamp(dot(-lightDirection, normal), 0.0, 1.0);\r\n        addedLights.rgb += directionalLights[i].color / PI * (0.05 + 0.95 * lightingIntensity);\r\n\r\n        #if (USE_SPECULAR == 1)\r\n        pxColor.rgb += directionalLights[i].color / PI * pow(lightingIntensity, 50.0) * pxColor.a;\r\n        #endif\r\n    }\r\n    #pragma unroll_loop_end\r\n\r\n    pxColor.rgb *= addedLights.xyz;\r\n    #endif\r\n\r\n    gl_FragColor = pxColor;\r\n}\r\n"},25663:(e,t,n)=>{const r=n(6101),o=n(69522),i=n(76749),{typedArrayToThree:a}=n(98947),{areAllChangesResolve:s}=n(98947),{commonUpdate:l}=n(98947),{getSide:c}=n(98947);e.exports={create(e,t){e.color=void 0!==e.color?e.color:255,e.opacity=void 0!==e.opacity?e.opacity:1;const s=new r.Matrix4,l=e.color_range,d=e.color_map&&e.color_map.data||null,p=e.vertices&&e.vertices.data||null,u=e.indices&&e.indices.data||null;let m=null;const h=new r.BufferGeometry;e.opacity_function&&e.opacity_function.data&&e.opacity_function.data.length>0&&(m=e.opacity_function.data);const g=i.createCanvasGradient(d,1024,1,m),f=new r.CanvasTexture(g,r.UVMapping,r.ClampToEdgeWrapping,r.ClampToEdgeWrapping,r.NearestFilter,r.NearestFilter);f.needsUpdate=!0,h.setAttribute("position",new r.BufferAttribute(p,3)),h.setIndex(new r.BufferAttribute(u,1));const v=new r.Data3DTexture(e.volume.data,e.volume.shape[2],e.volume.shape[1],e.volume.shape[0]);v.format=r.RedFormat,v.type=a(e.volume.data.constructor),v.generateMipmaps=!1,v.minFilter=r.LinearFilter,v.magFilter=r.LinearFilter,v.wrapT=r.ClampToEdgeWrapping,v.wrapS=r.ClampToEdgeWrapping,v.needsUpdate=!0;const y=new r.ShaderMaterial({uniforms:{opacity:{value:e.opacity},low:{value:l[0]},high:{value:l[1]},volumeTexture:{type:"t",value:v},colormap:{type:"t",value:f},b1:{type:"v3",value:new r.Vector3(e.volume_bounds.data[0],e.volume_bounds.data[2],e.volume_bounds.data[4])},b2:{type:"v3",value:new r.Vector3(e.volume_bounds.data[1],e.volume_bounds.data[3],e.volume_bounds.data[5])}},side:c(e),vertexShader:n(71117),fragmentShader:n(83567),lights:!1,clipping:!0});0===t.parameters.depthPeels?(y.depthWrite=1===e.opacity&&null===m,y.transparent=1!==e.opacity||null!==m):(y.blending=r.NoBlending,y.onBeforeCompile=t.colorOnBeforeCompile),!1===e.flat_shading&&h.computeVertexNormals(),h.computeBoundingSphere(),h.computeBoundingBox();const _=new r.Mesh(h,y);return o.init(e,_,t),s.set.apply(s,e.model_matrix.data),_.applyMatrix4(s),_.updateMatrixWorld(),Promise.resolve(_)},update(e,t,n,r){const a={};if(o.update(e,t,a,n),void 0===t.volume||t.volume.timeSeries||n.material.uniforms.volumeTexture.value.image.data.constructor===t.volume.data.constructor&&n.material.uniforms.volumeTexture.value.image.width===t.volume.shape[2]&&n.material.uniforms.volumeTexture.value.image.height===t.volume.shape[1]&&n.material.uniforms.volumeTexture.value.image.depth===t.volume.shape[0]&&(n.material.uniforms.volumeTexture.value.image.data=t.volume.data,n.material.uniforms.volumeTexture.value.needsUpdate=!0,a.volume=null),void 0===t.color_range||t.color_range.timeSeries||(n.material.uniforms.low.value=t.color_range[0],n.material.uniforms.high.value=t.color_range[1],a.color_range=null),(void 0!==t.color_map&&!t.color_map.timeSeries||void 0!==t.opacity_function&&!t.opacity_function.timeSeries)&&(!t.opacity_function||!1!==n.material.transparent)){const r=i.createCanvasGradient(t.color_map&&t.color_map.data||e.color_map.data,1024,1,t.opacity_function&&t.opacity_function.data||e.opacity_function.data);n.material.uniforms.colormap.value.image=r,n.material.uniforms.colormap.value.needsUpdate=!0,a.color_map=null,a.opacity_function=null}return l(e,t,a,n,r),!!s(t,a)&&Promise.resolve({json:e,obj:n})}}},29052:(e,t,n)=>{const r=n(6101),o=n(69522),i=n(76749),{handleColorMap:a}=n(98947),{areAllChangesResolve:s}=n(98947),{commonUpdate:l}=n(98947),{getSide:c}=n(98947),d=n(80228);function p(e,t){const n=e.map(e=>{const n=new r.Plane((new r.Vector3).fromArray(e),e[3]).clone().applyMatrix4((new r.Matrix4).copy(t).invert());return(new r.Vector4).set(n.normal.x,n.normal.y,n.normal.z,n.constant)});for(let e=n.length;e<8;e++)n[e]=new r.Vector4;return n}e.exports={create:(e,t)=>new Promise(i=>{e.color=void 0!==e.color?e.color:255,e.wireframe=void 0!==e.wireframe&&e.wireframe,e.flat_shading=void 0===e.flat_shading||e.flat_shading,e.opacity=void 0!==e.opacity?e.opacity:1,e.slice_planes=void 0!==e.slice_planes?e.slice_planes:[],e.shininess=void 0!==e.shininess?e.shininess:50;const s=new r.Matrix4,l=e.wireframe?r.MeshBasicMaterial:r.MeshPhongMaterial,u=new r.Texture,m=e.texture,h=e.texture_file_format,g=e.colors&&e.colors.data||null,f=e.color_range,v=e.color_map&&e.color_map.data||null,y=e.attribute&&e.attribute.data||null,_=e.triangles_attribute&&e.triangles_attribute.data||null,x=e.normals&&e.normals.data||null,b=e.vertices&&e.vertices.data||null,w=e.indices&&e.indices.data||null,M=e.uvs&&e.uvs.data||null;let E,C,S,A=new r.BufferGeometry;const P=null!==x&&x.length>0;s.set.apply(s,e.model_matrix.data),A.setAttribute("position",new r.BufferAttribute(b,3)),A.setIndex(new r.BufferAttribute(w,1)),!1===e.flat_shading&&P&&A.setAttribute("normal",new r.BufferAttribute(x,3));const z=new l({color:e.color,emissive:0,shininess:e.shininess,specular:1118481,side:c(e),flatShading:e.flat_shading,wireframe:e.wireframe,opacity:e.opacity});function D(){if(!1!==e.flat_shading||P||A.computeVertexNormals(),e.slice_planes&&e.slice_planes.length>0){A=A.toNonIndexed(),A.computeBoundingSphere(),A.computeBoundingBox();const t=A.attributes.position.array,o=new Float32Array(t.length/3*2),i=new Float32Array(t.length/3*2),a=new Float32Array(t.length/3*2);for(let e=0;e<t.length/9;e++)o.set(t.slice(9*e,9*e+6),6*e),i.set(t.slice(9*e+6,9*e+9),6*e),a.set(t.slice(9*e+3,9*e+6),6*e),i.set(t.slice(9*e+6,9*e+9),6*e+3),a.set(t.slice(9*e,9*e+3),6*e+3);A.setAttribute("next1",new r.BufferAttribute(i,3)),A.setAttribute("next2",new r.BufferAttribute(a,3)),A.setAttribute("position",new r.BufferAttribute(o,3));const l=new r.ShaderMaterial({uniforms:r.UniformsUtils.merge([r.UniformsLib.lights,r.UniformsLib.common,{slicePlanes:{value:p(e.slice_planes,s)},diffuse:{value:new r.Color(e.color)},slicePlanesCount:{value:e.slice_planes.length},opacity:{value:e.opacity}}]),defines:{MAXIMUM_SLICE_PLANES:8},color:e.color,vertexShader:n(6230),fragmentShader:n(74340),depthWrite:1===e.opacity,transparent:1!==e.opacity,lights:!0,clipping:!0});C=new r.LineSegments(A,l),C.renderOrder=10}else A.computeBoundingSphere(),A.computeBoundingBox(),C=new r.Mesh(A,z);o.init(e,C,t),C.applyMatrix4(s),C.updateMatrixWorld(),i(C)}if(0===t.parameters.depthPeels?(z.depthWrite=1===e.opacity,z.transparent=1!==e.opacity):(z.blending=r.NoBlending,z.onBeforeCompile=t.colorOnBeforeCompile),null!==g&&g.length>0)z.setValues({color:16777215,vertexColors:r.VertexColors}),A.setAttribute("color",new r.BufferAttribute(d.colorsToFloat32Array(g),3)),D();else if(y&&f&&v&&y.length>0&&f.length>0&&v.length>0)a(A,v,f,y,z),D();else if(_&&f&&v&&_.length>0&&f.length>0&&v.length>0){A=A.toNonIndexed(),S=new Float32Array(3*_.length);for(let e=0;e<S.length;e++)S[e]=_[Math.floor(e/3)];a(A,v,f,S,z),D()}else m&&h&&M?(E=document.createElement("img"),E.src=`data:image/${h};base64,${d.bufferToBase64(m.data.buffer)}`,A.setAttribute("uv",new r.BufferAttribute(new Float32Array(M),2)),E.onload=function(){z.map=u,u.image=E,u.flipY=!1,u.minFilter=r.LinearFilter,u.needsUpdate=!0,z.needsUpdate=!0,D()}):D()}),update(e,t,n,r){const a={};let c,d;if(!n)return!1;if(n.geometry&&void 0!==n.geometry.attributes.uv){if(void 0!==t.color_range&&!t.color_range.timeSeries){if(c=n.geometry.attributes.uv.array,e.attribute.data.length>0)for(d=0;d<c.length;d++)c[d]=(e.attribute.data[d]-e.color_range[0])/(e.color_range[1]-e.color_range[0]);if(e.triangles_attribute.data.length>0)for(d=0;d<c.length;d++)c[d]=(e.triangles_attribute.data[Math.floor(d/3)]-e.color_range[0])/(e.color_range[1]-e.color_range[0]);n.geometry.attributes.uv.needsUpdate=!0,a.color_range=null}if(n.geometry&&void 0!==t.attribute&&!t.attribute.timeSeries){for(c=n.geometry.attributes.uv.array,d=0;d<c.length;d++)c[d]=(t.attribute.data[d]-e.color_range[0])/(e.color_range[1]-e.color_range[0]);n.geometry.attributes.uv.needsUpdate=!0,a.attribute=null}if(void 0!==t.color_map&&!t.color_map.timeSeries){const r=i.createCanvasGradient(t.color_map&&t.color_map.data||e.color_map.data,1024,1);n.material.map.image=r,n.material.map.needsUpdate=!0,n.material.needsUpdate=!0,a.color_map=null}}if(void 0!==t.slice_planes&&!t.slice_planes.timeSeries){if(0===t.slice_planes.length&&n.material.uniforms)return!1;if(0!==t.slice_planes.length&&!n.material.uniforms)return!1;0!==t.slice_planes.length||n.material.uniforms?(n.material.uniforms.slicePlanes.value=p(t.slice_planes,n.matrix),n.material.uniforms.slicePlanesCount.value=t.slice_planes.length,a.slice_planes=null):a.slice_planes=null}return!(void 0!==t.model_matrix&&!t.model_matrix.timeSeries&&0!==e.slice_planes.length)&&(o.update(e,t,a,n),l(e,t,a,n,r),!!s(t,a)&&Promise.resolve({json:e,obj:n}))}}},30498:(e,t,n)=>{const r=n(91384),o=n(76575),i=n(13621);e.exports={create:(e,t)=>(e.visible=void 0===e.visible||e.visible,e.color=void 0!==e.color?e.color:65280,e.shader=void 0!==e.shader?e.shader:"simple","mesh"===e.shader?o.create(e,t):"simple"===e.shader?r.create(e,t):i.create(e,t)),update:(e,t,n,a)=>"mesh"===e.shader?o.update(e,t,n,a):"simple"===e.shader?r.update(e,t,n,a):i.update(e,t,n,a)}},31543:e=>{const t={x:"x",y:"y",z:"z",none:"none"};e.exports={cameraUpAxisGUI:function(e,n){e.add(n.parameters,"cameraUpAxis",{x:t.x,y:t.y,z:t.z,none:t.none}).name("CameraUpAxis").onChange(e=>{n.setCameraUpAxis(e),n.dispatch(n.events.PARAMETERS_CHANGE,{key:"camera_up_axis",value:e})})},cameraUpAxisModes:t,setupUpVector:function(e,n){n===t.x?e.up.set(1,0,0):n===t.y?e.up.set(0,1,0):n===t.z&&e.up.set(0,0,1)}}},31800:(e,t,n)=>{const r=n(59970);e.exports={version:r.version}},35395:(e,t,n)=>{const r=n(6101);e.exports={init:function e(t,n,o,i,a){function s(e){o.length=0,Object.keys(n[i].map).forEach(e=>{if("addNew"!==e){const t=n[i].map[e].obj;o.push([t.x,t.y,t.z,t.constant])}}),e&&t.render(),a(o)}function l(e,n){const{camera:o}=t.getWorld();o.updateMatrixWorld();const i=(new r.Plane).setFromCoplanarPoints(new r.Vector3(-1,-1,-1).unproject(o),new r.Vector3(1,1,-1).unproject(o),new r.Vector3(1,-1,-1).unproject(o));i.constant-=e.obj.camDist,e.obj.x=i.normal.x,e.obj.y=i.normal.y,e.obj.z=i.normal.z,e.obj.constant=i.constant,e.folder.controllers.forEach(e=>{e.updateDisplay()}),s(n)}for(void 0===n[i]&&(n[i]={}),void 0===n[i].count&&(n[i].count=1),void 0===n[i].map&&(n[i].map={},n[i].map.addNew=n.add({addPlane(){o.push([1,0,0,0]),e(t,n,o,i,a),t.render(),a(o)}},"addPlane").name("Add new"));o.length<Object.keys(n[i].map).length-1;){const e=Object.keys(n[i].map).length-1,t=n[i].map[e-1].folder.controllers;t[t.length-1].object.delete(!0)}let c=0;Object.keys(n[i].map).sort().forEach(e=>{"addNew"!==e&&(parseInt(e,10)!==c&&(n[i].map[c]=n[i].map[e],delete n[i].map[e]),c+=1)}),o.forEach(function(e,r){if(void 0===n[i].map[r]){const o={folder:n.addFolder("Plane #"+n[i].count++),obj:{x:e[0],y:e[1],z:e[2],camDist:5e3*t.getWorld().camera.near,constant:e[3]}};n[i].map[r]=o,o.folder.add(o.obj,"x").step(.001).onChange(s.bind(this,!0)),o.folder.add(o.obj,"y").step(.001).onChange(s.bind(this,!0)),o.folder.add(o.obj,"z").step(.001).onChange(s.bind(this,!0)),o.folder.add(o.obj,"constant").step(.001).onChange(s.bind(this,!0)),o.folder.add({fromCamera(){o.eventId?(o.folder.controllers[4].name("From camera [start]"),t.off(t.events.CAMERA_CHANGE,o.eventId),o.eventId=null):(o.folder.controllers[4].name("From camera [stop]"),o.eventId=t.on(t.events.CAMERA_CHANGE,l.bind(this,o)),l(o,!0))}},"fromCamera").name("From camera [start]"),o.folder.add(o.obj,"camDist").name("Distance").onChange(()=>{o.eventId&&l(o,!0)}),o.folder.controllers[4].domElement.previousSibling.style.width="100%",o.folder.add({delete(e){Object.keys(n[i].map).forEach(e=>{if(o.obj===n[i].map[e].obj){const{folder:r}=n[i].map[e];r.destroy(),o.eventId&&(t.off(t.events.CAMERA_CHANGE,o.eventId),o.eventId=null),delete n[i].map[e]}}),e||s(!0)}},"delete").name("Delete")}else n[i].map[r].obj.x=e[0],n[i].map[r].obj.y=e[1],n[i].map[r].obj.z=e[2],n[i].map[r].obj.constant=e[3],n[i].map[r].folder.controllers.forEach(e=>{e.updateDisplay()})})}}},36578:(e,t,n)=>{const r=n(6101),{closestPowOfTwo:o}=n(98947),{areAllChangesResolve:i}=n(98947);function a(e,t){return e.reduce((e,n)=>{const r=t.measureText(n);let o=0;return r.actualBoundingBoxAscent&&r.actualBoundingBoxDescent&&(o=r.actualBoundingBoxAscent+r.actualBoundingBoxDescent),Math.max(e,o,r.width)},0)}function s(e,t,n,o,i){const a=new r.Texture(e),s=new r.SpriteMaterial({map:a}),l=new r.Sprite(s),c=new r.Matrix4;return a.needsUpdate=!0,l.position.fromArray(t.positions,3*n),l.scale.set(o,o,o),l.boundingBox=(new r.Box3).setFromCenterAndSize(new r.Vector3,new r.Vector3(o,o,o)),i.model_matrix&&(c.set.apply(c,i.model_matrix.data),l.applyMatrix4(c)),l.updateMatrixWorld(),l}function l(e){return`#${(e=parseInt(e,10)+16777216).toString(16).substr(1)}`}e.exports={create(e){e.visible=void 0===e.visible||e.visible,e.color=void 0!==e.color?e.color:16777215,e.font_size=void 0!==e.font_size?e.font_size:68,e.font_weight=void 0!==e.font_weight?e.font_weight:700;const{color:t}=e;let{position:n}=e;const i=e.size||1,c=e.font_face||"Courier New",d=e.font_size,p=`${e.font_weight} ${d}px ${c}`,u=new r.Group;let m;for(n.data?u.positions=n.data:u.positions=n,m=0;m<u.positions.length/3;m++){const n=document.createElement("canvas"),r=n.getContext("2d");r.font=p;let c=Array.isArray(e.text)?e.text[m]:e.text;c=c.split("\n");const h=c.length>1,g=a(c,r);n.width=o(g),n.height=~~n.width,r.font=p,r.textBaseline="top",r.fillStyle=l(t),r.lineWidth=5,c.forEach((e,t)=>{const o=(n.width-g)/2,i=n.height/2-(h?d:d/2)+d*t;r.strokeText(e,o,i),r.fillText(e,o,i)});const f=s(n,u,m,i,e);u.add(f)}return Promise.resolve(u)},update(e,t,n){const r={};if(void 0!==t.position&&!t.position.timeSeries){let e=t.position.data||t.position;n.children.forEach(function(t,n){t.position.fromArray(e,3*n)}),r.position=null}return void 0===t.size||t.size.timeSeries||(n.children.forEach(function(e){e.scale.set(t.size,t.size,t.size)}),r.size=null),!!i(t,r)&&Promise.resolve({json:e,obj:n})}}},37765:e=>{function t(e){return{position:e.point.toArray(),normal:e.face.normal.toArray(),distance:e.distance,face_index:e.faceIndex,face:[e.face.a,e.face.b,e.face.c],uv:e.uv,K3DIdentifier:e.object.K3DIdentifier}}e.exports=function(e,n){return{onHover:e=>(n.dispatch(n.events.OBJECT_HOVERED,t(e)),!1),onClick:e=>(n.dispatch(n.events.OBJECT_CLICKED,t(e)),!1)}}},38662:e=>{e.exports={edgeTable:new Int32Array([0,265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,1370,598,863,85,348,3676,3925,3167,3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,419,681,928,3376,3129,3891,3642,2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0]),triangleTable:new Int32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,9,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,2,10,0,2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,8,3,2,10,8,10,9,8,-1,-1,-1,-1,-1,-1,-1,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,8,11,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,11,2,1,9,11,9,8,11,-1,-1,-1,-1,-1,-1,-1,3,10,1,11,10,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,10,1,0,8,10,8,11,10,-1,-1,-1,-1,-1,-1,-1,3,9,0,3,11,9,11,10,9,-1,-1,-1,-1,-1,-1,-1,9,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,7,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,1,9,4,7,1,7,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,4,7,3,0,4,1,2,10,-1,-1,-1,-1,-1,-1,-1,9,2,10,9,0,2,8,4,7,-1,-1,-1,-1,-1,-1,-1,2,10,9,2,9,7,2,7,3,7,9,4,-1,-1,-1,-1,8,4,7,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,4,7,11,2,4,2,0,4,-1,-1,-1,-1,-1,-1,-1,9,0,1,8,4,7,2,3,11,-1,-1,-1,-1,-1,-1,-1,4,7,11,9,4,11,9,11,2,9,2,1,-1,-1,-1,-1,3,10,1,3,11,10,7,8,4,-1,-1,-1,-1,-1,-1,-1,1,11,10,1,4,11,1,0,4,7,11,4,-1,-1,-1,-1,4,7,8,9,0,11,9,11,10,11,0,3,-1,-1,-1,-1,4,7,11,4,11,9,9,11,10,-1,-1,-1,-1,-1,-1,-1,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,4,1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,5,4,8,3,5,3,1,5,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,10,4,9,5,-1,-1,-1,-1,-1,-1,-1,5,2,10,5,4,2,4,0,2,-1,-1,-1,-1,-1,-1,-1,2,10,5,3,2,5,3,5,4,3,4,8,-1,-1,-1,-1,9,5,4,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,0,8,11,4,9,5,-1,-1,-1,-1,-1,-1,-1,0,5,4,0,1,5,2,3,11,-1,-1,-1,-1,-1,-1,-1,2,1,5,2,5,8,2,8,11,4,8,5,-1,-1,-1,-1,10,3,11,10,1,3,9,5,4,-1,-1,-1,-1,-1,-1,-1,4,9,5,0,8,1,8,10,1,8,11,10,-1,-1,-1,-1,5,4,0,5,0,11,5,11,10,11,0,3,-1,-1,-1,-1,5,4,8,5,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,9,7,8,5,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,3,0,9,5,3,5,7,3,-1,-1,-1,-1,-1,-1,-1,0,7,8,0,1,7,1,5,7,-1,-1,-1,-1,-1,-1,-1,1,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,7,8,9,5,7,10,1,2,-1,-1,-1,-1,-1,-1,-1,10,1,2,9,5,0,5,3,0,5,7,3,-1,-1,-1,-1,8,0,2,8,2,5,8,5,7,10,5,2,-1,-1,-1,-1,2,10,5,2,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,7,9,5,7,8,9,3,11,2,-1,-1,-1,-1,-1,-1,-1,9,5,7,9,7,2,9,2,0,2,7,11,-1,-1,-1,-1,2,3,11,0,1,8,1,7,8,1,5,7,-1,-1,-1,-1,11,2,1,11,1,7,7,1,5,-1,-1,-1,-1,-1,-1,-1,9,5,8,8,5,7,10,1,3,10,3,11,-1,-1,-1,-1,5,7,0,5,0,9,7,11,0,1,0,10,11,10,0,-1,11,10,0,11,0,3,10,5,0,8,0,7,5,7,0,-1,11,10,5,7,11,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,0,1,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,1,9,8,5,10,6,-1,-1,-1,-1,-1,-1,-1,1,6,5,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,6,5,1,2,6,3,0,8,-1,-1,-1,-1,-1,-1,-1,9,6,5,9,0,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,5,9,8,5,8,2,5,2,6,3,2,8,-1,-1,-1,-1,2,3,11,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,0,8,11,2,0,10,6,5,-1,-1,-1,-1,-1,-1,-1,0,1,9,2,3,11,5,10,6,-1,-1,-1,-1,-1,-1,-1,5,10,6,1,9,2,9,11,2,9,8,11,-1,-1,-1,-1,6,3,11,6,5,3,5,1,3,-1,-1,-1,-1,-1,-1,-1,0,8,11,0,11,5,0,5,1,5,11,6,-1,-1,-1,-1,3,11,6,0,3,6,0,6,5,0,5,9,-1,-1,-1,-1,6,5,9,6,9,11,11,9,8,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,4,7,3,6,5,10,-1,-1,-1,-1,-1,-1,-1,1,9,0,5,10,6,8,4,7,-1,-1,-1,-1,-1,-1,-1,10,6,5,1,9,7,1,7,3,7,9,4,-1,-1,-1,-1,6,1,2,6,5,1,4,7,8,-1,-1,-1,-1,-1,-1,-1,1,2,5,5,2,6,3,0,4,3,4,7,-1,-1,-1,-1,8,4,7,9,0,5,0,6,5,0,2,6,-1,-1,-1,-1,7,3,9,7,9,4,3,2,9,5,9,6,2,6,9,-1,3,11,2,7,8,4,10,6,5,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,2,4,2,0,2,7,11,-1,-1,-1,-1,0,1,9,4,7,8,2,3,11,5,10,6,-1,-1,-1,-1,9,2,1,9,11,2,9,4,11,7,11,4,5,10,6,-1,8,4,7,3,11,5,3,5,1,5,11,6,-1,-1,-1,-1,5,1,11,5,11,6,1,0,11,7,11,4,0,4,11,-1,0,5,9,0,6,5,0,3,6,11,6,3,8,4,7,-1,6,5,9,6,9,11,4,7,9,7,11,9,-1,-1,-1,-1,10,4,9,6,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,10,6,4,9,10,0,8,3,-1,-1,-1,-1,-1,-1,-1,10,0,1,10,6,0,6,4,0,-1,-1,-1,-1,-1,-1,-1,8,3,1,8,1,6,8,6,4,6,1,10,-1,-1,-1,-1,1,4,9,1,2,4,2,6,4,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,9,2,4,9,2,6,4,-1,-1,-1,-1,0,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,3,2,8,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,10,4,9,10,6,4,11,2,3,-1,-1,-1,-1,-1,-1,-1,0,8,2,2,8,11,4,9,10,4,10,6,-1,-1,-1,-1,3,11,2,0,1,6,0,6,4,6,1,10,-1,-1,-1,-1,6,4,1,6,1,10,4,8,1,2,1,11,8,11,1,-1,9,6,4,9,3,6,9,1,3,11,6,3,-1,-1,-1,-1,8,11,1,8,1,0,11,6,1,9,1,4,6,4,1,-1,3,11,6,3,6,0,0,6,4,-1,-1,-1,-1,-1,-1,-1,6,4,8,11,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,10,6,7,8,10,8,9,10,-1,-1,-1,-1,-1,-1,-1,0,7,3,0,10,7,0,9,10,6,7,10,-1,-1,-1,-1,10,6,7,1,10,7,1,7,8,1,8,0,-1,-1,-1,-1,10,6,7,10,7,1,1,7,3,-1,-1,-1,-1,-1,-1,-1,1,2,6,1,6,8,1,8,9,8,6,7,-1,-1,-1,-1,2,6,9,2,9,1,6,7,9,0,9,3,7,3,9,-1,7,8,0,7,0,6,6,0,2,-1,-1,-1,-1,-1,-1,-1,7,3,2,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,11,10,6,8,10,8,9,8,6,7,-1,-1,-1,-1,2,0,7,2,7,11,0,9,7,6,7,10,9,10,7,-1,1,8,0,1,7,8,1,10,7,6,7,10,2,3,11,-1,11,2,1,11,1,7,10,6,1,6,7,1,-1,-1,-1,-1,8,9,6,8,6,7,9,1,6,11,6,3,1,3,6,-1,0,9,1,11,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,0,7,0,6,3,11,0,11,6,0,-1,-1,-1,-1,7,11,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,1,9,8,3,1,11,7,6,-1,-1,-1,-1,-1,-1,-1,10,1,2,6,11,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,8,6,11,7,-1,-1,-1,-1,-1,-1,-1,2,9,0,2,10,9,6,11,7,-1,-1,-1,-1,-1,-1,-1,6,11,7,2,10,3,10,8,3,10,9,8,-1,-1,-1,-1,7,2,3,6,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,8,7,6,0,6,2,0,-1,-1,-1,-1,-1,-1,-1,2,7,6,2,3,7,0,1,9,-1,-1,-1,-1,-1,-1,-1,1,6,2,1,8,6,1,9,8,8,7,6,-1,-1,-1,-1,10,7,6,10,1,7,1,3,7,-1,-1,-1,-1,-1,-1,-1,10,7,6,1,7,10,1,8,7,1,0,8,-1,-1,-1,-1,0,3,7,0,7,10,0,10,9,6,10,7,-1,-1,-1,-1,7,6,10,7,10,8,8,10,9,-1,-1,-1,-1,-1,-1,-1,6,8,4,11,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,6,11,3,0,6,0,4,6,-1,-1,-1,-1,-1,-1,-1,8,6,11,8,4,6,9,0,1,-1,-1,-1,-1,-1,-1,-1,9,4,6,9,6,3,9,3,1,11,3,6,-1,-1,-1,-1,6,8,4,6,11,8,2,10,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,11,0,6,11,0,4,6,-1,-1,-1,-1,4,11,8,4,6,11,0,2,9,2,10,9,-1,-1,-1,-1,10,9,3,10,3,2,9,4,3,11,3,6,4,6,3,-1,8,2,3,8,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,0,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,4,2,4,6,4,3,8,-1,-1,-1,-1,1,9,4,1,4,2,2,4,6,-1,-1,-1,-1,-1,-1,-1,8,1,3,8,6,1,8,4,6,6,10,1,-1,-1,-1,-1,10,1,0,10,0,6,6,0,4,-1,-1,-1,-1,-1,-1,-1,4,6,3,4,3,8,6,10,3,0,3,9,10,9,3,-1,10,9,4,6,10,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,5,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,5,11,7,6,-1,-1,-1,-1,-1,-1,-1,5,0,1,5,4,0,7,6,11,-1,-1,-1,-1,-1,-1,-1,11,7,6,8,3,4,3,5,4,3,1,5,-1,-1,-1,-1,9,5,4,10,1,2,7,6,11,-1,-1,-1,-1,-1,-1,-1,6,11,7,1,2,10,0,8,3,4,9,5,-1,-1,-1,-1,7,6,11,5,4,10,4,2,10,4,0,2,-1,-1,-1,-1,3,4,8,3,5,4,3,2,5,10,5,2,11,7,6,-1,7,2,3,7,6,2,5,4,9,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,6,0,6,2,6,8,7,-1,-1,-1,-1,3,6,2,3,7,6,1,5,0,5,4,0,-1,-1,-1,-1,6,2,8,6,8,7,2,1,8,4,8,5,1,5,8,-1,9,5,4,10,1,6,1,7,6,1,3,7,-1,-1,-1,-1,1,6,10,1,7,6,1,0,7,8,7,0,9,5,4,-1,4,0,10,4,10,5,0,3,10,6,10,7,3,7,10,-1,7,6,10,7,10,8,5,4,10,4,8,10,-1,-1,-1,-1,6,9,5,6,11,9,11,8,9,-1,-1,-1,-1,-1,-1,-1,3,6,11,0,6,3,0,5,6,0,9,5,-1,-1,-1,-1,0,11,8,0,5,11,0,1,5,5,6,11,-1,-1,-1,-1,6,11,3,6,3,5,5,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,11,9,11,8,11,5,6,-1,-1,-1,-1,0,11,3,0,6,11,0,9,6,5,6,9,1,2,10,-1,11,8,5,11,5,6,8,0,5,10,5,2,0,2,5,-1,6,11,3,6,3,5,2,10,3,10,5,3,-1,-1,-1,-1,5,8,9,5,2,8,5,6,2,3,8,2,-1,-1,-1,-1,9,5,6,9,6,0,0,6,2,-1,-1,-1,-1,-1,-1,-1,1,5,8,1,8,0,5,6,8,3,8,2,6,2,8,-1,1,5,6,2,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,6,1,6,10,3,8,6,5,6,9,8,9,6,-1,10,1,0,10,0,6,9,5,0,5,6,0,-1,-1,-1,-1,0,3,8,5,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,7,5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,11,7,5,8,3,0,-1,-1,-1,-1,-1,-1,-1,5,11,7,5,10,11,1,9,0,-1,-1,-1,-1,-1,-1,-1,10,7,5,10,11,7,9,8,1,8,3,1,-1,-1,-1,-1,11,1,2,11,7,1,7,5,1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,7,1,7,5,7,2,11,-1,-1,-1,-1,9,7,5,9,2,7,9,0,2,2,11,7,-1,-1,-1,-1,7,5,2,7,2,11,5,9,2,3,2,8,9,8,2,-1,2,5,10,2,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,8,2,0,8,5,2,8,7,5,10,2,5,-1,-1,-1,-1,9,0,1,5,10,3,5,3,7,3,10,2,-1,-1,-1,-1,9,8,2,9,2,1,8,7,2,10,2,5,7,5,2,-1,1,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,7,0,7,1,1,7,5,-1,-1,-1,-1,-1,-1,-1,9,0,3,9,3,5,5,3,7,-1,-1,-1,-1,-1,-1,-1,9,8,7,5,9,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,8,4,5,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,5,0,4,5,11,0,5,10,11,11,3,0,-1,-1,-1,-1,0,1,9,8,4,10,8,10,11,10,4,5,-1,-1,-1,-1,10,11,4,10,4,5,11,3,4,9,4,1,3,1,4,-1,2,5,1,2,8,5,2,11,8,4,5,8,-1,-1,-1,-1,0,4,11,0,11,3,4,5,11,2,11,1,5,1,11,-1,0,2,5,0,5,9,2,11,5,4,5,8,11,8,5,-1,9,4,5,2,11,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,5,10,3,5,2,3,4,5,3,8,4,-1,-1,-1,-1,5,10,2,5,2,4,4,2,0,-1,-1,-1,-1,-1,-1,-1,3,10,2,3,5,10,3,8,5,4,5,8,0,1,9,-1,5,10,2,5,2,4,1,9,2,9,4,2,-1,-1,-1,-1,8,4,5,8,5,3,3,5,1,-1,-1,-1,-1,-1,-1,-1,0,4,5,1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,5,8,5,3,9,0,5,0,3,5,-1,-1,-1,-1,9,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,11,7,4,9,11,9,10,11,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,7,9,11,7,9,10,11,-1,-1,-1,-1,1,10,11,1,11,4,1,4,0,7,4,11,-1,-1,-1,-1,3,1,4,3,4,8,1,10,4,7,4,11,10,11,4,-1,4,11,7,9,11,4,9,2,11,9,1,2,-1,-1,-1,-1,9,7,4,9,11,7,9,1,11,2,11,1,0,8,3,-1,11,7,4,11,4,2,2,4,0,-1,-1,-1,-1,-1,-1,-1,11,7,4,11,4,2,8,3,4,3,2,4,-1,-1,-1,-1,2,9,10,2,7,9,2,3,7,7,4,9,-1,-1,-1,-1,9,10,7,9,7,4,10,2,7,8,7,0,2,0,7,-1,3,7,10,3,10,2,7,4,10,1,10,0,4,0,10,-1,1,10,2,8,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,7,1,3,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,0,8,1,8,7,1,-1,-1,-1,-1,4,0,3,7,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,11,9,10,-1,-1,-1,-1,-1,-1,-1,0,1,10,0,10,8,8,10,11,-1,-1,-1,-1,-1,-1,-1,3,1,10,11,3,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,11,1,11,9,9,11,8,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,1,2,9,2,11,9,-1,-1,-1,-1,0,2,11,8,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,2,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,10,8,9,-1,-1,-1,-1,-1,-1,-1,9,10,2,0,9,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,0,1,8,1,10,8,-1,-1,-1,-1,1,10,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,8,9,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,9,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1])}},41585:(e,t,n)=>{const r=n(6101);e.exports={create(e){const t=new r.Object3D,n=new r.Matrix4;var o,i;return t.add(new r.LineSegments(new r.BufferGeometry,new r.LineBasicMaterial({color:16777215,transparent:!0,opacity:.5}))),t.add(new r.Mesh(new r.BufferGeometry,new r.MeshPhongMaterial({color:e.color,emissive:0,side:r.DoubleSide,flatShading:!0}))),o=t,i=new r.TorusKnotGeometry(e.radius,e.tube,64,e.knotsNumber,2,3),o.children[0].geometry.dispose(),o.children[1].geometry.dispose(),o.children[0].geometry=new r.WireframeGeometry(i),o.children[1].geometry=i,o.children[0].geometry.computeBoundingSphere(),o.children[1].geometry.computeBoundingSphere(),o.children[0].geometry.computeBoundingBox(),o.children[1].geometry.computeBoundingBox(),n.set.apply(n,e.model_matrix.data),t.applyMatrix4(n),t.updateMatrixWorld(),Promise.resolve(t)}}},44579:e=>{e.exports=function(e,t){const n=new XMLHttpRequest;n.open("GET",e,!0),n.onreadystatechange=function(){4===n.readyState&&t(n.response)},n.send(null)}},46376:e=>{"use strict";e.exports="varying vec2 vUv;\r\nuniform sampler2D uTextureA;\r\nuniform sampler2D uTextureB;\r\nuniform int uBlit;\r\n\r\nvoid main(){\r\n    vec4 src = texture2D(uTextureA, vUv);\r\n    vec4 dst = texture2D(uTextureB, vUv);\r\n\r\n    if (uBlit == 0) {\r\n        gl_FragColor = src;\r\n    } else {\r\n        gl_FragColor = src;\r\n        gl_FragColor.xyz *= gl_FragColor.a;\r\n    }\r\n\r\n    if (gl_FragColor.a == 0.) discard;\r\n}"},46392:(e,t,n)=>{const r=n(6101),o=n(80228),i=n(76749),a=n(69522),s=n(7659),l=n(92367),c=n(98947),{commonUpdate:d}=c,{areAllChangesResolve:p}=c,{getColorsArray:u}=c,{colorsToFloat32Array:m}=o;e.exports={create(e,t){const o=new r.Matrix4,d=new r.Color(e.color),p=e.positions.data,h=e.colors&&e.colors.data||null,{shader:g}=e;let f=null;const v=e.opacities&&e.opacities.data&&e.opacities.data.length===p.length/3?e.opacities.data:null,y=e.point_sizes&&e.point_sizes.data&&e.point_sizes.data.length===p.length/3?e.point_sizes.data:null,_={dot:n(52096),flat:n(59574),"3d":n(1022),"3dspecular":n(1022)},x={dot:n(17794),flat:n(83349),"3d":n(83349),"3dspecular":n(83349)},b=e.color_map&&e.color_map.data||null;let w=e.opacity_function&&e.opacity_function.data||null;const M=e.color_range,E=e.attribute&&e.attribute.data||null;let C={},S=0;const A=_[g.toLowerCase()]||_.flat,P=x[g.toLowerCase()]||x.flat;if(E&&M&&b&&E.length>0&&M.length>0&&b.length>0){S=1,null!==w&&0!==w.length||(w=[b[0],1,b[b.length-4],1],e.opacity_function={data:w,shape:[4]});const t=i.createCanvasGradient(b,1024,1,w),n=new r.CanvasTexture(t,r.UVMapping,r.ClampToEdgeWrapping,r.ClampToEdgeWrapping,r.NearestFilter,r.NearestFilter);n.needsUpdate=!0,C={low:{value:M[0]},high:{value:M[1]},colormap:{type:"t",value:n}}}else f=h&&h.length===p.length/3?m(h):u(d,p.length/3);const z=new r.ShaderMaterial({uniforms:r.UniformsUtils.merge([r.UniformsLib.lights,r.UniformsLib.points,C]),defines:{USE_SPECULAR:"3dSpecular"===g?1:0,PROVIDED_FRAG_COORD_Z:1,USE_COLOR_MAP:S,USE_PER_POINT_OPACITY:null!==v?1:0,USE_PER_POINT_SIZE:null!==y?1:0},vertexShader:P,fragmentShader:A,opacity:e.opacity,lights:!0,clipping:!0,extensions:{fragDepth:!0}});z.depthWrite=1===e.opacity&&null===v,z.transparent=1!==e.opacity||null!==v,z.size=e.point_size,z.color=new r.Color(1,1,1),z.map=null,z.isPointsMaterial=!0;const D=new r.Points(function(e,t,n,o,i){const a=new r.BufferGeometry;return a.setAttribute("position",new r.BufferAttribute(new Float32Array(e),3)),t&&t.length>0&&a.setAttribute("color",new r.BufferAttribute(t,3)),n&&n.length>0&&a.setAttribute("opacities",new r.BufferAttribute(n,1).setUsage(r.DynamicDrawUsage)),o&&o.length>0&&a.setAttribute("sizes",new r.BufferAttribute(o,1).setUsage(r.DynamicDrawUsage)),i&&i.length>0&&a.setAttribute("attributes",new r.BufferAttribute(i,1).setUsage(r.DynamicDrawUsage)),a.computeBoundingSphere(),a.computeBoundingBox(),a}(p,f,v,y,S?E:null),z);return"dot"!==e.shader&&c.expandBoundingBox(D.geometry.boundingBox,.5*e.point_size),a.init(e,D,t,s,l.prepareGeometry(D.geometry),l.Intersect),o.set.apply(o,e.model_matrix.data),D.applyMatrix4(o),D.updateMatrixWorld(),Promise.resolve(D)},update(e,t,n,r){const o={};if(void 0===t.positions||t.positions.timeSeries||t.positions.data.length!==n.geometry.attributes.position.array.length||(n.geometry.attributes.position.array.set(t.positions.data),n.geometry.attributes.position.needsUpdate=!0,n.geometry.computeBoundingSphere(),n.geometry.computeBoundingBox(),o.positions=null,n.interactions&&(n.stopInteraction(),a.init(e,n,r,s,l.prepareGeometry(n.geometry),l.Intersect))),void 0!==t.color_range&&!t.color_range.timeSeries&&n.geometry.attributes.attributes&&(n.material.uniforms.low.value=t.color_range[0],n.material.uniforms.high.value=t.color_range[1],o.color_range=null),(void 0!==t.color_map&&!t.color_map.timeSeries||void 0!==t.opacity_function&&!t.opacity_function.timeSeries)&&n.geometry.attributes.attributes){const r=i.createCanvasGradient(t.color_map&&t.color_map.data||e.color_map.data,1024,1,t.opacity_function&&t.opacity_function.data||e.opacity_function.data);n.material.uniforms.colormap.value.image=r,n.material.uniforms.colormap.value.needsUpdate=!0,o.color_map=null,o.opacity_function=null}return void 0!==t.attribute&&!t.attribute.timeSeries&&n.geometry.attributes.attributes&&t.attribute.data.length===n.geometry.attributes.attributes.array.length&&(n.geometry.attributes.attributes.array.set(t.attribute.data),n.geometry.attributes.attributes.needsUpdate=!0,o.attribute=null),void 0===t.colors||t.colors.timeSeries||t.colors.data.length!==n.geometry.attributes.color.array.length/3||(n.geometry.attributes.color.array.set(m(t.colors.data)),n.geometry.attributes.color.needsUpdate=!0,o.colors=null),a.update(e,t,o,n),d(e,t,o,n,r),!!p(t,o)&&Promise.resolve({json:e,obj:n})}}},47189:(e,t,n)=>{const r=n(31372).default;e.exports={isAvailable:()=>r.isEnabled,initialize:function(e,t,n,o){const i={fullscreen:!1},a=t.add(i,"fullscreen").name("Full screen").onChange(t=>{o.heavyOperationSync=!0,t?r.request(e):r.exit()});n.addEventListener(r.raw.fullscreenchange,()=>{i.fullscreen=r.isFullscreen,a.updateDisplay(),n.dispatchEvent(new Event("resize"))})},screenfull:r}},47731:e=>{e.exports=function(e,t){const n="object"==typeof t,r=n&&t.hasOwnProperty("type"),o=r&&e.Provider.hasOwnProperty("Objects")&&e.Provider.Objects.hasOwnProperty(t.type);if(!n)throw new Error("Object definition should be a valid javascript object!");if(!r)throw new Error("Object definition should have a `type` attribute set!");if(!o)throw new Error(`Unknown object type (${t.type}) passed, no loader supporting it found!`);return t}},48511:(e,t,n)=>{const r=n(6101),o=n(21091),i=n(69522),a=n(72348),s=n(85763),{areAllChangesResolve:l,getSide:c,typedArrayToThree:d}=n(98947),{commonUpdate:p}=n(98947),u=n(76749),m=n(62419);e.exports={create:(e,t)=>(e.visible=void 0===e.visible||e.visible,e.color=void 0!==e.color?e.color:255,e.wireframe=void 0!==e.wireframe&&e.wireframe,e.flat_shading=void 0===e.flat_shading||e.flat_shading,e.opacity=void 0!==e.opacity?e.opacity:1,e.shininess=void 0!==e.shininess?e.shininess:50,new Promise(l=>{const p=e.scalar_field.data,h=e.scalar_field.shape[2],g=e.scalar_field.shape[1],f=e.scalar_field.shape[0],v=e.spacings_x,y=e.spacings_y,_=e.spacings_z;let x=!1;const{level:b}=e,w=new r.Matrix4,M=e.wireframe?r.MeshBasicMaterial:r.MeshPhongMaterial,E=e.color_range,C=e.color_map&&e.color_map.data||null;let S,A,P,z,D,T=null,k=new M({color:e.color,emissive:0,shininess:e.shininess,specular:1118481,side:e.wireframe?r.FrontSide:r.DoubleSide,flatShading:e.flat_shading,wireframe:e.wireframe,opacity:e.opacity}),O=new r.BufferGeometry,j=[],I=0;const L=a;if(function(e){return e.attribute&&e.attribute.data&&e.attribute.data.length>0&&e.color_range&&e.color_range.length>0&&e.color_map&&e.color_map.data&&e.color_map.data.length>0}(e)){e.opacity_function&&e.opacity_function.data&&e.opacity_function.data.length>0&&(T=e.opacity_function.data);const t=u.createCanvasGradient(C,1024,1,T),o=new r.CanvasTexture(t,r.UVMapping,r.ClampToEdgeWrapping,r.ClampToEdgeWrapping,r.NearestFilter,r.NearestFilter);o.needsUpdate=!0;const i=new r.Data3DTexture(e.attribute.data,e.attribute.shape[2],e.attribute.shape[1],e.attribute.shape[0]);i.format=r.RedFormat,i.type=d(e.attribute.data.constructor),i.generateMipmaps=!1,i.minFilter=r.LinearFilter,i.magFilter=r.LinearFilter,i.wrapT=r.ClampToEdgeWrapping,i.wrapS=r.ClampToEdgeWrapping,i.needsUpdate=!0,k=new r.ShaderMaterial({uniforms:m.merge({opacity:{value:e.opacity},low:{value:E[0]},high:{value:E[1]},volumeTexture:{type:"t",value:i},colormap:{type:"t",value:o},emissive:{type:"v3",value:new r.Vector3(0,0,0)},specular:{type:"v3",value:new r.Vector3(.04,.04,.04)},shininess:{value:e.shininess}},r.UniformsLib.lights),defines:{FLAT_SHADED:e.flat_shading},side:c(e),vertexShader:n(53461),fragmentShader:n(75527),wireframe:e.wireframe,flatShading:e.flat_shading,lights:!0,clipping:!0})}0===t.parameters.depthPeels?(k.depthWrite=1===e.opacity&&null===T,k.transparent=1!==e.opacity||null!==T):(k.blending=r.NoBlending,k.onBeforeCompile=t.colorOnBeforeCompile),v&&y&&_&&(x=v.shape[0]===h-1&&y.shape[0]===g-1&&_.shape[0]===f-1),s(f-1,5,x?function(e){for(P=0,z=0;z<g-1;z++){for(A=0,D=0;D<h-1;D++)L(j,p,b,h,g,f,D,z,e,A,P,I,v.data[D],y.data[z],_.data[e]),A+=v.data[D];P+=y.data[z]}I+=_.data[e]}:function(e){const t=1/(h-1),n=1/(g-1),r=1/(f-1);for(P=0,z=0;z<g-1;z++){for(A=0,D=0;D<h-1;D++)L(j,p,b,h,g,f,D,z,e,A,P,I,t,n,r),A+=t;P+=n}I+=r},()=>{let n=1,a=1,s=1;j=new Float32Array(j),O.setAttribute("position",new r.BufferAttribute(j,3)),!1===e.flat_shading&&(O=o.mergeVertices(O),O.computeVertexNormals()),x&&(n=v.data.reduce((e,t)=>e+t,0),a=y.data.reduce((e,t)=>e+t,0),s=_.data.reduce((e,t)=>e+t,0)),O.boundingSphere=new r.Sphere(new r.Vector3(.5*n,.5*a,.5*s),new r.Vector3(.5*n,.5*a,.5*s).length()),O.boundingBox=new r.Box3(new r.Vector3(0,0,0),new r.Vector3(n,a,s)),S=new r.Mesh(O,k),S.scale.set(1/n,1/a,1/s),i.init(e,S,t),w.set.apply(w,e.model_matrix.data),S.position.set(-.5,-.5,-.5),S.initialPosition=S.position.clone(),S.updateMatrix(),S.applyMatrix4(w),S.updateMatrixWorld(),l(S)})})),update(e,t,n,r){const o={};if(i.update(e,t,o,n),void 0===t.attribute||t.attribute.timeSeries||n.material.uniforms&&n.material.uniforms.volumeTexture.value.image.data.constructor===t.attribute.data.constructor&&n.material.uniforms.volumeTexture.value.image.width===t.attribute.shape[2]&&n.material.uniforms.volumeTexture.value.image.height===t.attribute.shape[1]&&n.material.uniforms.volumeTexture.value.image.depth===t.attribute.shape[0]&&(n.material.uniforms.volumeTexture.value.image.data=t.attribute.data,n.material.uniforms.volumeTexture.value.needsUpdate=!0,o.volume=null),n.material.uniforms&&void 0!==t.color_range&&!t.color_range.timeSeries&&(n.material.uniforms.low.value=t.color_range[0],n.material.uniforms.high.value=t.color_range[1],o.color_range=null),(n.material.uniforms&&void 0!==t.color_map&&!t.color_map.timeSeries||void 0!==t.opacity_function&&!t.opacity_function.timeSeries)&&(!t.opacity_function||!1!==n.material.transparent)){const r=u.createCanvasGradient(t.color_map&&t.color_map.data||e.color_map.data,1024,1,t.opacity_function&&t.opacity_function.data||e.opacity_function.data);n.material.uniforms.colormap.value.image=r,n.material.uniforms.colormap.value.needsUpdate=!0,o.color_map=null,o.opacity_function=null}return p(e,t,o,n,r),!!l(t,o)&&Promise.resolve({json:e,obj:n})}}},51421:(e,t,n)=>{const r=n(97132),o=n(74109);e.exports={create:(e,t)=>(e.visible=void 0===e.visible||e.visible,e.file_format&&e.binary?r.create(e,t):o.create(e,t)),update:(e,t,n,i)=>e.file_format&&e.binary?r.update(e,t,n,i):o.update(e,t,n,i)}},52096:e=>{"use strict";e.exports="varying vec4 vColor;\r\nuniform float opacity;\r\n\r\n#include <common>\r\n#include <clipping_planes_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n\r\nvarying vec4 mvPosition;\r\n\r\nvoid main(void)\r\n{\r\n    #include <clipping_planes_fragment>\r\n    #include <logdepthbuf_fragment>\r\n\r\n    vec4 color = vColor;\r\n    color.a *= opacity;\r\n\r\n    float fragCoordZ = mvPosition.z;\r\n\r\n    gl_FragColor = color;\r\n}\r\n"},52557:e=>{e.exports=function(e){e.CopyShader={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","gl_FragColor = opacity * texel;","}"].join("\n")}}},52681:(e,t,n)=>{const r=n(29052),o=n(25663);function i(e){return e.volume&&e.volume.data&&e.volume.data.length>0&&e.volume_bounds&&e.volume_bounds.data&&e.volume_bounds.data.length>0&&e.color_range&&e.color_range.length>0&&e.color_map&&e.color_map.data&&e.color_map.data.length>0}e.exports={create:(e,t)=>(e.visible=void 0===e.visible||e.visible,i(e)?o.create(e,t):r.create(e,t)),update:(e,t,n,a)=>i(e)?o.update(e,t,n,a):r.update(e,t,n,a)}},53412:(e,t,n)=>{const r=n(62419);e.exports=r.extend({},n(11794)),e.exports.version=n(31800).version},53461:e=>{"use strict";e.exports="#include <common>\r\n#include <clipping_planes_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <normal_pars_vertex>\r\n\r\nvarying vec3 localPosition;\r\nvarying vec3 vViewPosition;\r\n\r\nvoid main() {\r\n    #include <beginnormal_vertex>\r\n\r\n    #include <begin_vertex>\r\n    #include <project_vertex>\r\n    #include <defaultnormal_vertex>\r\n    #include <normal_vertex>\r\n\r\n    localPosition = position + vec3(0.5, 0.5, 0.5);\r\n    vViewPosition = -mvPosition.xyz;\r\n\r\n    #include <worldpos_vertex>\r\n    #include <logdepthbuf_vertex>\r\n    #include <clipping_planes_vertex>\r\n\r\n}\r\n"},55228:(e,t,n)=>{const r=n(6101),o=n(21091),i=n(98947),{areAllChangesResolve:a}=i,{commonUpdate:s}=i,{colorsToFloat32Array:l}=n(80228),c=n(61202),{handleColorMap:d}=i;e.exports={create(e,t){e.radial_segments=void 0!==e.radial_segments?e.radial_segments:8,e.width=void 0!==e.width?e.width:.1,e.opacity=void 0!==e.opacity?e.opacity:1,e.shininess=void 0!==e.shininess?e.shininess:50;const n=new r.MeshPhongMaterial({emissive:0,shininess:e.shininess,specular:1118481,side:r.DoubleSide,wireframe:!1,opacity:e.opacity,transparent:1!==e.opacity}),i=e.radial_segments,{width:a}=e;let s=e.colors&&e.colors.data||[];const p=new r.Color(e.color),u=e.color_range,m=e.color_map&&e.color_map.data||null,h=e.attribute&&e.attribute.data||[],g=new r.Matrix4,f=e.vertices.data,v=e.indices.data,y=new Set,_="segment"===e.indices_type?2:3;0===t.parameters.depthPeels?n.depthWrite=1===e.opacity:n.onBeforeCompile=t.colorOnBeforeCompile,s&&s.length===f.length/3&&(s=l(s));const x=[],b=f.length/3;let w;for(let e=0;e<v.length;e+=_){w=3===_?[[v[e],v[e+1]],[v[e+1],v[e+2]],[v[e+2],v[e]]]:[[v[e],v[e+1]]];for(let e=0;e<w.length;e++){const t=w[e][0]>w[e][1]?w[e][0]+w[e][1]*b:w[e][1]+w[e][0]*b;if(!y.has(t)){y.add(t);const n=3*w[e][0],r=3*w[e][1];x.push(c([f[n],f[n+1],f[n+2],f[r],f[r+1],f[r+2]],h.length>0?[h[w[e][0]],h[w[e][1]]]:null,a,i,p,s.length>0?[s[n],s[n+1],s[n+2],s[r],s[r+1],s[r+2]]:null,u))}}}const M=o.mergeBufferGeometries(x);h&&u&&m&&h.length>0&&u.length>0&&m.length>0?d(M,m,u,null,n):n.setValues({vertexColors:r.VertexColors}),M.computeBoundingSphere(),M.computeBoundingBox(),g.set.apply(g,e.model_matrix.data);const E=new r.Mesh(M,n);return E.applyMatrix4(g),E.updateMatrixWorld(),Promise.resolve(E)},update(e,t,n,r){const o={};return s(e,t,o,n,r),!!a(t,o)&&Promise.resolve({json:e,obj:n})}}},56389:(e,t,n)=>{const r=n(27244),o=n(71967),i=n(64756),a=n(63806),s=n(3899),l=n(61812),c=n(62419),d=r.createCodec({preset:!0}),p=n(95080);function u(e){return r.decode(e,{codec:d})}window.Float16Array=p,d.addExtPacker(32,p,e=>e),d.addExtUnpacker(32,e=>p(e.buffer)),n(68040),n(36186),e.exports={K3D:s,msgpackDecode:u,serialize:a,CreateK3DAndLoadBinarySnapshot:function(e,t){return new Promise((n,r)=>{let i;o.unzlib(new Uint8Array(e),(o,a)=>{o||(e=a),e=u(e);try{i=new s(l,t,e.plot)}catch(e){return console.log(e),r(e)}return i.setSnapshot(e).then(()=>(setTimeout(()=>{e.plot.camera.length>0&&(i.setCamera(e.plot.camera),i.render())},10),n(i)))})})},TransferFunctionEditor:i.transferFunctionEditor,TransferFunctionModel:i.transferFunctionModel,TransferFunctionView:i.transferFunctionView,ThreeJsProvider:l,_:c,version:n(31800).version}},57458:e=>{e.exports=function(e,t){const n={resetCamera(){t.getWorld().setCameraToFitScene(!0),t.getWorld().render()}};e.add(n,"resetCamera").name("Reset camera")}},57475:(e,t,n)=>{const r=n(6101),o=n(21091),i=n(80228),{areAllChangesResolve:a}=n(98947),{commonUpdate:s}=n(98947),l=n(99834)(r),{getTwoColorsArray:c}=n(98947),{generateArrow:d}=n(98947);e.exports={create(e,t){e.visible=void 0===e.visible||e.visible,e.origin_color=void 0!==e.origin_color?e.origin_color:255,e.head_color=void 0!==e.head_color?e.head_color:255,e.use_head=void 0===e.use_head||e.use_head,e.head_size=e.head_size||1,e.scale=e.scale||1,e.line_width=e.line_width||.01;const n=(new r.Matrix4).fromArray(e.model_matrix.data),a=new r.Color(e.origin_color),s=new r.Color(e.head_color);let p=e.vectors.shape[2],u=e.vectors.shape[1],m=e.vectors.shape[0],h=e.vectors.data,g=e.colors&&e.colors.data||null;const f=e.use_head,v=e.head_size,{scale:y}=e,_=new r.Group;let x,b,w,M,E,C,S=null;const A=[],{colorsToFloat32Array:P}=i;3===e.vectors.shape.length&&(p=u,u=m,m=1,h=function(e){let t;const n=new Float32Array(e.length/2*3);for(t=0;t<e.length/2;t++)n[3*t]=e[2*t],n[3*t+1]=e[2*t+1],n[3*t+2]=0;return n}(h));const z=y/Math.max(p,u,m);g=g?P(g):c(a,s,p*u*m*2);const D=new r.CylinderGeometry(0,.025*v*z,.2*v*z,5,1).translate(0,-.1*v*z,0);for(w=0,M=0;w<m;w++)for(b=0;b<u;b++)for(x=0;x<p;x++,M++)E=new r.Vector3(x/p,b/u,w/m),C=new r.Vector3(h[3*M]/2*z,h[3*M+1]/2*z,h[3*M+2]/2*z).add(E),S=d(f?D:null,A,S,E,C,new r.Color(g[6*M+3],g[6*M+4],g[6*M+5]),.2*v*z);f&&function(e,t){(e=o.mergeBufferGeometries(e)).computeBoundingSphere(),e.computeBoundingBox(),t.add(new r.Mesh(e,new r.MeshBasicMaterial({vertexColors:r.VertexColors})))}(S,_);let T=new l.MeshLine;const k=new l.MeshLineMaterial({color:new r.Color(1,1,1),opacity:1,sizeAttenuation:!0,transparent:!0,lineWidth:e.line_width,resolution:new r.Vector2(t.getWorld().width,t.getWorld().height),side:r.DoubleSide},t);T.setGeometry(new Float32Array(A),!0,null,g),T.geometry.computeBoundingSphere(),T.geometry.computeBoundingBox(),T=new r.Mesh(T.geometry,k),_.add(T),_.position.set(-.5,-.5,1===m?0:-.5),_.initialPosition=_.position.clone(),_.updateMatrix(),_.applyMatrix4(n),_.boundingBox=T.geometry.boundingBox,_.updateMatrixWorld();const O=t.on(t.events.RESIZED,()=>{T.material.uniforms.resolution.value.x=t.getWorld().width,T.material.uniforms.resolution.value.y=t.getWorld().height});return _.onRemove=function(){t.off(t.events.RESIZED,O)},Promise.resolve(_)},update(e,t,n,r){const o={};return s(e,t,o,n,r),!!a(t,o)&&Promise.resolve({json:e,obj:n})}}},58248:(e,t,n)=>{const r=n(44186),o=n(71967),i=n(68225),a=n(38785),s=n(44579),l=n(11904).A,c=n(71860).A,d=n(9418).A,p=n(31800).version,u=n(80228);let m=window.k3dCompressed;const h=document.getElementsByTagName("script");let g;if(void 0===m){m="";for(let e=0;e<h.length;e++)h[e].getAttribute("src")&&h[e].getAttribute("src").includes("k3d")&&h[e].getAttribute("src").includes(".js")&&(g=h[e].getAttribute("src"));void 0!==g?(g=g.replaceAll("\\\\","/").replaceAll("\\","/"),g=g.split("/").slice(0,-1).join("/")+"/standalone.js"):g=`https://unpkg.com/k3d@${p}/dist/standalone.js`;try{s(g,e=>{e=o.strToU8(e),m=u.arrayBufferToBase64(o.zlibSync(e))},e=>{console.error("K3D: Failed to load source code:",e.message),m=""})}catch(e){e("K3D Error","Failed to load source code: "+e.message),m=""}}function f(e,t){e.heavyOperationSync=!0;const n=u.arrayBufferToBase64(e.getSnapshot(t));let r;const o=(new Date).toUTCString();return"full"===e.parameters.snapshotType?(r=l,r=r.split("[REQUIRE_JS]").join(i),r=r.split("[FFLATE_JS]").join(a),r=r.split("[K3D_SOURCE]").join(m)):"online"===e.parameters.snapshotType?(r=c,r=r.split("[VERSION]").join(e.parameters.guiVersion)):"inline"===e.parameters.snapshotType&&(r=d,r=r.split("[ID]").join(Math.floor(1e9*Math.random())),r=r.split("[HEIGHT]").join(e.parameters.height||512),r=r.split("[VERSION]").join(e.parameters.guiVersion)),r=r.split("[DATA]").join(n),r=r.split("[TIMESTAMP]").join(o),r=r.split("[ADDITIONAL]").join(e.parameters.additionalJsCode),r}function v(e,t){const{files:n}=t.dataTransfer,r=new FileReader,i=new FileReader,a=new FileReader;if(t.stopPropagation(),t.preventDefault(),r.onload=function(t){const n=e.extractSnapshot(t.target.result);n[1]&&e.setSnapshot(n[1])},i.onload=function(t){e.setSnapshot(o.unzlibSync(t.target.result))},a.onload=function(t){const n=t.target.result;e.load({objects:[{type:"STL",model_matrix:{data:[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]},binary:n,visible:!0,color:255,wireframe:!1,flat_shading:!1}]})},n.length>0){if("html"===n[0].name.substr(-4).toLowerCase())return void r.readAsText(n[0]);if("stl"===n[0].name.substr(-3).toLowerCase())return void a.readAsArrayBuffer(n[0]);i.readAsArrayBuffer(n[0])}}function y(e){e.stopPropagation(),e.preventDefault(),e.dataTransfer.dropEffect="copy"}e.exports={snapshotGUI:function(e,t){const n={snapshot(){let e=f(t,9),n=`K3D-snapshot-${Date.now()}.html`;t.parameters.name&&(n=`${t.parameters.name}.html`),e=new Blob([e],{type:"text/plain;charset=utf-8"}),r.saveAs(e,n)}};e.add(n,"snapshot").name("Snapshot HTML");const o=t.getWorld().targetDOMNode;o.addEventListener("dragover",y,!1),o.addEventListener("drop",v.bind(null,t),!1)},getHTMLSnapshot:f}},59574:e=>{"use strict";e.exports="#include <common>\r\n#include <clipping_planes_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <lights_pars_begin>\r\n\r\nuniform float size;\r\nuniform float specular;\r\nuniform float opacity;\r\nuniform mat4 projectionMatrix;\r\n\r\nvarying vec4 vColor;\r\nvarying vec4 mvPosition;\r\n\r\nvoid main(void)\r\n{\r\n    #include <clipping_planes_fragment>\r\n\r\n    vec2 impostorSpaceCoordinate = (gl_PointCoord.xy - vec2(0.5, 0.5)) * 2.0;\r\n    float distanceFromCenter = length(impostorSpaceCoordinate);\r\n\r\n    if (distanceFromCenter > 1.0) discard;\r\n\r\n    float normalizedDepth = sqrt(1.0 - distanceFromCenter * distanceFromCenter);\r\n    float depthOfFragment = normalizedDepth * size * 0.5;\r\n\r\n    vec4 pos = vec4(mvPosition.xyz, 1.0);\r\n    pos.z += depthOfFragment;\r\n    pos = projectionMatrix * pos;\r\n\r\n    #ifdef USE_LOGDEPTHBUF_EXT\r\n    float depth = log2(1.0 + pos.w) * logDepthBufFC * 0.5;\r\n    #else\r\n    pos = pos / pos.w;\r\n    float depth = ((gl_DepthRange.diff * pos.z) + gl_DepthRange.near + gl_DepthRange.far) / 2.0;\r\n    #endif\r\n\r\n    gl_FragDepthEXT = depth;\r\n    float fragCoordZ = pos.z;\r\n\r\n    vec4 finalSphereColor = vColor;\r\n    finalSphereColor.a *= opacity;\r\n\r\n    gl_FragColor = finalSphereColor;\r\n}\r\n"},59970:e=>{"use strict";e.exports=JSON.parse('{"name":"k3d","version":"2.17.0","description":"3D visualization library","author":"k3d team","main":"src/index.js","repository":{"type":"git","url":"https://github.com/K3D-tools/K3D-jupyter.git"},"keywords":["jupyter","widgets","ipython","ipywidgets","jupyterlab","jupyterlab-extension"],"scripts":{"build":"webpack","test":"echo \\"Error: no test specified\\" && exit 1"},"jupyterlab":{"extension":"dist/labplugin"},"devDependencies":{"components-webfontloader":"1.5.2","copy-webpack-plugin":"^11.0.0","cors":"2.8.5","css-loader":"^6.7.1","eslint":"^8.16.0","eslint-config-airbnb-base":"^15.0.0","eslint-plugin-import":"^2.26.0","eslint-plugin-markdown":"^2.2.1","express":"^4.18.1","grunt":"^1.5.3","grunt-contrib-clean":"2.0.1","grunt-contrib-connect":"^3.0.0","grunt-contrib-jshint":"^3.2.0","grunt-contrib-watch":"^1.1.0","grunt-eslint":"^24.0.0","grunt-express-server":"0.5.4","grunt-jsdoc":"2.4.1","grunt-open":"^0.2.4","grunt-webpack":"^5.0.0","jshint-stylish":"^2.2.1","json-loader":"^0.5.7","load-grunt-tasks":"5.1.0","style-loader":"^3.3.1","time-grunt":"2.0.0","webpack":"^5.72.1","webpack-cli":"^4.9.2","webpack-combine-loaders":"^2.0.4","webpack-node-externals":"^3.0.0","webpack-visualizer-plugin2":"^1.0.0"},"dependencies":{"@jupyter-widgets/base":"^4.1.0","fflate":"^0.7.3","file-saver":"^2.0.5","katex":"^0.16.22","lil-gui":"^0.17.0","lodash":"^4.17.21","msgpack-lite":"^0.1.26","rasterizehtml":"^1.3.1","requirejs":"^2.3.6","screenfull":"^6.0.1","stats.js":"^0.17.0","three":"^0.140.2","three-mesh-bvh":"^0.5.11"}}')},60378:e=>{"use strict";e.exports="#include <common>\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n    gl_Position = projectionMatrix * vec4(position, 1.0);\r\n    vUv = uv;\r\n}\r\n"},61032:(e,t,n)=>{const r=n(21453),o=n(53412),{version:i}=n(31800);e.exports={id:"jupyter.extensions.k3d",requires:[r.IJupyterWidgetRegistry],activate(e,t){n(68040),n(36186),t.registerWidget({name:"k3d",version:i,exports:o})},autoStart:!0}},61105:(e,t,n)=>{"use strict";n.d(t,{ZU:()=>m});var r=n(6101);const o=new r.Raycaster,i=new r.Vector3,a=new r.Vector3,s=new r.Quaternion,l={X:new r.Vector3(1,0,0),Y:new r.Vector3(0,1,0),Z:new r.Vector3(0,0,1)},c={type:"change"},d={type:"mouseDown"},p={type:"mouseUp",mode:null},u={type:"objectChange"};class m extends r.Object3D{constructor(e,t){super(),void 0===t&&(console.warn('THREE.TransformControls: The second parameter "domElement" is now mandatory.'),t=document),this.visible=!1,this.domElement=t,this.domElement.style.touchAction="none";const n=new j;this._gizmo=n,this.add(n);const o=new I;this._plane=o,this.add(o);const i=this;function a(e,t){let r=t;Object.defineProperty(i,e,{get:()=>void 0!==r?r:t,set(t){r!==t&&(r=t,o[e]=t,n[e]=t,i.dispatchEvent({type:`${e}-changed`,value:t}),i.dispatchEvent(c))}}),i[e]=t,o[e]=t,n[e]=t}a("camera",e),a("object",void 0),a("enabled",!0),a("axis",null),a("mode","translate"),a("translationSnap",null),a("rotationSnap",null),a("scaleSnap",null),a("space","world"),a("size",1),a("dragging",!1),a("showX",!0),a("showY",!0),a("showZ",!0);const s=new r.Vector3,l=new r.Vector3,d=new r.Quaternion,p=new r.Quaternion,u=new r.Vector3,m=new r.Quaternion,_=new r.Vector3,x=new r.Vector3,b=new r.Vector3,w=new r.Vector3;a("worldPosition",s),a("worldPositionStart",l),a("worldQuaternion",d),a("worldQuaternionStart",p),a("cameraPosition",u),a("cameraQuaternion",m),a("pointStart",_),a("pointEnd",x),a("rotationAxis",b),a("rotationAngle",0),a("eye",w),this._offset=new r.Vector3,this._startNorm=new r.Vector3,this._endNorm=new r.Vector3,this._cameraScale=new r.Vector3,this._parentPosition=new r.Vector3,this._parentQuaternion=new r.Quaternion,this._parentQuaternionInv=new r.Quaternion,this._parentScale=new r.Vector3,this._worldScaleStart=new r.Vector3,this._worldQuaternionInv=new r.Quaternion,this._worldScale=new r.Vector3,this._positionStart=new r.Vector3,this._quaternionStart=new r.Quaternion,this._scaleStart=new r.Vector3,this._getPointer=h.bind(this),this._onPointerDown=f.bind(this),this._onPointerHover=g.bind(this),this._onPointerMove=v.bind(this),this._onPointerUp=y.bind(this),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointermove",this._onPointerHover),this.domElement.addEventListener("pointerup",this._onPointerUp)}updateMatrixWorld(){void 0!==this.object&&(this.object.updateMatrixWorld(),null===this.object.parent?console.error("TransformControls: The attached 3D object must be a part of the scene graph."):this.object.parent.matrixWorld.decompose(this._parentPosition,this._parentQuaternion,this._parentScale),this.object.matrixWorld.decompose(this.worldPosition,this.worldQuaternion,this._worldScale),this._parentQuaternionInv.copy(this._parentQuaternion).invert(),this._worldQuaternionInv.copy(this.worldQuaternion).invert()),this.camera.updateMatrixWorld(),this.camera.matrixWorld.decompose(this.cameraPosition,this.cameraQuaternion,this._cameraScale),this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize(),super.updateMatrixWorld(this)}pointerHover(e){if(void 0===this.object||!0===this.dragging)return;o.setFromCamera(e,this.camera);const t=_(this._gizmo.picker[this.mode],o);this.axis=t?t.object.name:null}pointerDown(e){if(void 0!==this.object&&!0!==this.dragging&&0===e.button&&null!==this.axis){o.setFromCamera(e,this.camera);const t=_(this._plane,o,!0);t&&(this.object.updateMatrixWorld(),this.object.parent.updateMatrixWorld(),this._positionStart.copy(this.object.position),this._quaternionStart.copy(this.object.quaternion),this._scaleStart.copy(this.object.scale),this.object.matrixWorld.decompose(this.worldPositionStart,this.worldQuaternionStart,this._worldScaleStart),this.pointStart.copy(t.point).sub(this.worldPositionStart)),this.dragging=!0,d.mode=this.mode,this.dispatchEvent(d)}}pointerMove(e){const t=this.axis,n=this.mode,r=this.object;let d=this.space;if("scale"===n?d="local":"E"!==t&&"XYZE"!==t&&"XYZ"!==t||(d="world"),void 0===r||null===t||!1===this.dragging||-1!==e.button)return;o.setFromCamera(e,this.camera);const p=_(this._plane,o,!0);if(p){if(this.pointEnd.copy(p.point).sub(this.worldPositionStart),"translate"===n)this._offset.copy(this.pointEnd).sub(this.pointStart),"local"===d&&"XYZ"!==t&&this._offset.applyQuaternion(this._worldQuaternionInv),-1===t.indexOf("X")&&(this._offset.x=0),-1===t.indexOf("Y")&&(this._offset.y=0),-1===t.indexOf("Z")&&(this._offset.z=0),"local"===d&&"XYZ"!==t?this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale):this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale),r.position.copy(this._offset).add(this._positionStart),this.translationSnap&&("local"===d&&(r.position.applyQuaternion(s.copy(this._quaternionStart).invert()),-1!==t.search("X")&&(r.position.x=Math.round(r.position.x/this.translationSnap)*this.translationSnap),-1!==t.search("Y")&&(r.position.y=Math.round(r.position.y/this.translationSnap)*this.translationSnap),-1!==t.search("Z")&&(r.position.z=Math.round(r.position.z/this.translationSnap)*this.translationSnap),r.position.applyQuaternion(this._quaternionStart)),"world"===d&&(r.parent&&r.position.add(i.setFromMatrixPosition(r.parent.matrixWorld)),-1!==t.search("X")&&(r.position.x=Math.round(r.position.x/this.translationSnap)*this.translationSnap),-1!==t.search("Y")&&(r.position.y=Math.round(r.position.y/this.translationSnap)*this.translationSnap),-1!==t.search("Z")&&(r.position.z=Math.round(r.position.z/this.translationSnap)*this.translationSnap),r.parent&&r.position.sub(i.setFromMatrixPosition(r.parent.matrixWorld))));else if("scale"===n){if(-1!==t.search("XYZ")){let e=this.pointEnd.length()/this.pointStart.length();this.pointEnd.dot(this.pointStart)<0&&(e*=-1),a.set(e,e,e)}else i.copy(this.pointStart),a.copy(this.pointEnd),i.applyQuaternion(this._worldQuaternionInv),a.applyQuaternion(this._worldQuaternionInv),a.divide(i),-1===t.search("X")&&(a.x=1),-1===t.search("Y")&&(a.y=1),-1===t.search("Z")&&(a.z=1);r.scale.copy(this._scaleStart).multiply(a),this.scaleSnap&&(-1!==t.search("X")&&(r.scale.x=Math.round(r.scale.x/this.scaleSnap)*this.scaleSnap||this.scaleSnap),-1!==t.search("Y")&&(r.scale.y=Math.round(r.scale.y/this.scaleSnap)*this.scaleSnap||this.scaleSnap),-1!==t.search("Z")&&(r.scale.z=Math.round(r.scale.z/this.scaleSnap)*this.scaleSnap||this.scaleSnap))}else if("rotate"===n){this._offset.copy(this.pointEnd).sub(this.pointStart);const e=20/this.worldPosition.distanceTo(i.setFromMatrixPosition(this.camera.matrixWorld));"E"===t?(this.rotationAxis.copy(this.eye),this.rotationAngle=this.pointEnd.angleTo(this.pointStart),this._startNorm.copy(this.pointStart).normalize(),this._endNorm.copy(this.pointEnd).normalize(),this.rotationAngle*=this._endNorm.cross(this._startNorm).dot(this.eye)<0?1:-1):"XYZE"===t?(this.rotationAxis.copy(this._offset).cross(this.eye).normalize(),this.rotationAngle=this._offset.dot(i.copy(this.rotationAxis).cross(this.eye))*e):"X"!==t&&"Y"!==t&&"Z"!==t||(this.rotationAxis.copy(l[t]),i.copy(l[t]),"local"===d&&i.applyQuaternion(this.worldQuaternion),this.rotationAngle=this._offset.dot(i.cross(this.eye).normalize())*e),this.rotationSnap&&(this.rotationAngle=Math.round(this.rotationAngle/this.rotationSnap)*this.rotationSnap),"local"===d&&"E"!==t&&"XYZE"!==t?(r.quaternion.copy(this._quaternionStart),r.quaternion.multiply(s.setFromAxisAngle(this.rotationAxis,this.rotationAngle)).normalize()):(this.rotationAxis.applyQuaternion(this._parentQuaternionInv),r.quaternion.copy(s.setFromAxisAngle(this.rotationAxis,this.rotationAngle)),r.quaternion.multiply(this._quaternionStart).normalize())}this.dispatchEvent(c),this.dispatchEvent(u)}}pointerUp(e){0===e.button&&(this.dragging&&null!==this.axis&&(p.mode=this.mode,this.dispatchEvent(p)),this.dragging=!1,this.axis=null)}dispose(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerHover),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.traverse(e=>{e.geometry&&e.geometry.dispose(),e.material&&e.material.dispose()})}attach(e){return this.object=e,this.visible=!0,this}detach(){return this.object=void 0,this.visible=!1,this.axis=null,this}reset(){this.enabled&&this.dragging&&(this.object.position.copy(this._positionStart),this.object.quaternion.copy(this._quaternionStart),this.object.scale.copy(this._scaleStart),this.dispatchEvent(c),this.dispatchEvent(u),this.pointStart.copy(this.pointEnd))}getRaycaster(){return o}getMode(){return this.mode}setMode(e){this.mode=e}setTranslationSnap(e){this.translationSnap=e}setRotationSnap(e){this.rotationSnap=e}setScaleSnap(e){this.scaleSnap=e}setSize(e){this.size=e}setSpace(e){this.space=e}update(){console.warn("THREE.TransformControls: update function has no more functionality and therefore has been deprecated.")}}function h(e){if(this.domElement.ownerDocument.pointerLockElement)return{x:0,y:0,button:e.button};const t=this.domElement.getBoundingClientRect();return{x:(e.clientX-t.left)/t.width*2-1,y:-(e.clientY-t.top)/t.height*2+1,button:e.button}}function g(e){if(this.enabled)switch(e.pointerType){case"mouse":case"pen":this.pointerHover(this._getPointer(e))}}function f(e){this.enabled&&(document.pointerLockElement||this.domElement.setPointerCapture(e.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.pointerHover(this._getPointer(e)),this.pointerDown(this._getPointer(e)))}function v(e){this.enabled&&this.pointerMove(this._getPointer(e))}function y(e){this.enabled&&(this.domElement.releasePointerCapture(e.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.pointerUp(this._getPointer(e)))}function _(e,t,n){const r=t.intersectObject(e,!0);for(let e=0;e<r.length;e++)if(r[e].object.visible||n)return r[e];return!1}m.prototype.isTransformControls=!0;const x=new r.Euler,b=new r.Vector3(0,1,0),w=new r.Vector3(0,0,0),M=new r.Matrix4,E=new r.Quaternion,C=new r.Quaternion,S=new r.Vector3,A=new r.Matrix4,P=new r.Vector3(1,0,0),z=new r.Vector3(0,1,0),D=new r.Vector3(0,0,1),T=new r.Vector3,k=new r.Vector3,O=new r.Vector3;class j extends r.Object3D{constructor(){super(),this.type="TransformControlsGizmo";const e=new r.MeshBasicMaterial({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),t=new r.LineBasicMaterial({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),n=e.clone();n.opacity=.15;const o=t.clone();o.opacity=.5;const i=e.clone();i.color.setHex(16711680);const a=e.clone();a.color.setHex(65280);const s=e.clone();s.color.setHex(255);const l=e.clone();l.color.setHex(16711680),l.opacity=.5;const c=e.clone();c.color.setHex(65280),c.opacity=.5;const d=e.clone();d.color.setHex(255),d.opacity=.5;const p=e.clone();p.opacity=.25;const u=e.clone();u.color.setHex(16776960),u.opacity=.25,e.clone().color.setHex(16776960);const m=e.clone();m.color.setHex(7895160);const h=new r.CylinderGeometry(0,.04,.1,12);h.translate(0,.05,0);const g=new r.BoxGeometry(.08,.08,.08);g.translate(0,.04,0);const f=new r.BufferGeometry;f.setAttribute("position",new r.Float32BufferAttribute([0,0,0,1,0,0],3));const v=new r.CylinderGeometry(.0075,.0075,.5,3);function y(e,t){const n=new r.TorusGeometry(e,.0075,3,64,t*Math.PI*2);return n.rotateY(Math.PI/2),n.rotateX(Math.PI/2),n}v.translate(0,.25,0);const _={X:[[new r.Mesh(h,i),[.5,0,0],[0,0,-Math.PI/2]],[new r.Mesh(h,i),[-.5,0,0],[0,0,Math.PI/2]],[new r.Mesh(v,i),[0,0,0],[0,0,-Math.PI/2]]],Y:[[new r.Mesh(h,a),[0,.5,0]],[new r.Mesh(h,a),[0,-.5,0],[Math.PI,0,0]],[new r.Mesh(v,a)]],Z:[[new r.Mesh(h,s),[0,0,.5],[Math.PI/2,0,0]],[new r.Mesh(h,s),[0,0,-.5],[-Math.PI/2,0,0]],[new r.Mesh(v,s),null,[Math.PI/2,0,0]]],XYZ:[[new r.Mesh(new r.OctahedronGeometry(.1,0),p.clone()),[0,0,0]]],XY:[[new r.Mesh(new r.BoxGeometry(.15,.15,.01),d.clone()),[.15,.15,0]]],YZ:[[new r.Mesh(new r.BoxGeometry(.15,.15,.01),l.clone()),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new r.Mesh(new r.BoxGeometry(.15,.15,.01),c.clone()),[.15,0,.15],[-Math.PI/2,0,0]]]},x={X:[[new r.Mesh(new r.CylinderGeometry(.2,0,.6,4),n),[.3,0,0],[0,0,-Math.PI/2]],[new r.Mesh(new r.CylinderGeometry(.2,0,.6,4),n),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new r.Mesh(new r.CylinderGeometry(.2,0,.6,4),n),[0,.3,0]],[new r.Mesh(new r.CylinderGeometry(.2,0,.6,4),n),[0,-.3,0],[0,0,Math.PI]]],Z:[[new r.Mesh(new r.CylinderGeometry(.2,0,.6,4),n),[0,0,.3],[Math.PI/2,0,0]],[new r.Mesh(new r.CylinderGeometry(.2,0,.6,4),n),[0,0,-.3],[-Math.PI/2,0,0]]],XYZ:[[new r.Mesh(new r.OctahedronGeometry(.2,0),n)]],XY:[[new r.Mesh(new r.BoxGeometry(.2,.2,.01),n),[.15,.15,0]]],YZ:[[new r.Mesh(new r.BoxGeometry(.2,.2,.01),n),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new r.Mesh(new r.BoxGeometry(.2,.2,.01),n),[.15,0,.15],[-Math.PI/2,0,0]]]},b={START:[[new r.Mesh(new r.OctahedronGeometry(.01,2),o),null,null,null,"helper"]],END:[[new r.Mesh(new r.OctahedronGeometry(.01,2),o),null,null,null,"helper"]],DELTA:[[new r.Line(function(){const e=new r.BufferGeometry;return e.setAttribute("position",new r.Float32BufferAttribute([0,0,0,1,1,1],3)),e}(),o),null,null,null,"helper"]],X:[[new r.Line(f,o.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new r.Line(f,o.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new r.Line(f,o.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},w={XYZE:[[new r.Mesh(y(.5,1),m),null,[0,Math.PI/2,0]]],X:[[new r.Mesh(y(.5,.5),i)]],Y:[[new r.Mesh(y(.5,.5),a),null,[0,0,-Math.PI/2]]],Z:[[new r.Mesh(y(.5,.5),s),null,[0,Math.PI/2,0]]],E:[[new r.Mesh(y(.75,1),u),null,[0,Math.PI/2,0]]]},M={AXIS:[[new r.Line(f,o.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]]},E={XYZE:[[new r.Mesh(new r.SphereGeometry(.25,10,8),n)]],X:[[new r.Mesh(new r.TorusGeometry(.5,.1,4,24),n),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new r.Mesh(new r.TorusGeometry(.5,.1,4,24),n),[0,0,0],[Math.PI/2,0,0]]],Z:[[new r.Mesh(new r.TorusGeometry(.5,.1,4,24),n),[0,0,0],[0,0,-Math.PI/2]]],E:[[new r.Mesh(new r.TorusGeometry(.75,.1,2,24),n)]]},C={X:[[new r.Mesh(g,i),[.5,0,0],[0,0,-Math.PI/2]],[new r.Mesh(v,i),[0,0,0],[0,0,-Math.PI/2]],[new r.Mesh(g,i),[-.5,0,0],[0,0,Math.PI/2]]],Y:[[new r.Mesh(g,a),[0,.5,0]],[new r.Mesh(v,a)],[new r.Mesh(g,a),[0,-.5,0],[0,0,Math.PI]]],Z:[[new r.Mesh(g,s),[0,0,.5],[Math.PI/2,0,0]],[new r.Mesh(v,s),[0,0,0],[Math.PI/2,0,0]],[new r.Mesh(g,s),[0,0,-.5],[-Math.PI/2,0,0]]],XY:[[new r.Mesh(new r.BoxGeometry(.15,.15,.01),d),[.15,.15,0]]],YZ:[[new r.Mesh(new r.BoxGeometry(.15,.15,.01),l),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new r.Mesh(new r.BoxGeometry(.15,.15,.01),c),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new r.Mesh(new r.BoxGeometry(.1,.1,.1),p.clone())]]},S={X:[[new r.Mesh(new r.CylinderGeometry(.2,0,.6,4),n),[.3,0,0],[0,0,-Math.PI/2]],[new r.Mesh(new r.CylinderGeometry(.2,0,.6,4),n),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new r.Mesh(new r.CylinderGeometry(.2,0,.6,4),n),[0,.3,0]],[new r.Mesh(new r.CylinderGeometry(.2,0,.6,4),n),[0,-.3,0],[0,0,Math.PI]]],Z:[[new r.Mesh(new r.CylinderGeometry(.2,0,.6,4),n),[0,0,.3],[Math.PI/2,0,0]],[new r.Mesh(new r.CylinderGeometry(.2,0,.6,4),n),[0,0,-.3],[-Math.PI/2,0,0]]],XY:[[new r.Mesh(new r.BoxGeometry(.2,.2,.01),n),[.15,.15,0]]],YZ:[[new r.Mesh(new r.BoxGeometry(.2,.2,.01),n),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new r.Mesh(new r.BoxGeometry(.2,.2,.01),n),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new r.Mesh(new r.BoxGeometry(.2,.2,.2),n),[0,0,0]]]},A={X:[[new r.Line(f,o.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new r.Line(f,o.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new r.Line(f,o.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]};function P(e){const t=new r.Object3D;for(const n in e)for(let r=e[n].length;r--;){const o=e[n][r][0].clone(),i=e[n][r][1],a=e[n][r][2],s=e[n][r][3],l=e[n][r][4];o.name=n,o.tag=l,i&&o.position.set(i[0],i[1],i[2]),a&&o.rotation.set(a[0],a[1],a[2]),s&&o.scale.set(s[0],s[1],s[2]),o.updateMatrix();const c=o.geometry.clone();c.applyMatrix4(o.matrix),o.geometry=c,o.renderOrder=1/0,o.position.set(0,0,0),o.rotation.set(0,0,0),o.scale.set(1,1,1),t.add(o)}return t}this.gizmo={},this.picker={},this.helper={},this.add(this.gizmo.translate=P(_)),this.add(this.gizmo.rotate=P(w)),this.add(this.gizmo.scale=P(C)),this.add(this.picker.translate=P(x)),this.add(this.picker.rotate=P(E)),this.add(this.picker.scale=P(S)),this.add(this.helper.translate=P(b)),this.add(this.helper.rotate=P(M)),this.add(this.helper.scale=P(A)),this.picker.translate.visible=!1,this.picker.rotate.visible=!1,this.picker.scale.visible=!1}updateMatrixWorld(e){const t="local"===("scale"===this.mode?"local":this.space)?this.worldQuaternion:C;this.gizmo.translate.visible="translate"===this.mode,this.gizmo.rotate.visible="rotate"===this.mode,this.gizmo.scale.visible="scale"===this.mode,this.helper.translate.visible="translate"===this.mode,this.helper.rotate.visible="rotate"===this.mode,this.helper.scale.visible="scale"===this.mode;let n=[];n=n.concat(this.picker[this.mode].children),n=n.concat(this.gizmo[this.mode].children),n=n.concat(this.helper[this.mode].children);for(let e=0;e<n.length;e++){const r=n[e];let o;if(r.visible=!0,r.rotation.set(0,0,0),r.position.copy(this.worldPosition),o=this.camera.isOrthographicCamera?(this.camera.top-this.camera.bottom)/this.camera.zoom:this.worldPosition.distanceTo(this.cameraPosition)*Math.min(1.9*Math.tan(Math.PI*this.camera.fov/360)/this.camera.zoom,7),r.scale.set(1,1,1).multiplyScalar(o*this.size/4),"helper"!==r.tag){if(r.quaternion.copy(t),"translate"===this.mode||"scale"===this.mode){const e=.99,n=.2;"X"===r.name&&Math.abs(b.copy(P).applyQuaternion(t).dot(this.eye))>e&&(r.scale.set(1e-10,1e-10,1e-10),r.visible=!1),"Y"===r.name&&Math.abs(b.copy(z).applyQuaternion(t).dot(this.eye))>e&&(r.scale.set(1e-10,1e-10,1e-10),r.visible=!1),"Z"===r.name&&Math.abs(b.copy(D).applyQuaternion(t).dot(this.eye))>e&&(r.scale.set(1e-10,1e-10,1e-10),r.visible=!1),"XY"===r.name&&Math.abs(b.copy(D).applyQuaternion(t).dot(this.eye))<n&&(r.scale.set(1e-10,1e-10,1e-10),r.visible=!1),"YZ"===r.name&&Math.abs(b.copy(P).applyQuaternion(t).dot(this.eye))<n&&(r.scale.set(1e-10,1e-10,1e-10),r.visible=!1),"XZ"===r.name&&Math.abs(b.copy(z).applyQuaternion(t).dot(this.eye))<n&&(r.scale.set(1e-10,1e-10,1e-10),r.visible=!1)}else"rotate"===this.mode&&(E.copy(t),b.copy(this.eye).applyQuaternion(s.copy(t).invert()),-1!==r.name.search("E")&&r.quaternion.setFromRotationMatrix(M.lookAt(this.eye,w,z)),"X"===r.name&&(s.setFromAxisAngle(P,Math.atan2(-b.y,b.z)),s.multiplyQuaternions(E,s),r.quaternion.copy(s)),"Y"===r.name&&(s.setFromAxisAngle(z,Math.atan2(b.x,b.z)),s.multiplyQuaternions(E,s),r.quaternion.copy(s)),"Z"===r.name&&(s.setFromAxisAngle(D,Math.atan2(b.y,b.x)),s.multiplyQuaternions(E,s),r.quaternion.copy(s)));r.visible=r.visible&&(-1===r.name.indexOf("X")||this.showX),r.visible=r.visible&&(-1===r.name.indexOf("Y")||this.showY),r.visible=r.visible&&(-1===r.name.indexOf("Z")||this.showZ),r.visible=r.visible&&(-1===r.name.indexOf("E")||this.showX&&this.showY&&this.showZ),r.material._color=r.material._color||r.material.color.clone(),r.material._opacity=r.material._opacity||r.material.opacity,r.material.color.copy(r.material._color),r.material.opacity=r.material._opacity,this.enabled&&this.axis&&(r.name===this.axis||this.axis.split("").some(e=>r.name===e))&&(r.material.color.setHex(16776960),r.material.opacity=1)}else r.visible=!1,"AXIS"===r.name?(r.position.copy(this.worldPositionStart),r.visible=!!this.axis,"X"===this.axis&&(s.setFromEuler(x.set(0,0,0)),r.quaternion.copy(t).multiply(s),Math.abs(b.copy(P).applyQuaternion(t).dot(this.eye))>.9&&(r.visible=!1)),"Y"===this.axis&&(s.setFromEuler(x.set(0,0,Math.PI/2)),r.quaternion.copy(t).multiply(s),Math.abs(b.copy(z).applyQuaternion(t).dot(this.eye))>.9&&(r.visible=!1)),"Z"===this.axis&&(s.setFromEuler(x.set(0,Math.PI/2,0)),r.quaternion.copy(t).multiply(s),Math.abs(b.copy(D).applyQuaternion(t).dot(this.eye))>.9&&(r.visible=!1)),"XYZE"===this.axis&&(s.setFromEuler(x.set(0,Math.PI/2,0)),b.copy(this.rotationAxis),r.quaternion.setFromRotationMatrix(M.lookAt(w,b,z)),r.quaternion.multiply(s),r.visible=this.dragging),"E"===this.axis&&(r.visible=!1)):"START"===r.name?(r.position.copy(this.worldPositionStart),r.visible=this.dragging):"END"===r.name?(r.position.copy(this.worldPosition),r.visible=this.dragging):"DELTA"===r.name?(r.position.copy(this.worldPositionStart),r.quaternion.copy(this.worldQuaternionStart),i.set(1e-10,1e-10,1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1),i.applyQuaternion(this.worldQuaternionStart.clone().invert()),r.scale.copy(i),r.visible=this.dragging):(r.quaternion.copy(t),this.dragging?r.position.copy(this.worldPositionStart):r.position.copy(this.worldPosition),this.axis&&(r.visible=-1!==this.axis.search(r.name)))}super.updateMatrixWorld(e)}}j.prototype.isTransformControlsGizmo=!0;class I extends r.Mesh{constructor(){super(new r.PlaneGeometry(1e5,1e5,2,2),new r.MeshBasicMaterial({visible:!1,wireframe:!0,side:r.DoubleSide,transparent:!0,opacity:.1,toneMapped:!1})),this.type="TransformControlsPlane"}updateMatrixWorld(e){let t=this.space;switch(this.position.copy(this.worldPosition),"scale"===this.mode&&(t="local"),T.copy(P).applyQuaternion("local"===t?this.worldQuaternion:C),k.copy(z).applyQuaternion("local"===t?this.worldQuaternion:C),O.copy(D).applyQuaternion("local"===t?this.worldQuaternion:C),b.copy(k),this.mode){case"translate":case"scale":switch(this.axis){case"X":b.copy(this.eye).cross(T),S.copy(T).cross(b);break;case"Y":b.copy(this.eye).cross(k),S.copy(k).cross(b);break;case"Z":b.copy(this.eye).cross(O),S.copy(O).cross(b);break;case"XY":S.copy(O);break;case"YZ":S.copy(T);break;case"XZ":b.copy(O),S.copy(k);break;case"XYZ":case"E":S.set(0,0,0)}break;default:S.set(0,0,0)}0===S.length()?this.quaternion.copy(this.cameraQuaternion):(A.lookAt(i.set(0,0,0),S,b),this.quaternion.setFromRotationMatrix(A)),super.updateMatrixWorld(e)}}I.prototype.isTransformControlsPlane=!0},61202:(e,t,n)=>{const r=n(6101);e.exports=function(e,t,n,o,i,a,s){const l=new r.BufferGeometry,c=[],d=[],p=[],u=[],m=[];let h=null,g=null;const f=new r.Vector3;let v,y,_,x,b,w,M,E,C,S,A,P=0;function z(e){let t,n,r,i,a;for(let s=e;s<e+P-1;s++)for(a=0;a<o;a++)t=o*s+a,n=o*(s+1)+a,r=o*(s+1)+(a+1)%o,i=o*s+(a+1)%o,m.push(t,n,i),m.push(n,r,i)}function D(e,l,m,h){const v=new r.Vector3,y=new r.Vector3,_=new r.Vector3,x=l.clone().sub(e).normalize();let b,w,M,E,C,S,A;null===g?(b=Number.MAX_VALUE,w=Math.abs(x.x),M=Math.abs(x.y),E=Math.abs(x.z),w<=b&&(b=w,v.set(1,0,0)),M<=b&&(b=M,v.set(0,1,0)),E<=b&&v.set(0,0,1),y.crossVectors(x,v).normalize(),g=new r.Vector3,g.crossVectors(x,y)):h&&g.applyMatrix4(h),_.crossVectors(x,g);for(let r=0;r<o;r++)C=r/o*(2*Math.PI),S=Math.sin(C),A=-Math.cos(C),v.x=A*g.x+S*_.x,v.y=A*g.y+S*_.y,v.z=A*g.z+S*_.z,v.normalize(),d.push(v.x,v.y,v.z),f.x=e.x+n*v.x,f.y=e.y+n*v.y,f.z=e.z+n*v.z,c.push(f.x,f.y,f.z),null!==t&&t.length>0?p.push((t[m]-s[0])/(s[1]-s[0]),r/o):null!==a&&a.length>0?u.push(a[3*m],a[3*m+1],a[3*m+2]):u.push(i.r,i.g,i.b);P++}A=0;for(let t=0;t<e.length/3;t++)x=null,t!==e.length/3-1?(v=(new r.Vector3).fromArray(e,3*t),y=(new r.Vector3).fromArray(e,3*t+3),_=y.clone().sub(v).normalize()):(v=(new r.Vector3).fromArray(e,3*t),y=(new r.Vector3).fromArray(e,3*t-3),y.add(v.clone().sub(y).multiplyScalar(2))),Number.isNaN(v.x)||Number.isNaN(v.y)||Number.isNaN(v.z)||Number.isNaN(y.x)||Number.isNaN(y.y)||Number.isNaN(y.z)?(z(A),h=null,g=null,A+=P,P=0):(h&&_&&(b=(new r.Vector3).crossVectors(h,_),w=b.length(),w>Number.EPSILON&&(w>.3&&(E=Math.min(n,y.clone().sub(v).length()/5),C=v.clone(),S=y.clone(),v.sub(h.clone().multiplyScalar(E)),y.copy(C).add(h.clone().multiplyScalar(E)),D(v,y,t),v.copy(C).add(_.clone().multiplyScalar(E)),y.copy(S)),b=b.divideScalar(w),M=Math.acos(r.Math.clamp(h.clone().dot(_),-1,1)),x=(new r.Matrix4).makeRotationAxis(b,M))),D(v,y,t,x),h=_.clone());return z(A),l.setIndex(m),l.setAttribute("position",new r.Float32BufferAttribute(c,3)),l.setAttribute("normal",new r.Float32BufferAttribute(d,3)),null!==t&&t.length>0?l.setAttribute("uv",new r.Float32BufferAttribute(p,2)):l.setAttribute("color",new r.Float32BufferAttribute(u,3)),l}},61812:(e,t,n)=>{const r=n(6101),o=n(67483);n(12471)(r),n(52557)(r),n(74405)(r),n(72245)(r),n(68881)(r),n(72931)(r),r.TransformControls=n(61105).ZU,r.Mesh.prototype.raycast=o.acceleratedRaycast,e.exports={Helpers:n(98947),Initializers:{Canvas:n(62483),Camera:n(86060),Renderer:n(17084),Scene:n(11271).Init,Setup:n(64926),Manipulate:n(12979)},Objects:{Line:n(30498),Lines:n(16577),MarchingCubes:n(48511),Mesh:n(52681),Points:n(82391),STL:n(70127),Surface:n(10017),TextureText:n(36578),Texture:n(51421),Text:n(21051),Text2d:n(96973),TorusKnot:n(41585),VectorField:n(57475),Vectors:n(70770),Voxels:n(21625),SparseVoxels:n(71557),VoxelsGroup:n(5994),Volume:n(8502),MIP:n(21320),Label:n(62728),VolumeSlice:n(1586)},Interactions:{Voxels:n(87570),PointsCallback:n(7659),StandardCallback:n(37765)},THREE:r}},62141:e=>{"use strict";e.exports="#include <common>\r\n#include <clipping_planes_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n    vUv = uv;\r\n\r\n    #include <begin_vertex>\r\n    #include <project_vertex>\r\n\r\n    #include <worldpos_vertex>\r\n    #include <logdepthbuf_vertex>\r\n    #include <clipping_planes_vertex>\r\n}\r\n"},62419:(e,t,n)=>{e.exports={extend:n(21450),result:n(82027),pull:n(32225),difference:n(28765),assign:n(59379),assignWith:n(80331),eq:n(42160),cloneDeep:n(3407),clone:n(36077),values:n(87664),keys:n(39590),invert:n(25370),isNumber:n(64655),intersection:n(93583),range:n(94245),merge:n(9244),isObject:n(84453),isEmpty:n(36873),isEqual:n(71308),isArray:n(9161)}},62483:(e,t,n)=>{const r=n(6101),{cameraModes:o}=n(8444),{recalculateFrustum:i}=n(98947);function a(e,t,n){n.getCameraArray=function(){const t=[];return e.controls.object.position.toArray(t),e.controls.target.toArray(t,3),e.controls.object.up.toArray(t,6),t},n.addEventListener("change",n=>{const o=n.target.getCameraArray();i(e.camera),t.dispatch(t.events.CAMERA_CHANGE,o);const a=1.5/Math.tan(r.Math.degToRad(t.parameters.cameraFov/2));e.axesHelper.camera.position.copy(e.camera.position.clone().sub(e.controls.target).normalize().multiplyScalar(a)),e.axesHelper.camera.lookAt(0,0,0),e.axesHelper.camera.up.copy(e.camera.up)}),n.addEventListener("change",()=>{e.render()})}function s(e,t){return t.parameters.cameraMode===o.trackball?function(e,t){const n=new r.TrackballControls(e.camera,e.renderer.domElement,t);return n.type=o.trackball,n.rotateSpeed=t.parameters.cameraRotateSpeed,n.zoomSpeed=t.parameters.cameraZoomSpeed,n.panSpeed=t.parameters.cameraPanSpeed,t.parameters.cameraDampingFactor>0?(n.staticMoving=!1,n.dynamicDampingFactor=t.parameters.cameraDampingFactor):n.staticMoving=!0,a(e,t,n),n}(e,t):t.parameters.cameraMode===o.orbit?function(e,t){const n=new r.OrbitControls(e.camera,e.renderer.domElement,t);return n.type=o.orbit,n.rotateSpeed=t.parameters.cameraRotateSpeed,t.parameters.cameraDampingFactor>0?(n.enableDamping=!0,n.dampingFactor=t.parameters.cameraDampingFactor):n.enableDamping=!1,n.screenSpacePanning=!1,n.maxPolarAngle=Math.PI,n.screenSpacePanning=!0,a(e,t,n),n}(e,t):t.parameters.cameraMode===o.fly?function(e,t){const n=new r.TrackballControls(e.camera,e.renderer.domElement,t);return n.type=o.fly,n.rotateSpeed=t.parameters.cameraRotateSpeed,n.zoomSpeed=t.parameters.cameraZoomSpeed,n.panSpeed=t.parameters.cameraPanSpeed,n.flyMode=!0,t.parameters.cameraDampingFactor>0?(n.staticMoving=!1,n.dynamicDampingFactor=t.parameters.cameraDampingFactor):n.staticMoving=!0,a(e,t,n),n}(e,t):t.parameters.cameraMode===o.sliceViewer?function(e,t){const n=new r.SliceControls(e.camera,e.renderer.domElement,t);return n.type=o.sliceViewer,a(e,t,n),n}(e,t):t.parameters.cameraMode===o.volumeSides?function(e,t){const n=new r.VolumeSidesControls(e.camera,e.renderer.domElement,t);return n.type=o.volumeSides,a(e,t,n),n}(e,t):null}e.exports=function(e){const t=this;let n,r=null;const o=new Float32Array(64);let i=0,a=1;function l(t){return t<1e3/(2*e.parameters.minimumFps)?Math.min(1.5*a,1):a/Math.min(1.25*t/(1e3/e.parameters.minimumFps),5)}function c(t){return{x:t.offsetX/e.getWorld().targetDOMNode.offsetWidth*2-1,y:-t.offsetY/e.getWorld().targetDOMNode.offsetHeight*2+1}}function d(e){n=c(e)}function p(t){const r=c(t);n.x===r.x&&n.y===r.y&&e.dispatch(e.events.MOUSE_CLICK,r)}function u(t){e.dispatch(e.events.MOUSE_MOVE,c(t))}this.renderer.setSize(this.width,this.height),this.targetDOMNode.appendChild(this.renderer.domElement),this.renderer.domElement.addEventListener("pointermove",u,!1),this.renderer.domElement.addEventListener("pointerdown",d,!1),this.renderer.domElement.addEventListener("pointerup",p,!1),this.controls=s(t,e),e.on(e.events.RESIZED,()=>{t.controls.handleResize&&t.controls.handleResize()}),window.addEventListener("visibilitychange",()=>{r=null}),this.changeControls=function(n){(t.controls.type!==e.parameters.cameraMode||n)&&(t.controls&&t.controls.dispose(),t.controls=s(t,e))},function n(s,c){if(e.parameters.minimumFps>0){if(!s)return void requestAnimationFrame(n);if(null===r)return r=s,void requestAnimationFrame(n);const d=s;if(e.frameInterval=d-r,r=d,c>0||e.heavyOperationAsync||e.heavyOperationSync)return e.heavyOperationSync&&(c=16,e.heavyOperationSync=!1),t.controls.update(),void requestAnimationFrame(e=>{n(e,c-1)});o[i]=e.frameInterval,i=(i+1)%o.length;const p=o.reduce((e,t)=>e+t,0)/o.length;let u=0;for(let e=i-8+o.length;e<i+o.length;e++)u+=o[e%o.length];u/=8;const h=a;if(e.frameInterval>2e3/e.parameters.minimumFps?a=l(e.frameInterval):u>1e3/e.parameters.minimumFps?a=l(u):p<1e3/(2*e.parameters.minimumFps)&&(a=l(p)),h!==a)return console.log("qualityFactor",a),m=a,t.renderer.setPixelRatio(window.devicePixelRatio*m),e.render(),o.fill(1e3/(1.5*e.parameters.minimumFps)),void requestAnimationFrame(e=>{n(e,16)})}var m;const{targetDOMNode:h}=e.getWorld();if(h.ownerDocument.contains(h)||e.disable(),e.disabling)return t.renderer.domElement.removeEventListener("pointermove",u),t.renderer.domElement.removeEventListener("pointerdown",d),t.renderer.domElement.removeEventListener("pointerup",p),void t.controls.dispose();t.controls.update(),requestAnimationFrame(n)}()}},62728:(e,t,n)=>{const r=n(6101);let o=n(22919);const{areAllChangesResolve:i}=n(98947);function a(e){return`#${(e=parseInt(e,10)+16777216).toString(16).substr(1)}`}o=o.default||o,e.exports={create(e,t){e.visible=void 0===e.visible||e.visible,e.color=void 0!==e.color?e.color:0;const n=new r.Matrix4,i=new r.BufferGeometry,s=new r.MeshBasicMaterial({color:e.color}),l=e.text||"\\KaTeX",{color:c}=e,d=e.max_length||1;let{position:p}=e;const u=e.size||1,m=new r.LineSegments(i,s),{overlayDOMNode:h}=t.getWorld(),g=t.getWorld();let f,v=[];for(p.data?m.positions=p.data:m.positions=p,f=0;f<m.positions.length/3;f++){const n=document.createElement("div");e.is_html?(n.innerHTML=Array.isArray(l)?l[f]:l,n.style.cssText="pointer-events: all"):n.innerHTML=o.renderToString(Array.isArray(l)?l[f]:l,{displayMode:!0}),n.style.position="absolute",n.style.color=a(c),n.style.fontSize=`${u}em`,e.label_box&&(n.style.padding="5px",n.style.background=t.getWorld().targetDOMNode.style.backgroundColor,n.style.border=`1px solid ${a(c)}`,n.style.borderRadius="10px"),h.appendChild(n),v.push(n)}e.model_matrix&&(n.set.apply(n,e.model_matrix.data),m.applyMatrix4(n)),m.updateMatrixWorld(),m.frustumCulled=!1;let y=new Float32Array(2*m.positions.length);for(f=0;f<m.positions.length;f+=3)y[2*f]=y[2*f+3]=m.positions[f],y[2*f+1]=y[2*f+4]=m.positions[f+1],y[2*f+2]=y[2*f+5]=m.positions[f+2];function _(){v.forEach(function(n,o){let i,a,s,l;const c=.5*g.width,p=.5*g.height,u=function(e,t,n){const o=new r.Vector3;return o.fromArray(e.positions,6*t),o.applyMatrix4(e.matrixWorld),n.camera.frustum&&!n.camera.frustum.containsPoint(o)?{x:-1e4,y:-1e4,z:-1e4,out:!0}:(o.project(n.camera),o.x=.5*(o.x+1)*n.width,o.y=.5*(1-o.y)*n.height,{x:o.x,y:o.y,z:o.z})}(m,o,g);if(u.out)n.style.display="none";else{if(n.style.display="block","dynamic"===e.mode){let e,r,o=Math.atan2(u.y-p,u.x-c);const s=150,m=360;let h=0;do{e=Math.sqrt((u.x-c)*(u.x-c)+(u.y-p)*(u.y-p));let n=.98;i=u.x+Math.cos(o)*Math.min(c*n-e,Math.min(c,p)*d),a=u.y+Math.sin(o)*Math.min(p*n-e,Math.min(c,p)*d),r=t.labels.every(e=>Math.sqrt((i-e.coord.x)*(i-e.coord.x)+(a-e.coord.y)*(a-e.coord.y))>s),r||(o+=Math.PI/180*.25),h++}while(!r&&h<m);u.x=i,u.y=a,o>=-Math.PI/4&&o<Math.PI/4&&(l="lc",u.x-=n.offsetWidth),o>=Math.PI/4&&o<.75*Math.PI&&(l="ct",u.x-=n.offsetWidth/2,u.y-=n.offsetHeight),(o>=.75*Math.PI||o<.75*-Math.PI)&&(l="rc",u.x+=n.offsetWidth),o>=.75*-Math.PI&&o<-Math.PI/4&&(l="cb",u.x-=n.offsetWidth/2,u.y+=n.offsetHeight)}switch("local"===e.mode&&(l="cb",u.y-=.25*d*g.height),"side"===e.mode&&(l="rc",a=t.labels.reduce((e,t)=>"side"===t.mode?e+t.domElement.offsetHeight+10:e,0),u.x=n.offsetWidth+10,u.y=10+a+n.offsetHeight/2),l[0]){case"l":i=`${Math.round(u.x)}px`;break;case"c":i=`calc(${Math.round(u.x)}px - 50%)`;break;case"r":i=`calc(${Math.round(u.x)}px - 100%)`}switch(l[1]){case"t":a=`${Math.round(u.y)}px`;break;case"c":a=`calc(${Math.round(u.y)}px - 50%)`;break;case"b":a=`calc(${Math.round(u.y)}px - 100%)`}s=new r.Vector3(2*(u.x/g.width-.5),2*-(u.y/g.height-.5),u.z),s.unproject(g.camera),m.positions.set([s.x,s.y,s.z],6*o+3),n.style.transform=`translate(${i},${a})`,n.style.zIndex=e.on_top?"1500":"15",t.labels.push({mode:e.mode,coord:u,domElement:n})}}),m.geometry.attributes.position.array.set(m.positions),m.geometry.attributes.position.needsUpdate=!0}m.positions=y,m.geometry.setAttribute("position",new r.BufferAttribute(y,3)),m.geometry.computeBoundingSphere(),m.geometry.computeBoundingBox();const x=t.on(t.events.BEFORE_RENDER,_);return m.domElements=v,m.onRemove=function(){v.forEach(function(e){t.labels=t.labels.filter(function(t){return t.domElement!==e}),h.removeChild(e),e=null}),v=[],t.off(t.events.BEFORE_RENDER,x)},_(),Promise.resolve(m)},update(e,t,n){const r={};if(void 0===t.text||t.text.timeSeries||(n.domElements.forEach(function(n,r){let i=Array.isArray(t.text)?t.text[r]:t.text;e.is_html?(n.innerHTML=i,n.style.pointerEvents="all"):(n.innerHTML=o.renderToString(i,{displayMode:!0}),n.style.pointerEvents="none")}),r.text=null),void 0!==t.position&&!t.position.timeSeries){let e=t.position.data||t.position;for(let t=0;t<e.length;t+=3)n.positions[2*t]=e[t],n.positions[2*t+1]=e[t+1],n.positions[2*t+2]=e[t+2];r.position=null}return!!i(t,r)&&Promise.resolve({json:e,obj:n})}}},62855:(e,t,n)=>{const r=n(62419);e.exports=function(e,t){let o,i;const a=t.getWorld().targetDOMNode,s=document.createElement("div");function l(e,t){const n=e.getElementsByTagName(t);for(;n[0];)n[0].parentNode.removeChild(n[0])}function c(e){const n=t.getWorld(),o=new t.constructor(t.Provider,e,t.parameters),i=n.K3DObjects.children.reduce((e,t)=>(e.push(n.ObjectsListJson[t.K3DIdentifier]),e),[]);t.disable(),o.load({objects:i}),o.setCamera(t.getWorld().controls.getCameraArray()),r.assign(t,o)}function d(){o&&(o.close(),o=null,a.removeChild(s),c(a))}function p(){o&&o.closed&&(clearInterval(i),d())}s.className="detachedInfo",s.innerHTML="K3D works in detached mode. Please close window or click on this text to attach it here.",s.style.cssText=["cursor: pointer","padding: 2em"].join(";");const u={detachWidget(){o=window.open("","_blank","width=800,height=600,resizable=1"),o.document.body.innerHTML=n(92549);const e=document.getElementsByTagName("style");for(let t=0;t<e.length;t++)o.document.body.appendChild(e[t].cloneNode(!0));setTimeout(()=>{c(o.document.getElementById("canvasTarget")),l(a,"canvas"),l(a,"div"),l(a,"svg"),a.appendChild(s)},100),o.opener.addEventListener("unload",()=>{o&&o.close()},!1),i=setInterval(p,500)}};e.add(u,"detachWidget").name("Detach widget"),s.addEventListener("click",()=>{d()},!1)}},63806:(e,t,n)=>{const r=n(71967),o=n(62419),i=n(95080),a=n(27244),s=n(80228),{error:l}=n(78560),c={int8:Int8Array,int16:Int16Array,int32:Int32Array,uint8:Uint8Array,uint16:Uint16Array,uint32:Uint32Array,float16:i,float32:Float32Array,float64:Float64Array},d=a.createCodec({preset:!0});d.addExtPacker(32,i,e=>e),d.addExtUnpacker(32,e=>i(e.buffer)),e.exports={deserialize:function e(t,n){if(null==t)return null;if("string"==typeof t&&"base64_"===t.substring(0,7))try{t=a.decode(s.base64ToArrayBuffer(t.substring(7)),{codec:d})}catch(e){throw l("K3D Error","Failed to deserialize base64 data: "+e.message),new Error("Invalid base64 data in serialization: "+e.message)}if("string"==typeof t||"boolean"==typeof t)return t;if(o.isNumber(t))return t;if(void 0!==t.shape)return function(e){let t;return void 0!==e.data?{data:new c[e.dtype](e.data.buffer),shape:e.shape}:void 0!==e.compressed_data?(t=new c[e.dtype](r.unzlibSync(new Uint8Array(e.compressed_data.buffer)).buffer),console.log(`K3D: Receive: ${t.byteLength} bytes compressed to ${e.compressed_data.byteLength} bytes`),{data:t,shape:e.shape}):e}(t);if(Array.isArray(t))return t.reduce((t,r)=>(t.push(e(r,n)),t),[]);let i=!0;const p=Object.keys(t).reduce((r,o)=>{var a;return a=o,(Number.isNaN(parseFloat(a))||!Number.isFinite(parseFloat(a)))&&(i=!1),r[o]=e(t[o],n),r},{});return i&&(p.timeSeries=!0),p},serialize:function e(t){return o.isNumber(t)||"string"==typeof t||"boolean"==typeof t?t:null!==t?void 0!==t.data&&void 0!==t.shape?function(e){let t;return t="DataView"===e.data.constructor.name?e.dtype:o.invert(c)[e.data.constructor],e.compression_level&&e.compression_level>0?{dtype:t,compressed_data:r.zlibSync(e.data.buffer,{level:e.compression_level}),shape:e.shape}:{dtype:t,data:e.data,shape:e.shape}}(t):Array.isArray(t)?t.reduce((t,n)=>(t.push(e(n)),t),[]):Object.keys(t).reduce((n,r)=>(n[r]=e(t[r]),n),{}):null}}},64022:(e,t,n)=>{const r=n(6101),o=n(67483),i=n(99834)(r),a=n(85763),s=n(17816),l=n(87570),c=n(80228);function d(e,t,n,o){const a=new r.BufferGeometry,s=new r.Object3D,l=t.wireframe?r.MeshBasicMaterial:r.MeshPhongMaterial;let c,d,p;return s.position.set(o.offset[0]/n.width,o.offset[1]/n.height,o.offset[2]/n.length),s.updateMatrix(),a.setAttribute("position",new r.BufferAttribute(new Float32Array(o.vertices),3)),a.setAttribute("color",new r.BufferAttribute(new Float32Array(o.colors),3)),a.computeBoundingSphere(),a.computeBoundingBox(),p=new l({vertexColors:r.VertexColors,flatShading:!0,opacity:t.opacity,side:r.DoubleSide,wireframe:t.wireframe}),0===e.parameters.depthPeels?(p.depthWrite=1===t.opacity,p.transparent=1!==t.opacity):(p.blending=r.NoBlending,p.onBeforeCompile=e.colorOnBeforeCompile),s.add(new r.Mesh(a,p)),t.outlines&&!t.wireframe&&(c=(new r.Matrix4).fromArray(t.model_matrix.data).getMaxScaleOnAxis()/(10*Math.max(n.width,n.height,n.length)),d=new i.MeshLine,p=new i.MeshLineMaterial({color:new r.Color(t.outlines_color),opacity:.75*t.opacity,sizeAttenuation:!0,depthWrite:!1,transparent:!0,lineWidth:c,resolution:new r.Vector2(e.getWorld().width,e.getWorld().height),side:r.DoubleSide},e),p.userData={outline:!0},d.setGeometry(new Float32Array(o.outlines),!0),d.geometry.computeBoundingSphere(),d.geometry.computeBoundingBox(),s.add(new r.Mesh(d.geometry,p))),s}e.exports={create(e,t,n,i){const p=new Set;return new Promise(u=>{let m;const h=new r.Group;let g;const f=new r.Mesh(new r.BoxGeometry(1.2/n[0],1.2/n[1],1.2/n[2]).translate(.5/n[0],.5/n[1],.5/n[2]),new r.MeshBasicMaterial({color:16711680,opacity:.5,transparent:!0})),{colorsToFloat32Array:v}=c;let y,_;e.opacity=void 0!==e.opacity?e.opacity:1,e.visible=void 0===e.visible||e.visible,e.wireframe=void 0!==e.wireframe&&e.wireframe,e.outlines=void 0===e.outlines||e.outlines,e.outlines_color=void 0!==e.outlines_color?e.outlines_color:0;const x=(new r.Matrix4).fromArray(e.model_matrix.data);m=e.color_map.data||[16711680,65280,255,16776960,16711935,65535],m=v(m),h.holdRemeshing=e._hold_remeshing||!1,h.voxelSize={width:n[0],height:n[1],length:n[2]},h.rebuildChunk=function(){!function(e,t){const n={};console.log(`K3D.Voxels rebuildChunk Count:${t.size}`),e.children.forEach(e=>{e.voxel&&(n[e.voxel.chunk.id]=e)}),t.forEach(e=>{const t=n[e];let r;if(t){r=t.voxel.getVoxelChunkObject(t.voxel.generate());for(let e=0;e<t.children.length;e++)t.children[e].geometry.dispose(),t.children[e].geometry=r.children[e].geometry}}),t.clear()}(h,p),i.render()},h.updateChunk=function(e,t){h.children.some(n=>!(!n.voxel||n.voxel.chunk.id!==e.id||(n.voxel.chunk.voxels.data=e.voxels.data,p.add(e.id),t||n.voxel.chunk.voxels.neighbours.forEach(e=>{p.add(e.id)}),h.holdRemeshing||h.rebuildChunk(),0)))},h.voxelsChunks=t,h.addChunk=function(t){const n=s.initializeGreedyVoxelMesh(t,m,h.voxelSize,e.outlines,e.opacity<1);let r;return r=h.holdRemeshing?{offset:t.offset,vertices:[],colors:[],outlines:[]}:n(),g=d(i,e,h.voxelSize,r),g.voxel={generate:n,chunk:t,getVoxelChunkObject:d.bind(this,i,e,h.voxelSize)},r.vertices.length>0&&(g.children[0].geometry.boundsTree=new o.MeshBVH(g.children[0].geometry)),g.children[0].interactions=l(h,g,f,i),h.add(g),g},a(t.length,20,e=>{h.addChunk(t[e])},()=>{h.position.set(-.5,-.5,-.5),h.initialPosition=h.position.clone(),h.updateMatrix(),x.set.apply(x,e.model_matrix.data),h.applyMatrix4(x),f.visible=!1,f.geometry.computeBoundingSphere(),f.geometry.computeBoundingBox(),h.add(f),h.updateMatrixWorld(),y=i.on(i.events.VIEW_MODE_CHANGE,()=>{f.visible=!1}),_=i.on(i.events.RESIZED,()=>{h.children.forEach(e=>{e.children[1]&&(e.children[1].material.uniforms.resolution.value.x=i.getWorld().width,e.children[1].material.uniforms.resolution.value.y=i.getWorld().height)})}),h.onRemove=function(){i.off(i.events.VIEW_MODE_CHANGE,y),i.off(i.events.RESIZED,_)},u(h)})})},generateRegularChunks(e,t,n){const r=[],o=Math.ceil(t[2]/e),i=Math.ceil(t[1]/e),a=Math.ceil(t[0]/e);let s,l,c,d;for(s=0,d=0;s<o;s++)for(l=0;l<i;l++)for(c=0;c<a;c++,d++)r.push({voxels:n,size:[t[2]-(s+1)*e>0?e:t[2]-s*e,t[1]-(l+1)*e>0?e:t[1]-l*e,t[0]-(c+1)*e>0?e:t[0]-c*e],offset:[s*e,l*e,c*e],multiple:1,idx:d});return r}}},64756:(e,t,n)=>{const r=n(21453),o=(n(62419),n(31800).version),i=n(76749),a=n(63806);function s(e,t,r){const o=document.createElementNS("http://www.w3.org/2000/svg","svg");let a=t.opacityFunction;const s=o.namespaceURI;let l,c,d,p,u=t.colorMap;const m=10,h=40;let g=[],f=[];function v(e){const t=e.target.parentNode,n=g.indexOf(t);0!==n&&n!==g.length-1&&(o.removeChild(t),g.splice(n,1),a.splice(2*n,2),w(o,!0),r({key:"opacity_function",value:a}),e.preventDefault())}function y(e){const t=e.target.parentNode,n=f.indexOf(t);0!==n&&n!==f.length-1&&(o.removeChild(t),f.splice(n,1),u.splice(4*n,4),w(o,!0),b(o,!0),r({key:"color_map",value:u}),e.preventDefault())}function _(e,t,n){const r=document.createElementNS(o.namespaceURI,"g");return[{offset:1,color:"white"},{offset:0,color:"black"}].forEach(i=>{const a=document.createElementNS(o.namespaceURI,"circle");a.setAttribute("cx",e+i.offset),a.setAttribute("cy",t+i.offset),a.setAttribute("r",n),a.setAttribute("stroke-width",1),a.setAttribute("stroke",i.color),a.setAttribute("fill","transparent"),r.appendChild(a)}),r}function x(e,t){return e.reduce((n,r,o)=>(o%(1+t)===0&&n.push({v:r,p:e.slice(o+1,o+1+t)}),n),[]).sort((e,t)=>e.v-t.v).reduce((e,t)=>(e.push(t.v),t.p.forEach(t=>{e.push(t)}),e),[])}function b(e,t){let n;if(i.createSVGGradient(e,"colorMap",u,null,!0),p.setAttribute("x",0),p.setAttribute("y",e.clientHeight-h+10),p.setAttribute("width",e.clientWidth),p.setAttribute("height",30),!t)for(f.forEach(t=>{e.removeChild(t)}),f=[],n=0;n<u.length;n+=4){const t=_((u[n]-u[0])/(u[u.length-4]-u[0])*e.clientWidth,e.clientHeight-15,5);t.classList.add("draggable"),t.classList.add("colormap"),t.addEventListener("contextmenu",y),t.addEventListener("dblclick",t=>{const n=f.indexOf(t.target.parentElement),o=`0${Math.round(255*u[4*n+1]).toString(16)}`,i=`0${Math.round(255*u[4*n+2]).toString(16)}`,a=`0${Math.round(255*u[4*n+3]).toString(16)}`;l.k3dIndex=n,l.value=`#${o.substr(-2)}${i.substr(-2)}${a.substr(-2)}`,l.click(),l.addEventListener("change",function t(n){const o=n.target.value.substr(1);u[4*l.k3dIndex+1]=parseInt(o.substring(0,2),16)/255,u[4*l.k3dIndex+2]=parseInt(o.substring(2,4),16)/255,u[4*l.k3dIndex+3]=parseInt(o.substring(4,6),16)/255,b(e,!0),w(e,!0),r({key:"color_map",value:u}),l.removeEventListener("change",t)})}),e.appendChild(t),f.push(t)}}function w(e,t){let n;const r=a.concat([u[u.length-4],0,u[0],0]);for(i.createSVGGradient(e,"transferFunction",u,a,!0),c.points.clear(),n=0;n<r.length;n+=2){const t=e.createSVGPoint();t.x=(r[n]-u[0])/(u[u.length-4]-u[0])*e.clientWidth,t.y=(1-r[n+1])*(e.clientHeight-m-h)+m,c.points.appendItem(t)}if(c.setAttribute("fill","url(#transferFunction)"),c.setAttribute("stroke-width",1),c.setAttribute("stroke","black"),!t)for(g.forEach(t=>{e.removeChild(t)}),g=[],n=0;n<a.length;n+=2){const t=_((a[n]-u[0])/(u[u.length-4]-u[0])*e.clientWidth,(1-a[n+1])*(e.clientHeight-m-h)+m,5);t.classList.add("draggable"),t.classList.add("polygon"),t.addEventListener("contextmenu",v),e.appendChild(t),g.push(t)}}function M(){w(o),b(o)}n(75418),o.setAttribute("width","100%"),o.setAttribute("height","100%"),o.classList.add("k3d-transfer-function"),c=document.createElementNS(s,"polygon"),p=document.createElementNS(s,"rect"),p.setAttribute("fill","url(#colorMap)"),o.appendChild(c),o.appendChild(p),l=document.createElement("input"),l.setAttribute("type","color"),l.classList.add("k3d-color-picker"),e.appendChild(o),e.appendChild(l),window.addEventListener("resize",M,!1),function(e){function t(t){const n=e.getScreenCTM();return t.touches&&(t=t.touches[0]),{x:(t.clientX-n.e)/n.a,y:(t.clientY-n.f)/n.d}}function n(n){if(n.target.parentNode.classList.contains("draggable"))d=n.target.parentNode;else{const o=t(n);if(o.y>m&&o.y<e.clientHeight-h&&(a.push(u[0]+o.x/e.clientWidth*(u[u.length-4]-u[0])),a.push(1-(o.y-m)/(e.clientHeight-m-h)),a=x(a,1),w(e,!1),r({key:"opacity_function",value:a})),o.y>e.clientHeight-h+10){const t=u[0]+o.x/e.clientWidth*(u[u.length-4]-u[0]);let n;const a=i.mergeColorMapWithOpacity(u,[u[0],0,t,.5,u[u.length-4],1]);for(n=0;n<a.length;n+=5)a[n]===t&&(u=u.concat(a.slice(n,n+4)));u=x(u,3),b(e,!1),r({key:"color_map",value:u})}}}function o(n){let o;if(d){n.preventDefault();const i=t(n);d.classList.contains("polygon")&&(o=g.indexOf(d),i.y=Math.max(i.y,m),i.y=Math.min(i.y,e.clientHeight-h),0===o||o===g.length-1?i.x=parseFloat(d.childNodes[1].getAttribute("cx")):(i.x=Math.min(i.x,parseFloat(g[o+1].childNodes[1].getAttribute("cx"))-1),i.x=Math.max(i.x,parseFloat(g[o-1].childNodes[1].getAttribute("cx"))+1)),a[2*o]=u[0]+i.x/e.clientWidth*(u[u.length-4]-u[0]),a[2*o+1]=1-(i.y-m)/(e.clientHeight-m-h),r({key:"opacity_function",value:a})),d.classList.contains("colormap")&&(o=f.indexOf(d),i.y=parseFloat(d.childNodes[1].getAttribute("cy")),0===o||o===f.length-1?i.x=parseFloat(d.childNodes[1].getAttribute("cx")):(i.x=Math.min(i.x,parseFloat(f[o+1].childNodes[1].getAttribute("cx"))-1),i.x=Math.max(i.x,parseFloat(f[o-1].childNodes[1].getAttribute("cx"))+1)),u[4*o]=u[0]+i.x/e.clientWidth*(u[u.length-4]-u[0]),r({key:"color_map",value:u})),d.childNodes.forEach((e,t)=>{e.setAttribute("cx",i.x+1-t),e.setAttribute("cy",i.y+1-t)}),b(e,!0),w(e,!0)}}function s(){d=!1}e.addEventListener("mousedown",n),e.addEventListener("mousemove",o),e.addEventListener("mouseup",s),e.addEventListener("mouseleave",s),e.addEventListener("touchstart",n),e.addEventListener("touchmove",o),e.addEventListener("touchend",s),e.addEventListener("touchleave",s),e.addEventListener("touchcancel",s)}(o),u=x(u,3),a=x(a,1),M(),this.refresh=M,this.setColorMap=function(e){u=e,M()},this.setOpacityFunction=function(e){a=e,M()},this.getColorMap=function(){return u},this.getOpacityFunction=function(){return a},this.isDragging=function(){return!1!==d}}class l extends r.DOMWidgetModel{static serializers={...r.WidgetModel.serializers,color_map:a,opacity_function:a};defaults(){return{...super.defaults(),_model_name:"TransferFunctionModel",_view_name:"TransferFunctionView",_model_module:"k3d",_view_module:"k3d",_model_module_version:o,_view_module_version:o}}}class c extends r.DOMWidgetView{render(){const e=window.document.createElement("div"),t=window.document.createElement("div");e.style.cssText=[`height:${this.model.get("height")}px`,"position: relative"].join(";"),t.style.cssText=["width: 100%","height: 100%","position: relative"].join(";"),e.appendChild(t),this.el.appendChild(e),this.container=t,this.on("displayed",this._init,this)}remove(){}_init(){const e=this;this.model.on("change:color_map",this._setColorMap,this),this.model.on("change:opacity_function",this._setOpacityFunction,this);try{this.K3DTransferFunctionEditorInstance=new s(this.container,{height:this.model.get("height"),colorMap:Array.from(this.model.get("color_map").data),opacityFunction:Array.from(this.model.get("opacity_function").data)},t=>{e.model.set(t.key,{data:new Float32Array(t.value),shape:[t.value.length]},{updated_view:e}),e.model.save_changes()})}catch(e){console.log(e)}}_setColorMap(e,t,n){if(n.updated_view===this||this.K3DTransferFunctionEditorInstance.isDragging())return;const r=Array.from(this.model.get("color_map").data);this.K3DTransferFunctionEditorInstance.setColorMap(Array.from(r))}_setOpacityFunction(e,t,n){if(n.updated_view===this||this.K3DTransferFunctionEditorInstance.isDragging())return;const r=this.model.get("opacity_function").data;this.K3DTransferFunctionEditorInstance.setOpacityFunction(Array.from(r))}processPhosphorMessage(e){switch(r.DOMWidgetView.prototype.processPhosphorMessage.call(this,e),e.type){case"after-attach":this.el.addEventListener("contextmenu",this,!0);break;case"before-detach":this.el.removeEventListener("contextmenu",this,!0);break;case"resize":this.handleResize(e)}}handleEvent(e){"contextmenu"===e.type?this.handleContextMenu(e):r.DOMWidgetView.prototype.handleEvent.call(this,e)}handleContextMenu(){}handleResize(){this.K3DTransferFunctionEditorInstance&&this.K3DTransferFunctionEditorInstance.refresh()}}e.exports={transferFunctionModel:l,transferFunctionView:c,transferFunctionEditor:s}},64926:(e,t,n)=>{const{getSpaceDimensionsFromTargetElement:r}=n(98947);e.exports=function(){const e=r(this);this.width=e[0],this.height=e[1],this.axesHelper={width:100,height:100}}},65320:e=>{"use strict";e.exports="#include <common>\r\n#include <clipping_planes_pars_fragment>\r\n#include <lights_pars_begin>\r\n\r\nprecision highp sampler3D;\r\n\r\nvarying vec2 vUv;\r\n\r\nuniform vec3 lightMapSize;\r\nuniform vec2 lightMapRenderTargetSize;\r\nuniform vec3 volumeMapSize;\r\nuniform sampler2D colormap;\r\nuniform sampler3D volumeTexture;\r\nuniform float low;\r\nuniform float high;\r\nuniform vec4 scale;\r\nuniform vec4 translation;\r\nuniform float samples;\r\nuniform float alpha_coef;\r\nuniform vec3 lightDirection;\r\nuniform mat4 modelViewMatrix;\r\n\r\nuniform sampler3D mask;\r\nuniform float maskOpacities[256];\r\nuniform bool maskEnabled;\r\n\r\nfloat inv_range;\r\n\r\nstruct Ray {\r\n    vec3 origin;\r\n    vec3 direction;\r\n    vec3 inv_direction;\r\n    int sign[3];\r\n};\r\n\r\nvec3 aabb[2] = vec3[2](\r\n    vec3(-0.5, -0.5, -0.5),\r\n    vec3(0.5, 0.5, 0.5)\r\n);\r\n\r\nRay makeRay(vec3 origin, vec3 direction) {\r\n    vec3 inv_direction = vec3(1.0) / direction;\r\n\r\n    return Ray(\r\n        origin,\r\n        direction,\r\n        inv_direction,\r\n        int[3](\r\n            ((inv_direction.x < 0.0) ? 1 : 0),\r\n            ((inv_direction.y < 0.0) ? 1 : 0),\r\n            ((inv_direction.z < 0.0) ? 1 : 0)\r\n        )\r\n    );\r\n}\r\n\r\n/*\r\n\tFrom: https://github.com/hpicgs/cgsee/wiki/Ray-Box-Intersection-on-the-GPU\r\n*/\r\nvoid intersect(\r\nin Ray ray, in vec3 aabb[2],\r\nout float tmin, out float tmax\r\n) {\r\n    float tymin, tymax, tzmin, tzmax;\r\n    tmin = (aabb[ray.sign[0]].x - ray.origin.x) * ray.inv_direction.x;\r\n    tmax = (aabb[1 - ray.sign[0]].x - ray.origin.x) * ray.inv_direction.x;\r\n    tymin = (aabb[ray.sign[1]].y - ray.origin.y) * ray.inv_direction.y;\r\n    tymax = (aabb[1 - ray.sign[1]].y - ray.origin.y) * ray.inv_direction.y;\r\n    tzmin = (aabb[ray.sign[2]].z - ray.origin.z) * ray.inv_direction.z;\r\n    tzmax = (aabb[1 - ray.sign[2]].z - ray.origin.z) * ray.inv_direction.z;\r\n    tmin = max(max(tmin, tymin), tzmin);\r\n    tmax = min(min(tmax, tymax), tzmax);\r\n}\r\n\r\nfloat getMaskOpacity(vec3 pos) {\r\n    int maskValue = int(texture(mask, pos).r * 255.0);\r\n\r\n    return maskOpacities[maskValue];\r\n}\r\n\r\nvoid main() {\r\n    vec2 sliceCount = lightMapRenderTargetSize / lightMapSize.xy;\r\n    float zidx = floor(vUv.x * lightMapRenderTargetSize.x / lightMapSize.x) +\r\n    floor(vUv.y * lightMapRenderTargetSize.y / lightMapSize.y) * sliceCount.x;\r\n\r\n    if (zidx > lightMapSize.z) {\r\n        discard;\r\n    }\r\n\r\n    float x = mod(vUv.x * lightMapRenderTargetSize.x, lightMapSize.x) / lightMapSize.x;\r\n    float y = mod(vUv.y * lightMapRenderTargetSize.y, lightMapSize.y) / lightMapSize.y;\r\n    float z = zidx / lightMapSize.z;\r\n\r\n    vec3 localPosition = vec3(x, y, z);\r\n\r\n    // check if inside\r\n    vec3 delta_step = vec3(1.0) / lightMapSize;\r\n    vec3 s = step(delta_step, localPosition) - step(vec3(1.0) - delta_step, localPosition);\r\n\r\n    if (s.x * s.y * s.z < 1.0) {\r\n        discard;\r\n    }\r\n\r\n    // start intersection\r\n    float tmin = 0.0;\r\n    float tmax = 0.0;\r\n    float reducedSamples = samples / 2.0;\r\n    float dist;\r\n\r\n    inv_range = 1.0 / (high - low);\r\n    aabb[0] = aabb[0] * scale.xyz + translation.xyz;\r\n    aabb[1] = aabb[1] * scale.xyz + translation.xyz;\r\n\r\n    intersect(makeRay((localPosition - vec3(0.5)) * scale.xyz + translation.xyz, -lightDirection), aabb, tmin, tmax);\r\n\r\n    float backoff = length(scale.xyz / volumeMapSize);\r\n\r\n    if (tmin >= tmax) {\r\n        dist = 0.0;\r\n    } else {\r\n        dist = abs(tmax);\r\n    }\r\n\r\n    dist += backoff;\r\n    backoff *= 3.0;\r\n\r\n    if (dist <= backoff) {\r\n        discard;\r\n    }\r\n    vec3 textcoord_start = localPosition - dist * lightDirection / scale.xyz;\r\n    vec3 textcoord_end = localPosition - backoff * lightDirection / scale.xyz;\r\n    vec3 textcoord_delta = textcoord_end - textcoord_start;\r\n\r\n    int sampleCount = min(int(length(textcoord_delta) * reducedSamples), int(reducedSamples * 1.8));\r\n\r\n    textcoord_delta = textcoord_delta / float(sampleCount);\r\n    vec3 textcoord = textcoord_start - textcoord_delta;\r\n\r\n    float textcoord_delta_step = length(textcoord_delta);\r\n    float sum_density = 0.0;\r\n\r\n    for (int count = 0; count < sampleCount; count++) {\r\n        textcoord += textcoord_delta;\r\n\r\n        #if NUM_CLIPPING_PLANES > 0\r\n        vec4 plane;\r\n        vec3 pos = -vec3(modelViewMatrix * vec4(textcoord - vec3(0.5), 1.0));\r\n\r\n        #pragma unroll_loop_start\r\n        for (int i = 0; i < UNION_CLIPPING_PLANES; i++) {\r\n            plane = clippingPlanes[i];\r\n            if (dot(pos, plane.xyz) > plane.w) continue;\r\n        }\r\n        #pragma unroll_loop_end\r\n        #endif\r\n\r\n        float px = texture(volumeTexture, textcoord).x;\r\n        float scaled_px = (px - low) * inv_range;\r\n\r\n        if (scaled_px > 0.0) {\r\n            scaled_px = min(scaled_px, 0.99);\r\n            float alpha = texture(colormap, vec2(scaled_px, 0.5)).a;\r\n\r\n            float density = 1.0 - pow(1.0 - alpha, textcoord_delta_step * alpha_coef);\r\n            density *= (1.0 - sum_density);\r\n\r\n            #if (USE_MASK == 1)\r\n            density *= getMaskOpacity(textcoord);\r\n            #endif\r\n\r\n            sum_density += density;\r\n\r\n            if (sum_density >= 0.99) {\r\n                sum_density = 1.0;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    gl_FragColor = vec4(sum_density, 0, 0, 1.0);\r\n}\r\n"},68479:e=>{"use strict";e.exports="#include <common>\r\n#include <clipping_planes_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n\r\nuniform sampler2D map;\r\nuniform sampler2D colormap;\r\nuniform float low;\r\nuniform float high;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n    #include <clipping_planes_fragment>\r\n    #include <logdepthbuf_fragment>\r\n\r\n    vec4 tcolor = texture2D(map, vUv);\r\n    float value = (tcolor.x - low) / (high - low);\r\n\r\n    vec4 color = texture2D(colormap, vec2(value, 0.5));\r\n\r\n    if (color.a <= 0.01) {\r\n        discard;\r\n    }\r\n\r\n    gl_FragColor = color;\r\n}"},68515:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(76314),o=n.n(r)()(function(e){return e[1]});o.push([e.id,".katex-display {\r\n  margin: 0.25em 0 !important;\r\n}\r\n\r\n/*.dg input, .dg select {*/\r\n/*  color: black;*/\r\n/*  line-height: normal !important;*/\r\n/*}*/\r\n\r\n/*.dg li {*/\r\n/*  list-style: none !important;*/\r\n/*}*/\r\n\r\n/*.dg li > * {*/\r\n/*  margin-bottom: 0 !important;*/\r\n/*}*/\r\n\r\n/*.dg input, .dg select {*/\r\n/*  padding: 3px !important;*/\r\n/*  display: block !important;*/\r\n/*  box-shadow: none !important;*/\r\n/*  font-size: 100% !important;*/\r\n/*  border: 0 !important;*/\r\n/*}*/\r\n\r\n/*.dg.a {*/\r\n/*  margin-right: 0 !important;*/\r\n/*}*/\r\n\r\n/*.dg li {*/\r\n/*  margin: 0 !important;*/\r\n/*}*/\r\n\r\n.lil-gui {\r\n  max-height: inherit !important;\r\n}\r\n\r\n.lil-gui select {\r\n  color: black;\r\n}\r\n\r\n/*.dg.main .close-button.close-bottom {*/\r\n/*  position: relative !important;*/\r\n/*}*/\r\n\r\n/*.dg.main.taller-than-window .close-button.close-bottom {*/\r\n/*  position: absolute !important;*/\r\n/*  bottom: 0 !important;*/\r\n/*}*/\r\n\r\n/*.dg.main.taller-than-window > ul > li:last-child {*/\r\n/*  margin-bottom: 20px !important;*/\r\n/*}*/\r\n\r\n.dg .controller[hidden] {\r\n  display: none;\r\n}\r\n\r\n.dg .controller:not([hidden]) {\r\n  display: flex\r\n}\r\n\r\n.k3d-target canvas {\r\n  position: relative;\r\n  z-index: 10;\r\n}\r\n\r\n.k3d-transfer-function {\r\n  height: 100% !important;\r\n}\r\n\r\n.k3d-transfer-function circle {\r\n  cursor: move;\r\n}\r\n\r\n.k3d-transfer-function circle.selected {\r\n  /*stroke: red;*/\r\n}\r\n\r\n.k3d-color-picker {\r\n  display: none;\r\n}\r\n\r\n",""]);const i=o},68881:(e,t,n)=>{const r=n(14042);n(62419),e.exports=function(e){e.VolumeSidesControls=function(t,n,o){const i=this;function a(){const e=o.parameters.sliceViewerObjectId;return o.getWorld().ObjectsListJson[e]}const s=this,l=t.clone(),c=new e.TrackballControls(l,n,o);let d,p;void 0!==n?(d=n.ownerDocument.defaultView||n.ownerDocument.parentWindow,this.domElement=n,p=n.ownerDocument):(d=window,this.domElement=d.document,p=d.document),this.object=t,this.domElement.style.touchAction="none";let u=null,m=-1;this.enabled=!0,this.screen={left:0,top:0,width:0,height:0};const h=[],g={};this.minDistance=0,this.maxDistance=1/0,this.target=new e.Vector3;const f=1e-10,v=new e.Vector3(-1,-1,-1);let y=-1;const _=new e.Vector2,x=new e.Vector2,b={x:new e.Vector3,y:new e.Vector3,z:new e.Vector3},w=new e.Vector3;let M=0,E=0,C=0;const S={type:"change"},A={type:"start"},P={type:"end"};this.handleResize=function(){if(this.domElement===p)this.screen.left=0,this.screen.top=0,this.screen.width=d.innerWidth,this.screen.height=d.innerHeight;else{const e=this.domElement.getBoundingClientRect(),t=this.domElement.ownerDocument.documentElement;this.screen.left=e.left+d.pageXOffset-t.clientLeft,this.screen.top=e.top+d.pageYOffset-t.clientTop,this.screen.width=e.width,this.screen.height=e.height}},this.handleEvent=function(e){"function"==typeof this[e.type]&&this[e.type](e)},this.beforeRender=function(t){const n=a();if(!n)return;const r=o.Provider.Objects[n.type];if(!u){if(u=o.getObjectById(o.parameters.sliceViewerObjectId),!u)return;if(!c.initialized){c.target=u.position.clone();const t=u.geometry.boundingBox.clone();t.applyMatrix4(u.matrixWorld);const n=t.getBoundingSphere(new e.Sphere);l.position.subVectors(n.center,new e.Vector3(-1,2,-1).setLength(1.5*n.radius)),c.update(),c.initialized=!0}}const i=o.getWorld().ObjectsListJson;switch(Object.keys(i).forEach(e=>{e=parseInt(e,10);const r=o.getObjectById(e);r&&(r.originalVisible=r.visible,t<3&&(e===n.id||i[e].slice_planes&&0!==i[e].slice_planes.length||(r.visible=!1)),3===t&&-1!==o.parameters.hiddenObjectIds.indexOf(e)&&(r.visible=!1))}),o.parameters.sliceViewerMaskObjectIds.forEach(e=>{const t=o.getWorld().ObjectsListJson[e];t.originalSlicePlanes=t.slice_planes}),t){case 0:s.prepareView(n,"z"),r.update(n,{slice_x:-1,slice_y:-1,slice_z:n.slice_z},u,o);break;case 1:s.prepareView(n,"y"),r.update(n,{slice_x:-1,slice_y:n.slice_y,slice_z:-1},u,o);break;case 2:s.prepareView(n,"x"),r.update(n,{slice_x:n.slice_x,slice_y:-1,slice_z:-1},u,o);break;case 3:l.far=s.object.far,l.near=s.object.near,l.aspect=s.object.aspect,l.updateProjectionMatrix(),s.target.copy(c.target),s.object.copy(c.object,!1)}},this.afterRender=function(e){const t=a();let n;if(!t||!u)return;const r=o.getWorld().ObjectsListJson;Object.keys(r).forEach(e=>{e=parseInt(e,10);const t=o.getObjectById(e);t&&void 0!==t.originalVisible&&(t.visible=t.originalVisible,delete t.originalVisible)}),o.parameters.sliceViewerMaskObjectIds.forEach(e=>{const t=o.getWorld().ObjectsListJson[e];t.slice_planes=t.originalSlicePlanes;const r=o.getObjectById(e);r&&(n=o.Provider.Objects[t.type],n.update(t,{slice_planes:t.slice_planes},r,o)),delete t.originalSlicePlanes}),2===e&&(n=o.Provider.Objects[t.type],n.update(t,{slice_x:t.slice_x,slice_y:t.slice_y,slice_z:t.slice_z},u,o)),3===e&&(u=null)};const z=function(){const t=new e.Vector2;return function(e,n){return t.set(e/s.screen.width,n/s.screen.height),t}}();function D(e){delete g[e.pointerId];for(let t=0;t<h.length;t++)if(h[t].pointerId==e.pointerId)return void h.splice(t,1)}function T(t){let n=g[t.pointerId];void 0===n&&(n=new e.Vector2,g[t.pointerId]=n),n.set(t.offsetX,t.offsetY)}function k(e){const t=e.pointerId===h[0].pointerId?h[1]:h[0];return g[t.pointerId]}function O(e){0===h.length&&i.domElement.setPointerCapture(e.pointerId),m=null,function(e){h.push(e)}(e),"touch"===e.pointerType?function(e){if(1===(T(e),h.length))y=3,_.copy(z(h[0].offsetX,h[0].offsetY)),x.copy(_);else{const t=k(e),n=e.offsetX-t.x,r=e.offsetY-t.y;E=M=Math.sqrt(n*n+r*r);const o=(e.offsetX+t.x)/2,i=(e.offsetY+t.y)/2;_.copy(z(o,i)),x.copy(_),y=M>Math.min(s.screen.width,s.screen.height)/3?4:5}i.dispatchEvent(A)}(e):function(e){e.preventDefault(),-1===y&&(y=e.button),_.copy(z(e.offsetX,e.offsetY)),x.copy(_),s.dispatchEvent(A)}(e)}function j(e){"touch"===e.pointerType?function(e){switch(T(e),h.length){case 1:x.copy(_),_.copy(z(e.offsetX,e.offsetY));break;case 2:x.copy(_);const t=k(e),n=e.offsetX-t.x,r=e.offsetY-t.y;E=Math.sqrt(n*n+r*r);const o=(e.offsetX+t.x)/2,i=(e.offsetY+t.y)/2;_.copy(z(o,i));break;default:x.copy(_),_.copy(z(h[0].offsetX,h[0].offsetY))}}(e):function(e){_.copy(z(e.offsetX,e.offsetY))}(e)}function I(e){e.pointerType,y=-1,s.dispatchEvent(P),D(e),m=-1,0===h.length&&i.domElement.releasePointerCapture(e.pointerId)}function L(e){D(e)}function F(e){switch(e.preventDefault(),e.deltaMode){case 2:C=.025*e.deltaY;break;case 1:C=.01*e.deltaY;break;default:C=25e-5*e.deltaY}s.dispatchEvent(A),s.dispatchEvent(P)}function V(e){e.preventDefault()}this.changeSlice=function(e,t){let n=Array.isArray(e.volume)?e.volume[0].shape:e.volume.shape;return _.x<.5&&_.y<.5&&(e.slice_z+=t,e.slice_z=Math.max(-1,Math.min(e.slice_z,n[0]-1))),_.x<.5&&_.y>.5&&(e.slice_y+=t,e.slice_y=Math.max(-1,Math.min(e.slice_y,n[1]-1))),_.x>.5&&_.y<.5&&(e.slice_x+=t,e.slice_x=Math.max(-1,Math.min(e.slice_x,n[2]-1))),0!==t},this.changeLevels=function(e){const t=_.clone().sub(x),n=.5*(e.color_range[1]-e.color_range[0]);return t.length()>0&&(Math.abs(t.y)>f&&(e.color_range[0]+=t.y*n,e.color_range[1]+=t.y*n),Math.abs(t.x)>f&&(e.color_range[0]+=t.x*n,e.color_range[1]-=t.x*n,e.color_range[0]>=e.color_range[1]&&(e.color_range[0]=.5*(e.color_range[0]+e.color_range[1])-1,e.color_range[1]=e.color_range[0]+2)),r.changeParameter(o,e,"color_range",e.color_range,!0),!0)},this.changeZoom=function(e){const t=_.clone().sub(x);return t.length()>0&&(Math.abs(t.y)>f&&(b.x.z+=t.y,b.y.z+=t.y,b.z.z+=t.y),Math.abs(t.x)>f&&s.changeSlice(e,Math.round(500*t.x)),!0)},this.changePan=function(){const e=_.clone().sub(x);let t=0;return E!==M&&(t=5e-4*(M-E)),e.length()>0&&(_.x<.5&&_.y<.5&&(b.z.x+=2*e.x,b.z.y+=2*e.y,b.z.z+=t),_.x<.5&&_.y>.5&&(b.y.x+=2*e.x,b.y.y+=2*e.y,b.y.z+=t),_.x>.5&&_.y<.5&&(b.x.x+=2*e.x,b.x.y+=2*e.y,b.x.z+=t),!0)},this.prepareView=function(t,n,r){const i=o.getObjectById(t.id);let a=new e.Vector3;const l=new e.Vector3;let c=new e.Vector3;const d={x:[0,2,1],y:[1,2,0],z:[2,1,0]};let p=t[`slice_${n}`],u=Array.isArray(t.volume)?t.volume[0].shape:t.volume.shape;if(!i)return{};c.setFromMatrixColumn(i.matrixWorld,d[n][0]),a.setFromMatrixColumn(i.matrixWorld,d[n][1]),l.setFromMatrixColumn(i.matrixWorld,d[n][2]),"x"===n&&(c=c.negate(),p=u[2]-1-t.slice_x),"y"===n&&(c=c.negate(),p=u[1]-1-t.slice_y),"z"===n&&(a=a.negate(),c=c.negate(),p=u[0]-1-t.slice_z);const m=i.position.clone().sub(c.multiplyScalar(.5)).add(c.clone().multiplyScalar((2*p+.1+1)/u[{x:2,y:1,z:0}[n]]));m.add(a.clone().multiplyScalar(b[n].y)).add(l.clone().multiplyScalar(-b[n].x)),p=.5*a.length()/Math.tan(e.Math.degToRad(o.parameters.cameraFov/2));const h=p*(1+.5*b[n].z);if(r)return{ray:c,slicePosition:m};s.object.position.copy(m.clone().add(c.clone().normalize().multiplyScalar(h))),s.object.up.copy(a.clone().normalize()),s.target.copy(m),s.object.lookAt(s.target),s.object.updateProjectionMatrix(),s.object.updateWorldMatrix();const g=["x","y","z"].indexOf(n),f=o.Provider.Objects.Mesh;return o.parameters.sliceViewerMaskObjectIds.forEach(e=>{const t=o.getObjectById(e),n=o.getWorld().ObjectsListJson[e],r=n.slice_planes;t&&f.update(n,{slice_planes:[r[g]]},t,o)}),null},this.update=function(){const t=a();let n=!1;if(void 0!==t)if(_.x>.5&&_.y>.5)null===m&&(m=2),2!==m&&-1!==m||c.update();else{c._pointers=[],c._pointerPositions={},null===m&&(m=1),n|=s.changeSlice(t,Math.sign(C)),1===m&&(0===y&&(n|=s.changeLevels(t)),1===y&&(n|=s.changeZoom(t)),2===y&&(n|=s.changePan()),3===y&&(n|=s.changeSlice(t,Math.sign(_.y-x.y))),4===y&&(n|=s.changePan()),5===y&&(n|=s.changeLevels(t)));const i=[];let a=!1;["x","y","z"].forEach(e=>{if(t[`slice_${e}`]!==v[e]){const n={};a=!0,n[`slice_${e}`]=t[`slice_${e}`],r.update(o,t,o.GUI.objects,n),r.changeParameter(o,t,`slice_${e}`,t[`slice_${e}`],!0),v[e]=t[`slice_${e}`]}}),o.parameters.sliceViewerMaskObjectIds.length>0&&a&&(["x","y","z"].forEach(n=>{const r=s.prepareView(t,n,!0);i.push((new e.Plane).setFromNormalAndCoplanarPoint(r.ray.clone().normalize(),r.slicePosition))}),o.parameters.sliceViewerMaskObjectIds.forEach(e=>{const t=o.getWorld().ObjectsListJson[e],n={};1===t.opacity&&(n.opacity=.95,t.opacity=.95),n.slice_planes=i.map(e=>[e.normal.x,e.normal.y,e.normal.z,e.constant]),t.slice_planes=n.slice_planes,t.visible&&o.reload(t,n,!0)})),C=0,x.copy(_),n&&s.dispatchEvent(S)}},this.reslice=function(){v.set(-1,-1,-1)},this.reset=function(){y=-1,b.x.set(0,0,0),b.y.set(0,0,0),b.z.set(0,0,0),w.set(0,0,0),s.dispatchEvent(S)},this.dispose=function(){i.domElement.removeEventListener("contextmenu",V),i.domElement.removeEventListener("pointerdown",O),i.domElement.removeEventListener("pointercancel",L),i.domElement.removeEventListener("wheel",F),i.domElement.removeEventListener("pointermove",j),i.domElement.removeEventListener("pointerup",I)},this.domElement.addEventListener("pointerdown",O),this.domElement.addEventListener("pointermove",j),this.domElement.addEventListener("pointerup",I),this.domElement.addEventListener("pointercancel",L),this.domElement.addEventListener("wheel",F,{passive:!1}),this.domElement.addEventListener("contextmenu",V),this.handleResize(),this.update(),c.update(),c.noRotate=o.parameters.cameraNoRotate,c.noZoom=o.parameters.cameraNoZoom,c.noPan=o.parameters.cameraNoPan,c.rotateSpeed=2*o.parameters.cameraRotateSpeed,c.zoomSpeed=2*o.parameters.cameraZoomSpeed,c.panSpeed=2*o.parameters.cameraPanSpeed,c.staticMoving=!0,c.dynamicDampingFactor=.1,c.initialized=!1,c.addEventListener("change",e=>{s.dispatchEvent(e)})},e.VolumeSidesControls.prototype=Object.create(e.EventDispatcher.prototype),e.VolumeSidesControls.prototype.constructor=e.VolumeSidesControls}},69358:e=>{const t={view:"view",add:"add",change:"change",callback:"callback",manipulate:"manipulate"};e.exports={viewModeGUI:function(e,n){e.add(n.parameters,"viewMode",{View:t.view,Add:t.add,Change:t.change,Callback:t.callback,Manipulate:t.manipulate}).name("Mode").onChange(e=>{n.setViewMode(e),n.dispatch(n.events.PARAMETERS_CHANGE,{key:"mode",value:e})})},viewModes:t}},69522:(e,t,n)=>{const r=n(67483),o=n(37765);e.exports={init(e,t,n,i,a,s){t.startInteraction=function(){t.interactions||(void 0===a&&(a=t.geometry),t.geometry.boundsTree=new r.MeshBVH(a),t.interactions=i?i(t,n):o(t,n),void 0!==s&&(t.interactions.intersect=s(t)))},t.stopInteraction=function(){t.interactions&&(t.geometry.boundsTree=null,t.interactions=null)},(e.click_callback||e.hover_callback)&&t.startInteraction()},update(e,t,n,r){void 0===t.click_callback&&void 0===t.hover_callback||((t.click_callback||t.hover_callback)&&r.startInteraction(),t.click_callback||t.hover_callback||r.stopInteraction(),n.click_callback=null,n.hover_callback=null)}}},70127:(e,t,n)=>{const r=n(6101),o=n(21091),{areAllChangesResolve:i}=n(98947),{commonUpdate:a}=n(98947);e.exports={create(e,t){e.visible=void 0===e.visible||e.visible,e.color=void 0!==e.color?e.color:255,e.wireframe=void 0!==e.wireframe&&e.wireframe,e.flat_shading=void 0===e.flat_shading||e.flat_shading,e.shininess=void 0!==e.shininess?e.shininess:50;const n=new r.STLLoader,i=new r.Matrix4;let a=new(e.wireframe?r.MeshBasicMaterial:r.MeshPhongMaterial)({color:e.color,emissive:0,shininess:e.shininess,specular:1118481,flatShading:e.flat_shading,side:r.DoubleSide,wireframe:e.wireframe});const{text:s}=e,{binary:l}=e;let c;c=null==s?n.parse(l.data.buffer):n.parse(s),c.hasColors&&(a=new r.MeshPhongMaterial({opacity:c.alpha,vertexColors:r.VertexColors,wireframe:e.wireframe})),!1===e.flat_shading&&(c=o.mergeVertices(c),c.computeVertexNormals());const d=new r.Mesh(c,a);return c.computeBoundingSphere(),c.computeBoundingBox(),i.set.apply(i,e.model_matrix.data),d.applyMatrix4(i),d.updateMatrixWorld(),Promise.resolve(d)},update(e,t,n,r){const o={};return a(e,t,o,n,r),!!i(t,o)&&Promise.resolve({json:e,obj:n})}}},70770:(e,t,n)=>{const r=n(6101),o=n(21091),i=n(80228),a=n(99834)(r),{getTwoColorsArray:s}=n(98947),{generateArrow:l}=n(98947),c=n(21051),d=n(98947),{commonUpdate:p}=d,{areAllChangesResolve:u}=d;function m(e,t,n,r,o){const i=t.clone().add(n).divideScalar(2),a={position:[i.x,i.y,i.z],referencePoint:"cb",text:e,size:r};return c.create(a,o)}e.exports={create(e,t){e.visible=void 0===e.visible||e.visible,e.origin_color=void 0!==e.origin_color?e.origin_color:255,e.head_color=void 0!==e.head_color?e.head_color:255,e.use_head=void 0===e.use_head||e.use_head,e.head_size=e.head_size||1,e.line_width=e.line_width||.01;const n=new r.Matrix4,c=new r.Color(e.origin_color),d=new r.Color(e.head_color),p=e.vectors.data,u=e.origins.data;let h=e.colors&&e.colors.data||[];const g=e.use_head,f=e.head_size,v=new r.Group;let y,_,x;const b=e.label_size,{labels:w}=e,M=[];let E=null;const C=[];if(h=h.length>0?i.colorsToFloat32Array(h):s(c,d,p.length/3*2),p.length!==u.length)throw new Error("vectors and origins should have the same length");if(h&&h.length/2!==p.length)throw new Error("there should be 2 colors for each vector");const S=new r.CylinderGeometry(0,.025*f,.2*f,5,1).translate(0,-.1*f,0);for(x=0;x<p.length;x+=3)y=new r.Vector3(u[x],u[x+1],u[x+2]),_=new r.Vector3(p[x],p[x+1],p[x+2]).add(y),E=l(g?S:null,C,E,y,_,new r.Color(h[2*x+3],h[2*x+4],h[2*x+5]),.2*f),w&&w[x/3]&&M.push(m(w[x/3],y,_,b,t));g&&function(e,t){(e=o.mergeBufferGeometries(e)).computeBoundingSphere(),e.computeBoundingBox(),t.add(new r.Mesh(e,new r.MeshBasicMaterial({vertexColors:r.VertexColors})))}(E,v);let A=new a.MeshLine;const P=new a.MeshLineMaterial({color:new r.Color(1,1,1),opacity:1,sizeAttenuation:!0,transparent:!0,lineWidth:e.line_width,resolution:new r.Vector2(t.getWorld().width,t.getWorld().height),side:r.DoubleSide},t);A.setGeometry(new Float32Array(C),!0,null,h),A.geometry.computeBoundingSphere(),A.geometry.computeBoundingBox(),A=new r.Mesh(A.geometry,P),v.add(A),e.model_matrix&&(n.set.apply(n,e.model_matrix.data),v.applyMatrix4(n)),v.updateMatrixWorld();const z=t.on(t.events.RESIZED,()=>{A.material.uniforms.resolution.value.x=t.getWorld().width,A.material.uniforms.resolution.value.y=t.getWorld().height});return Promise.all(M).then(e=>(e.forEach(e=>{v.add(e)}),v.onRemove=function(){e.forEach(e=>{e.onRemove()}),t.off(t.events.RESIZED,z)},v))},update(e,t,n,r){const o={};return p(e,t,o,n,r),!!u(t,o)&&Promise.resolve({json:e,obj:n})}}},71117:e=>{"use strict";e.exports="varying vec4 worldPosition;\r\n\r\n#include <common>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n    vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\r\n    worldPosition = modelMatrix * vec4(position, 1.0);\r\n\r\n    #include <clipping_planes_vertex>\r\n\r\n    gl_Position = projectionMatrix * mvPosition;\r\n\r\n    #include <logdepthbuf_vertex>\r\n    #include <clipping_planes_vertex>\r\n}\r\n"},71131:(e,t,n)=>{const r=n(6101),{colorsToFloat32Array:o}=n(80228),i=n(98947),{commonUpdate:a}=i,{areAllChangesResolve:s}=i,{getColorsArray:l}=i,{handleColorMap:c}=i;e.exports={create(e){const t=new r.BufferGeometry,n=new r.MeshBasicMaterial({opacity:e.opacity,depthWrite:1===e.opacity,transparent:1!==e.opacity});let i=e.colors&&e.colors.data||null;const a=new r.Color(e.color),s=e.color_range,d=e.color_map&&e.color_map.data||null,p=e.attribute&&e.attribute.data||null,u=new r.LineSegments(t,n),m=new r.Matrix4,h=e.vertices.data,g=e.indices.data,f=new Set;let v=[],y=[],_=[];const x="segment"===e.indices_type?2:3;let b;const w=h.length/3;i=i&&i.length===h.length/3?o(i):l(a,h.length/3);for(let e=0;e<g.length;e+=x){b=3===x?[[g[e],g[e+1]],[g[e+1],g[e+2]],[g[e+2],g[e]]]:[[g[e],g[e+1]]];for(let e=0;e<b.length;e++){const t=b[e][0]>b[e][1]?b[e][0]+b[e][1]*w:b[e][1]+b[e][0]*w;if(!f.has(t)){f.add(t);const n=3*b[e][0],r=3*b[e][1];v.push(h[n],h[n+1],h[n+2],h[r],h[r+1],h[r+2]),i&&i.length>0&&_.push(i[n],i[n+1],i[n+2],i[r],i[r+1],i[r+2]),p&&p.length>0&&y.push(p[b[e][0]],p[b[e][1]])}}}return v=new Float32Array(v),y=new Float32Array(y),_=new Float32Array(_),s&&d&&y.length>0&&s.length>0&&d.length>0?c(t,d,s,y,n):(n.setValues({vertexColors:r.VertexColors}),t.setAttribute("color",new r.BufferAttribute(_,3))),t.setAttribute("position",new r.BufferAttribute(v,3)),t.computeBoundingSphere(),t.computeBoundingBox(),m.set.apply(m,e.model_matrix.data),u.applyMatrix4(m),u.updateMatrixWorld(),Promise.resolve(u)},update(e,t,n,r){const o={};if(void 0!==n.geometry.attributes.uv&&(void 0===t.color_range||t.color_range.timeSeries||(n.material.uniforms.low.value=t.color_range[0],n.material.uniforms.high.value=t.color_range[1],o.color_range=null),void 0!==t.attribute&&!t.attribute.timeSeries&&t.attribute.data.length===n.geometry.attributes.uv.array.length)){const r=n.geometry.attributes.uv.array;for(let n=0;n<r.length;n++)r[n]=(t.attribute.data[n]-e.color_range[0])/(e.color_range[1]-e.color_range[0]);n.geometry.attributes.uv.needsUpdate=!0,o.attribute=null}return void 0===t.vertices||t.vertices.timeSeries||t.vertices.data.length!==n.geometry.attributes.position.array.length||(n.geometry.attributes.position.array.set(t.vertices.data),n.geometry.attributes.position.needsUpdate=!0,n.geometry.computeBoundingSphere(),n.geometry.computeBoundingBox(),o.vertices=null),a(e,t,o,n,r),!!s(t,o)&&Promise.resolve({json:e,obj:n})}}},71557:(e,t,n)=>{const r=n(64022),{areAllChangesResolve:o}=n(98947),{commonUpdate:i}=n(98947);function a(e){let t;this._map=new Map,this.set=function(n,r,o,i,a){const s=e.sparse_voxels.data;if(this._map.set((o*e.space_size.data[0]+r)*e.space_size.data[1]+n,i),a){for(let a=0;a<s.length;a+=4)if(s[a]===n&&s[a+1]===r&&s[a+2]===o)return void(0===i?(t=new s.constructor(s.length-4),t.set(s.subarray(0,a)),t.set(s.subarray(a+4,s.length),a),e.sparse_voxels.data=t,e.sparse_voxels.shape[0]--):s[a+3]=i);0!==i&&(t=new s.constructor(s.length+4),t.set(s),t.set([n,r,o,i],s.length),e.sparse_voxels.data=t,e.sparse_voxels.shape[0]++)}},this.get=function(t,n,r){return this._map.get((r*e.space_size.data[0]+n)*e.space_size.data[1]+t)}}e.exports={create(e,t){const n=e.sparse_voxels.data,o=new a(e);let i;for(i=0;i<n.length;i+=4)o.set(n[i],n[i+1],n[i+2],n[i+3],!1);return r.create(e,r.generateRegularChunks(32,[e.space_size.data[2],e.space_size.data[1],e.space_size.data[0]],o),e.space_size.data,t)},update(e,t,n,r){const a={};return void 0===t.opacity||t.opacity.timeSeries||(n.traverse(t=>{t.material&&(t.material.userData.outline?(t.material.uniforms.opacity.value=.75*e.opacity,t.material.opacity=t.material.uniforms.opacity.value):(t.material.opacity=e.opacity,t.material.depthWrite=1===e.opacity,t.material.transparent=1!==e.opacity))}),a.opacity=null),i(e,t,a,n,r),!!o(t,a)&&Promise.resolve({json:e,obj:n})}}},71860:(e,t,n)=>{"use strict";n.d(t,{A:()=>r});const r='<!doctype html>\n<html>\n<head>\n    <meta charset="utf-8">\n    <title>K3D snapshot viewer - [TIMESTAMP]</title>\n    <style>\n        body, html {\n            background-color: #F5F5F5;\n            margin: 0;\n            padding: 0;\n            overflow: hidden;\n        }\n\n        #canvasTarget {\n            width: 100%;\n            height: 100%;\n            position: absolute;\n        }\n    </style>\n    <script src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js"><\/script>\n    <script src="https://unpkg.com/k3d@[VERSION]/dist/standalone.js"><\/script>\n</head>\n<body>\n<div id="canvasTarget"></div>\n\n<script>\n    var K3DInstance;\n    var data = \'[DATA]\';\n\n    function _base64ToArrayBuffer(base64) {\n        var binary_string = window.atob(base64);\n        var len = binary_string.length;\n        var bytes = new Uint8Array(len);\n        for (var i = 0; i < len; i++) {\n            bytes[i] = binary_string.charCodeAt(i);\n        }\n        return bytes;\n    }\n\n    require([\'k3d\'], function (lib) {\n        try {\n            K3DInstance = new lib.CreateK3DAndLoadBinarySnapshot(\n                _base64ToArrayBuffer(data),\n                document.getElementById(\'canvasTarget\'),\n            );\n\n            K3DInstance.then(function(K3DInstance) {\n                [ADDITIONAL]\n            });\n        } catch (e) {\n            console.log(e);\n            return;\n        }\n    });\n<\/script>\n</body>\n</html>'},72245:(e,t,n)=>{const r=n(14042);e.exports=function(e){e.SliceControls=function(t,n,o){const i=this,a={x:[0,2,1],y:[1,2,0],z:[2,1,0]},s={x:2,y:1,z:0};let l;const c=this;let d,p;void 0!==n?(d=n.ownerDocument.defaultView||n.ownerDocument.parentWindow,this.domElement=n,p=n.ownerDocument):(d=window,this.domElement=d.document,p=d.document),this.object=t,this.domElement.style.touchAction="none",this.enabled=!0,this.screen={left:0,top:0,width:0,height:0};const u=[],m={};this._pointerPositions=m,this._pointers=u,this.minDistance=0,this.maxDistance=1/0,this.target=new e.Vector3;const h=1e-10,g=new e.Vector3(-1,-1,-1);let f=-1;const v=new e.Vector2,y=new e.Vector2,_=new e.Vector3,x=new e.Vector3;let b=0,w=0,M=0;const E={type:"change"},C={type:"start"},S={type:"end"};this.handleResize=function(){if(this.domElement===p)this.screen.left=0,this.screen.top=0,this.screen.width=d.innerWidth,this.screen.height=d.innerHeight;else{const e=this.domElement.getBoundingClientRect(),t=this.domElement.ownerDocument.documentElement;this.screen.left=e.left+d.pageXOffset-t.clientLeft,this.screen.top=e.top+d.pageYOffset-t.clientTop,this.screen.width=e.width,this.screen.height=e.height}},this.handleEvent=function(e){"function"==typeof this[e.type]&&this[e.type](e)};const A=function(){const t=new e.Vector2;return function(e,n){return t.set((e-c.screen.left)/c.screen.width,(n-c.screen.top)/c.screen.height),t}}();function P(e){delete m[e.pointerId];for(let t=0;t<u.length;t++)if(u[t].pointerId==e.pointerId)return void u.splice(t,1)}function z(t){let n=m[t.pointerId];void 0===n&&(n=new e.Vector2,m[t.pointerId]=n),n.set(t.pageX,t.pageY)}function D(e){const t=e.pointerId===u[0].pointerId?u[1]:u[0];return m[t.pointerId]}function T(e){!1!==i.enabled&&(0===u.length&&(i.domElement.setPointerCapture(e.pointerId),i.domElement.addEventListener("pointermove",k),i.domElement.addEventListener("pointerup",O)),function(e){u.push(e)}(e),"touch"===e.pointerType?function(e){if(1===(z(e),u.length))f=3,v.copy(A(u[0].pageX,u[0].pageY)),y.copy(v);else{const t=D(e),n=e.pageX-t.x,r=e.pageY-t.y;w=b=Math.sqrt(n*n+r*r);const o=(e.pageX+t.x)/2,i=(e.pageY+t.y)/2;v.copy(A(o,i)),y.copy(v),f=b>Math.min(c.screen.width,c.screen.height)/3?4:5}i.dispatchEvent(C)}(e):function(e){e.preventDefault(),!1!==c.enabled&&(-1===f&&(f=e.button),v.copy(A(e.pageX,e.pageY)),y.copy(v),c.dispatchEvent(C))}(e))}function k(e){!1!==i.enabled&&("touch"===e.pointerType?function(e){if(!1!==c.enabled)switch(z(e),u.length){case 1:y.copy(v),v.copy(A(e.pageX,e.pageY));break;case 2:y.copy(v);const t=D(e),n=e.pageX-t.x,r=e.pageY-t.y;w=Math.sqrt(n*n+r*r);const o=(e.pageX+t.x)/2,i=(e.pageY+t.y)/2;v.copy(A(o,i));break;default:y.copy(v),v.copy(A(u[0].pageX,u[0].pageY))}}(e):function(e){!1!==c.enabled&&v.copy(A(e.pageX,e.pageY))}(e))}function O(e){!1!==i.enabled&&(e.pointerType,!1!==c.enabled&&(f=-1,c.dispatchEvent(S)),P(e),0===u.length&&(i.domElement.releasePointerCapture(e.pointerId),i.domElement.removeEventListener("pointermove",k),i.domElement.removeEventListener("pointerup",O)))}function j(e){P(e)}function I(e){if(!1!==c.enabled){switch(e.preventDefault(),e.deltaMode){case 2:M=.025*e.deltaY;break;case 1:M=.01*e.deltaY;break;default:M=25e-5*e.deltaY}c.dispatchEvent(C),c.dispatchEvent(S)}}function L(e){e.preventDefault()}this.changeSlice=function(e,t){let n=Array.isArray(e.volume)?e.volume[0].shape:e.volume.shape;return e[`slice_${l}`]+=t,e[`slice_${l}`]=Math.max(-1,Math.min(e[`slice_${l}`],n[s[l]]-1)),0!==t},this.changeLevels=function(e){const t=v.clone().sub(y),n=.25*(e.color_range[1]-e.color_range[0]);return t.length()>0&&(Math.abs(t.y)>h&&(e.color_range[0]+=t.y*n,e.color_range[1]+=t.y*n),Math.abs(t.x)>h&&(e.color_range[0]+=t.x*n,e.color_range[1]-=t.x*n,e.color_range[0]>=e.color_range[1]&&(e.color_range[0]=.5*(e.color_range[0]+e.color_range[1])-1,e.color_range[1]=e.color_range[0]+2)),r.changeParameter(o,e,"color_range",e.color_range),!0)},this.changeZoom=function(e){const t=v.clone().sub(y);return t.length()>0&&(Math.abs(t.y)>h&&(_.z+=t.y),Math.abs(t.x)>h&&c.changeSlice(e,Math.round(500*t.x)),!0)},this.changePan=function(){const e=v.clone().sub(y);return e.length()>0&&(_.x+=5*e.x,_.y+=5*e.y,!0)},this.update=function(){const t=function(){const e=o.parameters.sliceViewerObjectId;return o.getWorld().ObjectsListJson[e]}();let n=new e.Vector3,i=new e.Vector3;const d=new e.Vector3;let p,u=!1;if(l=o.parameters.sliceViewerDirection,void 0===t)return;let m=Array.isArray(t.volume)?t.volume[0].shape:t.volume.shape;p=t[`slice_${l}`],0===f&&(u|=c.changeLevels(t)),1===f&&(u|=c.changeZoom(t)),2===f&&(u|=c.changePan()),3===f&&(u|=c.changeSlice(t,Math.sign(v.y-y.y))),4===f&&(u|=c.changePan(),w!==b&&(_.z+=.005*(b-w),u=!0)),5===f&&(u|=c.changeLevels(t)),u|=c.changeSlice(t,Math.sign(M));const x=o.getObjectById(t.id);if(!x)return;n.setFromMatrixColumn(x.matrixWorld,a[l][0]),i.setFromMatrixColumn(x.matrixWorld,a[l][1]),d.setFromMatrixColumn(x.matrixWorld,a[l][2]),"x"===l&&(n=n.negate(),p=m[2]-1-t.slice_x),"y"===l&&(n=n.negate(),p=m[1]-1-t.slice_y),"z"===l&&(i=i.negate(),n=n.negate(),p=t.volume.shape[0]-1-t.slice_z);const C=x.position.clone().sub(n.multiplyScalar(.5)).add(n.clone().multiplyScalar((2*p+.1+1)/m[s[l]]));C.add(i.clone().multiplyScalar(.5*_.y)).add(d.clone().multiplyScalar(.5*-_.x)),p=.5*i.length()/Math.tan(e.Math.degToRad(o.parameters.cameraFov/2));const S=p*(1+.5*_.z);c.object.position.copy(C.clone().add(n.clone().normalize().multiplyScalar(S))),c.object.up.copy(i.clone().normalize()),c.target.copy(C),c.object.lookAt(c.target);const A=new e.Vector3;if(A.set(t.slice_x,t.slice_y,t.slice_z),g.distanceToSquared(A)>h){const i={};if(i[`slice_${l}`]=t[`slice_${l}`],r.changeParameter(o,t,`slice_${l}`,t[`slice_${l}`],!0),r.update(o,t,o.GUI.objects,i),o.parameters.sliceViewerMaskObjectIds.length>0){const t=(new e.Plane).setFromNormalAndCoplanarPoint(n.clone().normalize(),C);o.parameters.sliceViewerMaskObjectIds.forEach(e=>{const n=o.getWorld().ObjectsListJson[e],r={};n&&(1===n.opacity&&(r.opacity=.95,n.opacity=.95),n.slice_planes=[[t.normal.x,t.normal.y,t.normal.z,t.constant-.005*S]],r.slice_planes=n.slice_planes,n.visible&&o.reload(n,r,!0))})}}M=0,g.copy(A),y.copy(v),b=w,u&&c.dispatchEvent(E)},this.reslice=function(){g.set(-1,-1,-1)},this.reset=function(){f=-1,_.set(0,0,0),x.set(0,0,0),c.dispatchEvent(E)},this.dispose=function(){i.domElement.removeEventListener("contextmenu",L),i.domElement.removeEventListener("pointerdown",T),i.domElement.removeEventListener("pointercancel",j),i.domElement.removeEventListener("wheel",I),i.domElement.removeEventListener("pointermove",k),i.domElement.removeEventListener("pointerup",O)},this.domElement.addEventListener("pointerdown",T),this.domElement.addEventListener("pointercancel",j),this.domElement.addEventListener("wheel",I,{passive:!1}),this.domElement.addEventListener("contextmenu",L),this.handleResize(),this.update()},e.SliceControls.prototype=Object.create(e.EventDispatcher.prototype),e.SliceControls.prototype.constructor=e.SliceControls}},72348:(e,t,n)=>{const r=new Float32Array(36),o=new Float32Array(8),{edgeTable:i}=n(38662),{triangleTable:a}=n(38662);e.exports=function(e,t,n,s,l,c,d,p,u,m,h,g,f,v,y){let _=0;const x=u*s*l+p*s+d;let b=0;for(o[0]=t[x],o[1]=t[x+1],o[2]=t[x+s*l+1],o[3]=t[x+s*l],o[4]=t[x+s],o[5]=t[x+s+1],o[6]=t[x+s+s*l+1],o[7]=t[x+s+s*l],d=0;d<8;d++)o[d]<n&&(_|=1<<d);const w=i[_];if(0!==w)for(1&w&&(r[0]=m+f*(n-o[0])/(o[1]-o[0]),r[1]=h,r[2]=g),2&w&&(r[3]=m+f,r[4]=h,r[5]=g+y*(n-o[1])/(o[2]-o[1])),4&w&&(r[6]=m+f*(n-o[3])/(o[2]-o[3]),r[7]=h,r[8]=g+y),8&w&&(r[9]=m,r[10]=h,r[11]=g+y*(n-o[0])/(o[3]-o[0])),16&w&&(r[12]=m+f*(n-o[4])/(o[5]-o[4]),r[13]=h+v,r[14]=g),32&w&&(r[15]=m+f,r[16]=h+v,r[17]=g+y*(n-o[5])/(o[6]-o[5])),64&w&&(r[18]=m+f*(n-o[7])/(o[6]-o[7]),r[19]=h+v,r[20]=g+y),128&w&&(r[21]=m,r[22]=h+v,r[23]=g+y*(n-o[4])/(o[7]-o[4])),256&w&&(r[24]=m,r[25]=h+v*(n-o[0])/(o[4]-o[0]),r[26]=g),512&w&&(r[27]=m+f,r[28]=h+v*(n-o[1])/(o[5]-o[1]),r[29]=g),1024&w&&(r[30]=m+f,r[31]=h+v*(n-o[2])/(o[6]-o[2]),r[32]=g+y),2048&w&&(r[33]=m,r[34]=h+v*(n-o[3])/(o[7]-o[3]),r[35]=g+y),_<<=4,d=0;-1!==a[_+d];d++)b=3*a[_+d],e.push(r[b]),e.push(r[b+1]),e.push(r[b+2])}},72931:(e,t,n)=>{const{setupUpVector:r}=n(31543);e.exports=function(e){e.OrbitControls=function(t,n,o){this.domElement=void 0!==n?n:window.document,this.object=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new e.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:e.MOUSE.ROTATE,MIDDLE:e.MOUSE.DOLLY,RIGHT:e.MOUSE.PAN},this.touches={ONE:e.TOUCH.ROTATE,TWO:e.TOUCH.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return u.phi},this.getAzimuthalAngle=function(){return u.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(e){e.addEventListener("keydown",Z),this._domElementKeyEvents=e},this.saveState=function(){i.target0.copy(i.target),i.position0.copy(i.object.position),i.zoom0=i.object.zoom},this.reset=function(){i.target.copy(i.target0),i.object.position.copy(i.position0),i.object.zoom=i.zoom0,i.object.updateProjectionMatrix(),i.dispatchEvent(a),i.update(),d=c.NONE},this.update=function(){const n=new e.Vector3;r(t,o.parameters.cameraUpAxis);const s=(new e.Quaternion).setFromUnitVectors(t.up,new e.Vector3(0,1,0)),l=s.clone().invert(),v=new e.Vector3,y=new e.Quaternion,_=2*Math.PI;return function(){const e=i.object.position;n.copy(e).sub(i.target),n.applyQuaternion(s),u.setFromVector3(n),i.autoRotate&&d===c.NONE&&z(2*Math.PI/60/60*i.autoRotateSpeed),i.enableDamping?(u.theta+=m.theta*i.dampingFactor,u.phi+=m.phi*i.dampingFactor):(u.theta+=m.theta,u.phi+=m.phi);let t=i.minAzimuthAngle,r=i.maxAzimuthAngle;return isFinite(t)&&isFinite(r)&&(t<-Math.PI?t+=_:t>Math.PI&&(t-=_),r<-Math.PI?r+=_:r>Math.PI&&(r-=_),u.theta=t<=r?Math.max(t,Math.min(r,u.theta)):u.theta>(t+r)/2?Math.max(t,u.theta):Math.min(r,u.theta)),u.phi=Math.max(i.minPolarAngle,Math.min(i.maxPolarAngle,u.phi)),u.makeSafe(),u.radius*=h,u.radius=Math.max(i.minDistance,Math.min(i.maxDistance,u.radius)),!0===i.enableDamping?i.target.addScaledVector(g,i.dampingFactor):i.target.add(g),n.setFromSpherical(u),n.applyQuaternion(l),e.copy(i.target).add(n),i.object.lookAt(i.target),!0===i.enableDamping?(m.theta*=1-i.dampingFactor,m.phi*=1-i.dampingFactor,g.multiplyScalar(1-i.dampingFactor)):(m.set(0,0,0),g.set(0,0,0)),h=1,!!(f||v.distanceToSquared(i.object.position)>p||8*(1-y.dot(i.object.quaternion))>p)&&(i.dispatchEvent(a),v.copy(i.object.position),y.copy(i.object.quaternion),f=!1,!0)}}(),this.dispose=function(){i.domElement.removeEventListener("contextmenu",$),i.domElement.removeEventListener("pointerdown",G),i.domElement.removeEventListener("pointercancel",Y),i.domElement.removeEventListener("wheel",X),i.domElement.removeEventListener("pointermove",K),i.domElement.removeEventListener("pointerup",H),null!==i._domElementKeyEvents&&i._domElementKeyEvents.removeEventListener("keydown",Z)};const i=this,a={type:"change"},s={type:"start"},l={type:"end"};var c={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let d=c.NONE;const p=1e-6,u=new e.Spherical,m=new e.Spherical;let h=1;const g=new e.Vector3;let f=!1;const v=new e.Vector2,y=new e.Vector2,_=new e.Vector2,x=new e.Vector2,b=new e.Vector2,w=new e.Vector2,M=new e.Vector2,E=new e.Vector2,C=new e.Vector2,S=[],A={};function P(){return Math.pow(.95,i.zoomSpeed)}function z(e){m.theta-=e}function D(e){m.phi-=e}const T=function(){const t=new e.Vector3;return function(e,n){t.setFromMatrixColumn(n,0),t.multiplyScalar(-e),g.add(t)}}(),k=function(){const t=new e.Vector3;return function(e,n){!0===i.screenSpacePanning?t.setFromMatrixColumn(n,1):(t.setFromMatrixColumn(n,0),t.crossVectors(i.object.up,t)),t.multiplyScalar(e),g.add(t)}}(),O=function(){const t=new e.Vector3;return function(e,n){const r=i.domElement;if(i.object.isPerspectiveCamera){const o=i.object.position;t.copy(o).sub(i.target);let a=t.length();a*=Math.tan(i.object.fov/2*Math.PI/180),T(2*e*a/r.clientHeight,i.object.matrix),k(2*n*a/r.clientHeight,i.object.matrix)}else i.object.isOrthographicCamera?(T(e*(i.object.right-i.object.left)/i.object.zoom/r.clientWidth,i.object.matrix),k(n*(i.object.top-i.object.bottom)/i.object.zoom/r.clientHeight,i.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),i.enablePan=!1)}}();function j(e){i.object.isPerspectiveCamera?h/=e:i.object.isOrthographicCamera?(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom*e)),i.object.updateProjectionMatrix(),f=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function I(e){i.object.isPerspectiveCamera?h*=e:i.object.isOrthographicCamera?(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom/e)),i.object.updateProjectionMatrix(),f=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function L(e){v.set(e.clientX,e.clientY)}function F(e){x.set(e.clientX,e.clientY)}function V(){if(1===S.length)v.set(S[0].pageX,S[0].pageY);else{const e=.5*(S[0].pageX+S[1].pageX),t=.5*(S[0].pageY+S[1].pageY);v.set(e,t)}}function R(){if(1===S.length)x.set(S[0].pageX,S[0].pageY);else{const e=.5*(S[0].pageX+S[1].pageX),t=.5*(S[0].pageY+S[1].pageY);x.set(e,t)}}function B(){const e=S[0].pageX-S[1].pageX,t=S[0].pageY-S[1].pageY,n=Math.sqrt(e*e+t*t);M.set(0,n)}function U(e){if(1==S.length)y.set(e.pageX,e.pageY);else{const t=J(e),n=.5*(e.pageX+t.x),r=.5*(e.pageY+t.y);y.set(n,r)}_.subVectors(y,v).multiplyScalar(i.rotateSpeed);const t=i.domElement;z(2*Math.PI*_.x/t.clientHeight),D(2*Math.PI*_.y/t.clientHeight),v.copy(y)}function N(e){if(1===S.length)b.set(e.pageX,e.pageY);else{const t=J(e),n=.5*(e.pageX+t.x),r=.5*(e.pageY+t.y);b.set(n,r)}w.subVectors(b,x).multiplyScalar(i.panSpeed),O(w.x,w.y),x.copy(b)}function W(e){const t=J(e),n=e.pageX-t.x,r=e.pageY-t.y,o=Math.sqrt(n*n+r*r);E.set(0,o),C.set(0,Math.pow(E.y/M.y,i.zoomSpeed)),j(C.y),M.copy(E)}function G(t){!1!==i.enabled&&(0===S.length&&(i.domElement.setPointerCapture(t.pointerId),i.domElement.addEventListener("pointermove",K),i.domElement.addEventListener("pointerup",H)),function(e){S.push(e)}(t),"touch"===t.pointerType?function(t){switch(Q(t),S.length){case 1:switch(i.touches.ONE){case e.TOUCH.ROTATE:if(!1===i.enableRotate)return;V(),d=c.TOUCH_ROTATE;break;case e.TOUCH.PAN:if(!1===i.enablePan)return;R(),d=c.TOUCH_PAN;break;default:d=c.NONE}break;case 2:switch(i.touches.TWO){case e.TOUCH.DOLLY_PAN:if(!1===i.enableZoom&&!1===i.enablePan)return;i.enableZoom&&B(),i.enablePan&&R(),d=c.TOUCH_DOLLY_PAN;break;case e.TOUCH.DOLLY_ROTATE:if(!1===i.enableZoom&&!1===i.enableRotate)return;i.enableZoom&&B(),i.enableRotate&&V(),d=c.TOUCH_DOLLY_ROTATE;break;default:d=c.NONE}break;default:d=c.NONE}d!==c.NONE&&i.dispatchEvent(s)}(t):function(t){let n;switch(t.button){case 0:n=i.mouseButtons.LEFT;break;case 1:n=i.mouseButtons.MIDDLE;break;case 2:n=i.mouseButtons.RIGHT;break;default:n=-1}switch(n){case e.MOUSE.DOLLY:if(!1===i.enableZoom)return;!function(e){M.set(e.clientX,e.clientY)}(t),d=c.DOLLY;break;case e.MOUSE.ROTATE:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===i.enablePan)return;F(t),d=c.PAN}else{if(!1===i.enableRotate)return;L(t),d=c.ROTATE}break;case e.MOUSE.PAN:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===i.enableRotate)return;L(t),d=c.ROTATE}else{if(!1===i.enablePan)return;F(t),d=c.PAN}break;default:d=c.NONE}d!==c.NONE&&i.dispatchEvent(s)}(t))}function K(e){!1!==i.enabled&&("touch"===e.pointerType?function(e){switch(Q(e),d){case c.TOUCH_ROTATE:if(!1===i.enableRotate)return;U(e),i.update();break;case c.TOUCH_PAN:if(!1===i.enablePan)return;N(e),i.update();break;case c.TOUCH_DOLLY_PAN:if(!1===i.enableZoom&&!1===i.enablePan)return;!function(e){i.enableZoom&&W(e),i.enablePan&&N(e)}(e),i.update();break;case c.TOUCH_DOLLY_ROTATE:if(!1===i.enableZoom&&!1===i.enableRotate)return;!function(e){i.enableZoom&&W(e),i.enableRotate&&U(e)}(e),i.update();break;default:d=c.NONE}}(e):function(e){if(!1!==i.enabled)switch(d){case c.ROTATE:if(!1===i.enableRotate)return;!function(e){y.set(e.clientX,e.clientY),_.subVectors(y,v).multiplyScalar(i.rotateSpeed);const t=i.domElement;z(2*Math.PI*_.x/t.clientHeight),D(2*Math.PI*_.y/t.clientHeight),v.copy(y),i.update()}(e);break;case c.DOLLY:if(!1===i.enableZoom)return;!function(e){E.set(e.clientX,e.clientY),C.subVectors(E,M),C.y>0?j(P()):C.y<0&&I(P()),M.copy(E),i.update()}(e);break;case c.PAN:if(!1===i.enablePan)return;!function(e){b.set(e.clientX,e.clientY),w.subVectors(b,x).multiplyScalar(i.panSpeed),O(w.x,w.y),x.copy(b),i.update()}(e)}}(e))}function H(e){!1!==i.enabled&&(e.pointerType,i.dispatchEvent(l),d=c.NONE,q(e),0===S.length&&(i.domElement.releasePointerCapture(e.pointerId),i.domElement.removeEventListener("pointermove",K),i.domElement.removeEventListener("pointerup",H)))}function Y(e){q(e)}function X(e){!1!==i.enabled&&!1!==i.enableZoom&&d===c.NONE&&(e.preventDefault(),i.dispatchEvent(s),function(e){e.deltaY<0?I(P()):e.deltaY>0&&j(P()),i.update()}(e),i.dispatchEvent(l))}function Z(e){!1!==i.enabled&&!1!==i.enablePan&&function(e){let t=!1;switch(e.code){case i.keys.UP:O(0,i.keyPanSpeed),t=!0;break;case i.keys.BOTTOM:O(0,-i.keyPanSpeed),t=!0;break;case i.keys.LEFT:O(i.keyPanSpeed,0),t=!0;break;case i.keys.RIGHT:O(-i.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),i.update())}(e)}function $(e){!1!==i.enabled&&e.preventDefault()}function q(e){delete A[e.pointerId];for(let t=0;t<S.length;t++)if(S[t].pointerId==e.pointerId)return void S.splice(t,1)}function Q(t){let n=A[t.pointerId];void 0===n&&(n=new e.Vector2,A[t.pointerId]=n),n.set(t.pageX,t.pageY)}function J(e){const t=e.pointerId===S[0].pointerId?S[1]:S[0];return A[t.pointerId]}i.domElement.addEventListener("contextmenu",$),i.domElement.addEventListener("pointerdown",G),i.domElement.addEventListener("pointercancel",Y),i.domElement.addEventListener("wheel",X,{passive:!1}),this.update()},e.OrbitControls.prototype=Object.create(e.EventDispatcher.prototype),e.OrbitControls.prototype.constructor=e.OrbitControls}},73380:(e,t,n)=>{const{viewModes:r}=n(69358),o={translate:"translate",scale:"scale",rotate:"rotate"};e.exports={refreshManipulateGUI(e,t){t.controls.controllers.forEach(t=>{"manipulateMode"===t.property&&(t.domElement.hidden=e.parameters.viewMode!==r.manipulate,t.updateDisplay())})},manipulateGUI(e,t,n){e.add(t.parameters,"manipulateMode",{Translate:o.translate,Rotate:o.rotate,Scale:o.scale}).name("Manipulate mode").onChange(e=>{t.setManipulateMode(e),n("manipulate_mode",e)})},manipulateModes:o}},74094:(e,t,n)=>{const r=n(6101),o=n(80228),i=n(76749),a=n(69522),s=n(7659),l=n(92367),c=n(98947),{areAllChangesResolve:d}=c,{commonUpdate:p}=c,{getColorsArray:u}=c;e.exports={create(e,t){e.shininess=void 0!==e.shininess?e.shininess:50;const d=new r.Matrix4,p=new r.Color(e.color),m=e.positions.data,h=e.colors&&e.colors.data||null,g=void 0!==e.mesh_detail?e.mesh_detail:2;let f;const v=e.opacities&&e.opacities.data&&e.opacities.data.length===m.length/3?e.opacities.data:null,y=e.point_sizes&&e.point_sizes.data&&e.point_sizes.data.length===m.length/3?e.point_sizes.data:null,{colorsToFloat32Array:_}=o,x=r.ShaderLib.phong;let b;const w=new r.BufferGeometry,M=new r.IcosahedronBufferGeometry(.5*e.point_size,g),E=e.color_map&&e.color_map.data||null;let C=e.opacity_function&&e.opacity_function.data||null;const S=e.color_range,A=e.attribute&&e.attribute.data||null;let P={},z=0;if(A&&S&&E&&A.length>0&&S.length>0&&E.length>0){z=1,null!==C&&0!==C.length||(C=[E[0],1,E[E.length-4],1],e.opacity_function={data:C,shape:[4]});const t=i.createCanvasGradient(E,1024,1,C),n=new r.CanvasTexture(t,r.UVMapping,r.ClampToEdgeWrapping,r.ClampToEdgeWrapping,r.NearestFilter,r.NearestFilter);n.needsUpdate=!0,P={low:{value:S[0]},high:{value:S[1]},colormap:{type:"t",value:n}},M.setAttribute("attributes",new r.InstancedBufferAttribute(A,1).setUsage(r.DynamicDrawUsage))}else f=h&&h.length===m.length/3?_(h):u(p,m.length/3);M.setAttribute("color",new r.InstancedBufferAttribute(new Float32Array(f),3)),v&&M.setAttribute("opacities",new r.InstancedBufferAttribute(v,1)),w.setAttribute("position",new r.BufferAttribute(m,3)),w.computeBoundingSphere(),w.computeBoundingBox(),c.expandBoundingBox(w.boundingBox,.5*e.point_size),M.boundingBox=w.boundingBox.clone();const D=new r.ShaderMaterial({uniforms:r.UniformsUtils.merge([x.uniforms,{shininess:{value:e.shininess},opacity:{value:e.opacity}},P]),defines:{USE_PER_POINT_OPACITY:null!==v?1:0,USE_COLOR_MAP:z},vertexShader:n(22146),fragmentShader:n(81984),lights:!0,clipping:!0,vertexColors:r.VertexColors});0===t.parameters.depthPeels?(D.depthWrite=1===e.opacity&&null===v,D.transparent=1!==e.opacity||null!==v):(D.onBeforeCompile=t.colorOnBeforeCompile,D.blending=r.NoBlending);const T=new r.InstancedMesh(M,D,m.length/3);T.instanceMatrix.setUsage(r.DynamicDrawUsage);let k=new r.BufferGeometry;for(k.setAttribute("position",new r.BufferAttribute(m,3)),d.set.apply(d,e.model_matrix.data),T.applyMatrix4(d),T.updateMatrixWorld(),a.init(e,T,t,s,l.prepareGeometry(k),l.Intersect),b=0;b<m.length/3;b++){const e=y&&y[b]||1;T.setMatrixAt(b,(new r.Matrix4).identity().setPosition(m[3*b],m[3*b+1],m[3*b+2]).scale(new r.Vector3(e,e,e)))}return Promise.resolve(T)},update(e,t,n,o){const c={};if(void 0!==t.positions&&!t.positions.timeSeries&&t.positions.data.length/3===n.instanceMatrix.count){const i=t.positions.data;for(let t=0;t<i.length/3;t++){const o=e.sizes&&e.sizes[t]||1;n.setMatrixAt(t,(new r.Matrix4).identity().setPosition(i[3*t],i[3*t+1],i[3*t+2]).scale(new r.Vector3(o,o,o)))}if(n.interactions){n.stopInteraction();let t=new r.BufferGeometry;t.setAttribute("position",new r.BufferAttribute(i,3)),a.init(e,n,o,s,l.prepareGeometry(t),l.Intersect)}n.instanceMatrix.needsUpdate=!0,c.positions=null}if((void 0!==t.color_map&&!t.color_map.timeSeries||void 0!==t.opacity_function&&!t.opacity_function.timeSeries)&&n.geometry.attributes.attributes){const r=i.createCanvasGradient(t.color_map&&t.color_map.data||e.color_map.data,1024,1,t.opacity_function&&t.opacity_function.data||e.opacity_function.data);n.material.uniforms.colormap.value.image=r,n.material.uniforms.colormap.value.needsUpdate=!0,c.color_map=null,c.opacity_function=null}return void 0!==t.color_range&&!t.color_range.timeSeries&&n.geometry.attributes.attributes&&(n.material.uniforms.low.value=t.color_range[0],n.material.uniforms.high.value=t.color_range[1],c.color_range=null),void 0!==t.attribute&&!t.attribute.timeSeries&&n.geometry.attributes.attributes&&t.attribute.data.length===n.geometry.attributes.attributes.array.length&&(n.geometry.attributes.attributes.array.set(t.attribute.data),n.geometry.attributes.attributes.needsUpdate=!0,c.attribute=null),a.update(e,t,c,n),p(e,t,c,n,o),!!d(t,c)&&Promise.resolve({json:e,obj:n})}}},74109:(e,t,n)=>{const r=n(6101),o=n(69522),i=n(76749),{areAllChangesResolve:a}=n(98947),{commonUpdate:s}=n(98947),{typedArrayToThree:l}=n(98947);e.exports={create:(e,t)=>new Promise(a=>{const s=new r.PlaneBufferGeometry(1,1),c=new r.Matrix4,d=e.color_map&&e.color_map.data||null;let p=e.opacity_function&&e.opacity_function.data||null;const u=e.color_range;e.interpolation=void 0===e.interpolation||e.interpolation,null!==p&&0!==p.length||(p=[d[0],1,d[d.length-4],1],e.opacity_function={data:p,shape:[4]});const m=new r.DataTexture(e.attribute.data,e.attribute.shape[1],e.attribute.shape[0],r.RedFormat,l(e.attribute.data.constructor));e.interpolation?(m.minFilter=r.LinearFilter,m.magFilter=r.LinearFilter,m.anisotropy=t.getWorld().renderer.capabilities.getMaxAnisotropy()):(m.minFilter=r.NearestFilter,m.magFilter=r.NearestFilter,m.anisotropy=0),m.generateMipmaps=!1,m.needsUpdate=!0;const h=i.createCanvasGradient(d,1024,1,p),g=new r.CanvasTexture(h,r.UVMapping,r.ClampToEdgeWrapping,r.ClampToEdgeWrapping,r.NearestFilter,r.NearestFilter);g.needsUpdate=!0;const f={low:{value:u[0]},high:{value:u[1]},map:{type:"t",value:m},colormap:{type:"t",value:g}},v=new r.ShaderMaterial({uniforms:f,vertexShader:n(62141),fragmentShader:n(68479),side:r.DoubleSide,clipping:!0});if(0===t.parameters.depthPeels?(v.depthWrite=1===e.opacity&&null===p,v.transparent=1!==e.opacity||null!==p):v.onBeforeCompile=t.colorOnBeforeCompile,9===e.puv.data.length){const t=s.attributes.position.array,n=(new r.Vector3).fromArray(e.puv.data,0),o=(new r.Vector3).fromArray(e.puv.data,3),i=(new r.Vector3).fromArray(e.puv.data,6);n.toArray(t,0),n.clone().add(o).toArray(t,3),n.clone().add(i).toArray(t,6),n.clone().add(i).add(o).toArray(t,9),s.computeVertexNormals()}s.computeBoundingSphere(),s.computeBoundingBox();const y=new r.Mesh(s,v);o.init(e,y,t),c.set.apply(c,e.model_matrix.data),y.applyMatrix4(c),y.updateMatrixWorld(),y.onRemove=function(){y.material.uniforms.map.value.dispose(),y.material.uniforms.map.value=void 0,y.material.uniforms.colormap.value.dispose(),y.material.uniforms.colormap.value=void 0},a(y)}),update(e,t,n,r){const l={};if(o.update(e,t,l,n),void 0===t.color_range||t.color_range.timeSeries||(n.material.uniforms.low.value=t.color_range[0],n.material.uniforms.high.value=t.color_range[1],l.color_range=null),(void 0!==t.color_map&&!t.color_map.timeSeries||void 0!==t.opacity_function&&!t.opacity_function.timeSeries)&&(!t.opacity_function||!1!==n.material.transparent)){const r=i.createCanvasGradient(t.color_map&&t.color_map.data||e.color_map.data,1024,1,t.opacity_function&&t.opacity_function.data||e.opacity_function.data);n.material.uniforms.colormap.value.image=r,n.material.uniforms.colormap.value.needsUpdate=!0,l.color_map=null,l.opacity_function=null}return void 0===t.attribute||t.attribute.timeSeries||n.material.uniforms.map.value.image.data.constructor===t.attribute.data.constructor&&n.material.uniforms.map.value.image.width===t.attribute.shape[1]&&n.material.uniforms.map.value.image.height===t.attribute.shape[0]&&(n.material.uniforms.map.value.image.data=t.attribute.data,n.material.uniforms.map.value.needsUpdate=!0,l.attribute=null),s(e,t,l,n,r),!!a(t,l)&&Promise.resolve({json:e,obj:n})}}},74340:e=>{"use strict";e.exports="uniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\n#ifndef FLAT_SHADED\r\n\r\nvarying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <uv2_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <envmap_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <specularmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvarying float vectorVisible;\r\n\r\nvoid main() {\r\n\r\n    if (vectorVisible == 0.0) {\r\n        discard;\r\n    }\r\n\r\n    #include <clipping_planes_fragment>\r\n\r\n    vec4 diffuseColor = vec4(diffuse, opacity);\r\n\r\n    #include <logdepthbuf_fragment>\r\n    #include <map_fragment>\r\n    #include <color_fragment>\r\n    #include <alphamap_fragment>\r\n    #include <alphatest_fragment>\r\n    #include <specularmap_fragment>\r\n\r\n    ReflectedLight reflectedLight = ReflectedLight(vec3(0.0), vec3(0.0), vec3(0.0), vec3(0.0));\r\n\r\n    // accumulation (baked indirect lighting only)\r\n    #ifdef USE_LIGHTMAP\r\n\r\n    reflectedLight.indirectDiffuse += texture2D(lightMap, vUv2).xyz * lightMapIntensity;\r\n\r\n    #else\r\n\r\n    reflectedLight.indirectDiffuse += vec3(1.0);\r\n\r\n    #endif\r\n\r\n    // modulation\r\n    #include <aomap_fragment>\r\n\r\n    reflectedLight.indirectDiffuse *= diffuseColor.rgb;\r\n\r\n    vec3 outgoingLight = reflectedLight.indirectDiffuse;\r\n\r\n    #include <envmap_fragment>\r\n\r\n    gl_FragColor = vec4(outgoingLight, diffuseColor.a);\r\n\r\n    #include <premultiplied_alpha_fragment>\r\n    #include <tonemapping_fragment>\r\n    #include <encodings_fragment>\r\n    #include <fog_fragment>\r\n\r\n}\r\n"},74405:(e,t,n)=>{const{setupUpVector:r}=n(31543);e.exports=function(e){e.TrackballControls=function(t,n,o){const i=this,a=-1;let s,l;this.object=t,void 0!==n?(s=n.ownerDocument.defaultView||n.ownerDocument.parentWindow,this.domElement=n,l=n.ownerDocument):(s=window,this.domElement=s.document,l=s.document),this.domElement.style.touchAction="none",this.enabled=!0,this.screen={left:0,top:0,width:0,height:0},this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=1/0,this.mouseButtons={LEFT:e.MOUSE.ROTATE,MIDDLE:e.MOUSE.DOLLY,RIGHT:e.MOUSE.PAN},this.target=new e.Vector3;const c=1e-10,d=new e.Vector3,p=new e.Vector3;let u=1,m=a,h=a,g=0,f=0,v=0;const y=new e.Vector3,_=new e.Vector2,x=new e.Vector2,b=new e.Vector3,w=new e.Vector2,M=new e.Vector2,E=new e.Vector2,C=new e.Vector2;this._pointerPositions={},this._pointers=[],this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.up0=this.object.up.clone(),this.zoom0=this.object.zoom;const S={type:"change"},A={type:"start"},P={type:"end"};this.handleResize=function(){if(this.domElement===l)this.screen.left=0,this.screen.top=0,this.screen.width=s.innerWidth,this.screen.height=s.innerHeight;else{const e=i.domElement.getBoundingClientRect(),t=i.domElement.ownerDocument.documentElement;this.screen.left=e.left+s.pageXOffset-t.clientLeft,this.screen.top=e.top+s.pageYOffset-t.clientTop,this.screen.width=e.width,this.screen.height=e.height}};const z=function(){const t=new e.Vector2;return function(e,n){return t.set(e/i.screen.width,n/i.screen.height),t}}(),D=function(){const t=new e.Vector2;return function(e,n){return t.set((e-.5*i.screen.width)/(.5*i.screen.width),(i.screen.height-2*n)/i.screen.width),t}}();function T(e){!1!==i.enabled&&(0===i._pointers.length&&(i.domElement.setPointerCapture(e.pointerId),i.domElement.addEventListener("pointermove",k),i.domElement.addEventListener("pointerup",O)),function(e){i._pointers.push(e)}(e),"touch"===e.pointerType?function(e){if(1===(B(e),i._pointers.length))m=3,x.copy(D(i._pointers[0].pageX,i._pointers[0].pageY)),_.copy(x);else{m=4;const e=i._pointers[0].pageX-i._pointers[1].pageX,t=i._pointers[0].pageY-i._pointers[1].pageY;f=g=Math.sqrt(e*e+t*t);const n=(i._pointers[0].pageX+i._pointers[1].pageX)/2,r=(i._pointers[0].pageY+i._pointers[1].pageY)/2;E.copy(z(n,r)),C.copy(E)}i.dispatchEvent(A)}(e):function(e){if(m===a)switch(e.button){case i.mouseButtons.LEFT:m=0;break;case i.mouseButtons.MIDDLE:m=1;break;case i.mouseButtons.RIGHT:m=2;break;default:m=a}const t=h!==a?h:m;0!==t||i.noRotate?1!==t||i.noZoom?2!==t||i.noPan||(E.copy(z(e.offsetX,e.offsetY)),C.copy(E)):(w.copy(z(e.offsetX,e.offsetY)),M.copy(w)):(x.copy(D(e.offsetX,e.offsetY)),_.copy(x)),i.dispatchEvent(A)}(e))}function k(e){!1!==i.enabled&&("touch"===e.pointerType?function(e){switch(B(e),i._pointers.length){case 0:break;case 1:_.copy(x),x.copy(D(e.offsetX,e.offsetY));break;default:const t=function(e){const t=e.pointerId===i._pointers[0].pointerId?i._pointers[1]:i._pointers[0];return i._pointerPositions[t.pointerId]}(e),n=e.offsetX-t.x,r=e.offsetY-t.y;f=Math.sqrt(n*n+r*r);const o=(e.offsetX+t.x)/2,a=(e.offsetY+t.y)/2;C.copy(z(o,a))}}(e):function(e){if(!1===i.enabled)return;const t=h!==a?h:m;0!==t||i.noRotate?1!==t||i.noZoom?2!==t||i.noPan||C.copy(z(e.offsetX,e.offsetY)):M.copy(z(e.offsetX,e.offsetY)):(_.copy(x),x.copy(D(e.offsetX,e.offsetY)))}(e))}function O(e){!1!==i.enabled&&("touch"===e.pointerType?function(e){switch(i._pointers.length){case 0:m=a;break;case 1:m=3,x.copy(D(e.offsetX,e.offsetY)),_.copy(x);break;case 2:m=4,x.copy(D(e.offsetX-_.pageX,e.offsetY-_.pageY)),_.copy(x)}i.dispatchEvent(P)}(e):(m=a,i.dispatchEvent(P)),R(e),0===i._pointers.length&&(i.domElement.releasePointerCapture(e.pointerId),i.domElement.removeEventListener("pointermove",k),i.domElement.removeEventListener("pointerup",O)))}function j(e){R(e)}function I(e){!1!==i.enabled&&(s.removeEventListener("keydown",I),h!==a||(e.ctrlKey&&!i.noRotate?h=0:e.altKey&&!i.noZoom?h=1:e.shiftKey&&!i.noPan&&(h=2)))}function L(){!1!==i.enabled&&(h=a,s.addEventListener("keydown",I))}function F(e){if(!1!==i.enabled&&!0!==i.noZoom){switch(e.preventDefault(),e.deltaMode){case 2:w.y-=.025*e.deltaY;break;case 1:w.y-=.01*e.deltaY;break;default:w.y-=25e-5*e.deltaY}i.dispatchEvent(A),i.dispatchEvent(P)}}function V(e){!1!==i.enabled&&e.preventDefault()}function R(e){delete i._pointerPositions[e.pointerId];for(let t=0;t<i._pointers.length;t++)if(i._pointers[t].pointerId==e.pointerId)return void i._pointers.splice(t,1)}function B(t){let n=i._pointerPositions[t.pointerId];void 0===n&&(n=new e.Vector2,i._pointerPositions[t.pointerId]=n),n.set(t.offsetX,t.offsetY)}this.rotateCamera=function(){const t=new e.Vector3,n=new e.Quaternion,r=new e.Vector3,o=new e.Vector3,a=new e.Vector3,s=new e.Vector3;return function(){s.set(x.x-_.x,x.y-_.y,0);let e=s.length();e?(y.copy(i.object.position).sub(i.target),r.copy(y).normalize(),o.copy(i.object.up).normalize(),a.crossVectors(o,r).normalize(),o.setLength(x.y-_.y),a.setLength(x.x-_.x),s.copy(o.add(a)),t.crossVectors(s,y).normalize(),e*=i.rotateSpeed,n.setFromAxisAngle(t,e),y.applyQuaternion(n),i.object.up.applyQuaternion(n),b.copy(t),v=e):!i.staticMoving&&v&&(v*=Math.sqrt(1-i.dynamicDampingFactor),y.copy(i.object.position).sub(i.target),n.setFromAxisAngle(b,v),y.applyQuaternion(n),i.object.up.applyQuaternion(n)),_.copy(x)}}(),this.zoomCamera=function(){let e;if(4===m)e=g/f,g=f,i.object.isPerspectiveCamera?y.multiplyScalar(e):i.object.isOrthographicCamera?(i.object.zoom*=e,i.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type");else{if(i.flyMode||2===m||2===h)return;e=1+(M.y-w.y)*i.zoomSpeed,1!==e&&e>0&&(i.object.isPerspectiveCamera?y.multiplyScalar(e):i.object.isOrthographicCamera?(i.object.zoom/=e,i.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")),i.staticMoving?w.copy(M):w.y+=(M.y-w.y)*i.dynamicDampingFactor}},this.panCamera=function(){const t=new e.Vector3,n=new e.Vector3,r=new e.Vector3,o=new e.Vector3;return function(){if(t.copy(C).sub(E),t.z=0,(i.flyMode||2===m||2===h)&&(t.z=(M.y-w.y)*i.panSpeed*10,i.staticMoving?w.copy(M):w.y+=(M.y-w.y)*i.dynamicDampingFactor),t.lengthSq()){if(i.object.isOrthographicCamera){const e=(i.object.right-i.object.left)/i.object.zoom/i.domElement.clientWidth,n=(i.object.top-i.object.bottom)/i.object.zoom/i.domElement.clientWidth;t.x*=e,t.y*=n}t.multiplyScalar(y.length()*i.panSpeed),o.copy(y).cross(i.object.up).setLength(t.x),o.add(n.copy(i.object.up).setLength(t.y)),o.add(r.copy(y).setLength(t.z)),i.object.position.add(o),i.target.add(o),i.staticMoving?E.copy(C):E.add(t.subVectors(C,E).multiplyScalar(i.dynamicDampingFactor))}}}(),this.checkDistances=function(){i.noZoom&&i.noPan||(y.lengthSq()>i.maxDistance*i.maxDistance&&(i.object.position.addVectors(i.target,y.setLength(i.maxDistance)),w.copy(M)),y.lengthSq()<i.minDistance*i.minDistance&&(i.object.position.addVectors(i.target,y.setLength(i.minDistance)),w.copy(M)))},this.update=function(e){r(i.object,o.parameters.cameraUpAxis),y.subVectors(i.object.position,i.target),i.noRotate||i.rotateCamera(),i.noZoom||i.zoomCamera(),i.noPan||i.panCamera(),i.object.position.addVectors(i.target,y),i.object.isPerspectiveCamera?(i.checkDistances(),i.object.lookAt(i.target),(d.distanceToSquared(i.object.position)>c||p.distanceToSquared(i.object.up)>c)&&(d.copy(i.object.position),p.copy(i.object.up),e||i.dispatchEvent(S),d.copy(i.object.position))):i.object.isOrthographicCamera?(i.object.lookAt(i.target),(d.distanceToSquared(i.object.position)>c||u!==i.object.zoom)&&(e||i.dispatchEvent(S),d.copy(i.object.position),u=i.object.zoom)):console.warn("THREE.TrackballControls: Unsupported camera type")},this.reset=function(){m=a,h=a,i.target.copy(i.target0),i.object.position.copy(i.position0),i.object.up.copy(i.up0),i.object.zoom=i.zoom0,i.object.updateProjectionMatrix(),y.subVectors(i.object.position,i.target),i.object.lookAt(i.target),i.dispatchEvent(S),d.copy(i.object.position),p.copy(i.object.up),u=i.object.zoom},this.dispose=function(){i.domElement.removeEventListener("contextmenu",V),i.domElement.removeEventListener("pointerdown",T),i.domElement.removeEventListener("pointercancel",j),i.domElement.removeEventListener("wheel",F),i.domElement.removeEventListener("pointermove",k),i.domElement.removeEventListener("pointerup",O),l.removeEventListener("keydown",I),l.removeEventListener("keyup",L)},this.domElement.addEventListener("pointerdown",T),this.domElement.addEventListener("pointercancel",j),this.domElement.addEventListener("wheel",F,{passive:!1}),this.domElement.addEventListener("contextmenu",V),l.addEventListener("keydown",I),l.addEventListener("keyup",L),this.handleResize(),this.update()},e.TrackballControls.prototype=Object.create(e.EventDispatcher.prototype),e.TrackballControls.prototype.constructor=e.TrackballControls}},74490:e=>{"use strict";e.exports="varying vec2 vUv;\r\n\r\nvoid main(){\r\n    vUv = uv;\r\n    gl_Position = vec4(position.xy, 0., 1.);\r\n}"},75418:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(85072),o=n.n(r),i=n(97825),a=n.n(i),s=n(77659),l=n.n(s),c=n(55056),d=n.n(c),p=n(10540),u=n.n(p),m=n(41113),h=n.n(m),g=n(68515),f={};f.styleTagTransform=h(),f.setAttributes=d(),f.insert=l().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=u(),o()(g.A,f);const v=g.A&&g.A.locals?g.A.locals:void 0},75527:e=>{"use strict";e.exports="//precision highp sampler3D;\r\n//\r\n//uniform sampler2D colormap;\r\n//uniform sampler3D volumeTexture;\r\n//uniform float low;\r\n//uniform float high;\r\n//uniform float opacity;\r\n//\r\n//varying vec3 localPosition;\r\n//\r\n//#include <common>\r\n//#include <dithering_pars_fragment>\r\n//#include <clipping_planes_pars_fragment>\r\n//#include <logdepthbuf_pars_fragment>\r\n//\r\n//void main() {\r\n//\r\n//    #include <clipping_planes_fragment>\r\n//    #include <logdepthbuf_fragment>\r\n//\r\n//    float inv_range = 1.0 / (high - low);\r\n//    float px = texture(volumeTexture, localPosition).x;\r\n//    float scaled_px = (px - low) * inv_range;\r\n//\r\n//    scaled_px = max(min(scaled_px, 0.99), 0.01);\r\n//    vec4 texelColor = texture(colormap, vec2(scaled_px, 0.5));\r\n//\r\n//    texelColor.a *= opacity;\r\n//\r\n//    gl_FragColor = texelColor;\r\n//\r\n//    #include <premultiplied_alpha_fragment>\r\n//    #include <dithering_fragment>\r\n//}\r\n//\r\n//\r\n\r\nuniform vec3 diffuse;\r\nuniform vec3 emissive;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nprecision highp sampler3D;\r\n\r\nuniform sampler2D colormap;\r\nuniform sampler3D volumeTexture;\r\nuniform float low;\r\nuniform float high;\r\n\r\nvarying vec3 localPosition;\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <dithering_pars_fragment>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <uv2_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <emissivemap_pars_fragment>\r\n#include <envmap_common_pars_fragment>\r\n#include <envmap_pars_fragment>\r\n#include <cube_uv_reflection_fragment>\r\n#include <fog_pars_fragment>\r\n#include <bsdfs>\r\n#include <lights_pars_begin>\r\n#include <lights_phong_pars_fragment>\r\n#include <shadowmap_pars_fragment>\r\n#include <bumpmap_pars_fragment>\r\n#include <normalmap_pars_fragment>\r\n#include <specularmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n#include <normal_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n    #include <clipping_planes_fragment>\r\n\r\n    float inv_range = 1.0 / (high - low);\r\n    float px = texture(volumeTexture, localPosition).x;\r\n    float scaled_px = (px - low) * inv_range;\r\n    scaled_px = max(min(scaled_px, 0.99), 0.01);\r\n    vec4 diffuseColor = texture(colormap, vec2(scaled_px, 0.5));\r\n    diffuseColor.a *= opacity;\r\n\r\n    ReflectedLight reflectedLight = ReflectedLight(vec3(0.0), vec3(0.0), vec3(0.0), vec3(0.0));\r\n    vec3 totalEmissiveRadiance = emissive;\r\n\r\n    #include <logdepthbuf_fragment>\r\n    #include <map_fragment>\r\n    #include <color_fragment>\r\n    #include <alphamap_fragment>\r\n    #include <alphatest_fragment>\r\n    #include <specularmap_fragment>\r\n    #include <normal_fragment_begin>\r\n    #include <normal_fragment_maps>\r\n    #include <emissivemap_fragment>\r\n\r\n    // accumulation\r\n    #include <lights_phong_fragment>\r\n    #include <lights_fragment_begin>\r\n    #include <lights_fragment_maps>\r\n    #include <lights_fragment_end>\r\n\r\n    // modulation\r\n    #include <aomap_fragment>\r\n\r\n    vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\r\n\r\n    #include <envmap_fragment>\r\n\r\n    gl_FragColor = vec4(outgoingLight, diffuseColor.a);\r\n\r\n    #include <tonemapping_fragment>\r\n    #include <encodings_fragment>\r\n    #include <fog_fragment>\r\n    #include <premultiplied_alpha_fragment>\r\n    #include <dithering_fragment>\r\n\r\n}\r\n"},76575:(e,t,n)=>{const r=n(6101),o=n(98947),{areAllChangesResolve:i}=o,{commonUpdate:a}=o,{colorsToFloat32Array:s}=n(80228),l=n(61202),{handleColorMap:c}=o;e.exports={create(e,t){e.radial_segments=void 0!==e.radial_segments?e.radial_segments:8,e.width=void 0!==e.width?e.width:.1,e.opacity=void 0!==e.opacity?e.opacity:1,e.shininess=void 0!==e.shininess?e.shininess:50;const n=new r.MeshPhongMaterial({emissive:0,shininess:e.shininess,specular:1118481,side:r.DoubleSide,wireframe:!1,opacity:e.opacity,transparent:1!==e.opacity}),o=e.radial_segments,{width:i}=e;let a=e.colors&&e.colors.data||null;const d=new r.Color(e.color),p=e.color_range,u=e.color_map&&e.color_map.data||null,m=e.attribute&&e.attribute.data||null,h=new r.Matrix4,g=e.vertices.data;a&&a.length===g.length/3&&(a=s(a)),0===t.parameters.depthPeels?n.depthWrite=1===e.opacity:n.onBeforeCompile=t.colorOnBeforeCompile;const f=l(g,m,i,o,d,a,p);m&&p&&u&&m.length>0&&p.length>0&&u.length>0?c(f,u,p,null,n):n.setValues({vertexColors:r.VertexColors}),f.computeBoundingSphere(),f.computeBoundingBox(),h.set.apply(h,e.model_matrix.data);const v=new r.Mesh(f,n);return v.applyMatrix4(h),v.updateMatrixWorld(),Promise.resolve(v)},update(e,t,n,r){const o={};return a(e,t,o,n,r),!!i(t,o)&&Promise.resolve({json:e,obj:n})}}},76749:e=>{function t(e){return e>1&&(e=1),e<0&&(e=0),Math.round(255*e)}function n(e,t,n){const r={};let o,i;function a(e,t){const n=function(e,t){const n=o.indexOf(e);let i=n,a=n;for(;void 0===r[o[i]][t]&&i>0;)i-=1;for(;void 0===r[o[a]][t]&&a<o.length-1;)a+=1;return[o[i],o[a]]}(e,t),i=(e-n[0])/(n[1]-n[0]);let a,s;return a=void 0!==r[n[0]][t]?r[n[0]][t]:0,s=void 0!==r[n[1]][t]?r[n[1]][t]:1,a*(1-i)+s*i}for(i=0;i<e.length;i+=3+n)r[e[i]]={r:e[i+n],g:e[i+n+1],b:e[i+n+2]};for(t||(o=Object.keys(r).map(parseFloat).sort((e,t)=>e-t),t=[o[0],1,o[o.length-1],1]),i=0;i<t.length;i+=2)r[t[i]]||(r[t[i]]={}),r[t[i]].a=t[i+1];return o=Object.keys(r).map(parseFloat).sort((e,t)=>e-t),o.forEach(e=>{void 0===r[e].a&&(r[e].a=a(e,"a")),void 0===r[e].r&&(r[e].r=a(e,"r"),r[e].g=a(e,"g"),r[e].b=a(e,"b"))}),o.reduce((e,t)=>e.concat([parseFloat(t),r[t].r,r[t].g,r[t].b,r[t].a]),[])}e.exports={createCanvasGradient:function(e,r,o,i){if(1===o)return function(e,r,o){const i=document.createElement("canvas"),a=i.getContext("2d");let s,l;const c=n(e,o,1);i.height=1,i.width=r;const d=a.createLinearGradient(0,0,i.width,i.height),p=c[0],u=c[c.length-5];for(l=0;l<c.length/5;l++)s=c.slice(5*l,5*l+5),d.addColorStop((s[0]-p)/(u-p),`rgba(${t(s[1])}, ${t(s[2])}, ${t(s[3])}, ${s[4]})`);return a.fillStyle=d,a.fillRect(0,0,i.width,i.height),i}(e,r,i);if(2===o)return function(e,t){const n=document.createElement("canvas"),r=n.getContext("2d");n.height=t,n.width=t;const o=r.getImageData(0,0,n.width,n.height);function i(e,n,r,i,a,s,l,c){let d=o.data;a=Math.round(a),s=Math.round(s),l=Math.round(l),c=Math.round(c);for(let o=s;o<s+c;o++){let p=(o-s)/c,u=e[2]*(1-p)+i[2]*p,m=e[3]*(1-p)+i[3]*p,h=e[4]*(1-p)+i[4]*p,g=n[2]*(1-p)+r[2]*p,f=n[3]*(1-p)+r[3]*p,v=n[4]*(1-p)+r[4]*p;for(let e=a;e<a+l;e++){let n=(e-a)/l,r=u*(1-n)+g*n,i=m*(1-n)+f*n,s=h*(1-n)+v*n,c=4*((t-1-o)*t+e);d[c]=255*r,d[c+1]=255*i,d[c+2]=255*s,d[c+3]=255}}}const a=[];let s=Array.from(e);for(;s.length;)a.push(s.splice(0,5));let l=Array.from(new Set(a.map(function(e){return e[0]}))),c=Array.from(new Set(a.map(function(e){return e[1]})));for(let e=0;e<l.length-1;e++)for(let n=0;n<c.length-1;n++)i(a.filter(function(t){return t[0]==l[e]&&t[1]==c[n]})[0],a.filter(function(t){return t[0]==l[e+1]&&t[1]==c[n]})[0],a.filter(function(t){return t[0]==l[e+1]&&t[1]==c[n+1]})[0],a.filter(function(t){return t[0]==l[e]&&t[1]==c[n+1]})[0],l[e]*t,c[n]*t,(l[e+1]-l[e])*t,(c[n+1]-c[n])*t);return r.putImageData(o,0,0),n}(e,r);throw Error("Not supported")},createCanvasColorList:function(e){const t=document.createElement("canvas"),n=t.getContext("2d");let r;t.height=1,t.width=256;const o=n.getImageData(0,0,t.width,t.height);for(r=0;r<e.length;r++)o.data[4*r+3]=255,o.data[4*r]=e[r]>>16&255,o.data[4*r+1]=e[r]>>8&255,o.data[4*r+2]=255&e[r];return n.putImageData(o,0,0),t},createSVGGradient:function(e,r,o,i,a){const s=e.namespaceURI,l=document.createElementNS(s,"linearGradient");e.getElementById(r)&&e.getElementById(r).remove(),l.setAttribute("id",r),a?(l.setAttribute("x1","0"),l.setAttribute("x2","1"),l.setAttribute("y1","0"),l.setAttribute("y2","0")):(l.setAttribute("x1","0"),l.setAttribute("x2","0"),l.setAttribute("y1","1"),l.setAttribute("y2","0"));const c=n(o,i,1),d=c[0],p=c[c.length-5];for(let e=0;e<c.length;e+=5){const n=document.createElementNS(s,"stop"),r=c.slice(e,e+5);n.setAttribute("offset",((r[0]-d)/(p-d)).toString(10)),n.setAttribute("stop-color",`rgb(${t(r[1])},${t(r[2])},${t(r[3])})`),n.setAttribute("stop-opacity",r[4]),l.appendChild(n)}return(e.querySelector("defs")||e.insertBefore(document.createElementNS(s,"defs"),e.firstChild)).appendChild(l)},mergeColorMapWithOpacity:n}},78560:e=>{let t;e.exports={error:function(e,n,r){t instanceof Node||(t=document.createElement("ul"),t.id="K3D-error-console",t.style.cssText=["font: 12px sans-serif","color: #FFFFFF","position: absolute","top: 0px","left: 0px","padding: 0px","z-index: 999","margin: 0px","list-style: none outside none"].join(";"),document.body.appendChild(t));const o=function(){const e=document.createElement("li");return e.style.cssText=["background-color: #B50F0F","padding: 5px","margin-bottom: 1px"].join(";"),t.appendChild(e),e}();o.innerHTML=["<b>",e||"Error","</b>: ",n].join(""),r||setTimeout(()=>{t.removeChild(o)},5e3)},defaultTimeout:5e3}},79454:e=>{"use strict";e.exports="#include <common>\r\n\r\nprecision highp sampler3D;\r\n\r\nuniform sampler2D colormap;\r\nuniform sampler3D volumeTexture[TEXTURE_COUNT];\r\nuniform sampler3D mask;\r\n\r\nuniform float low[TEXTURE_COUNT];\r\nuniform float high[TEXTURE_COUNT];\r\nuniform vec3 volumeSize[TEXTURE_COUNT];\r\nuniform float opacity;\r\n\r\nuniform float maskOpacity;\r\nuniform sampler2D maskColors;\r\nuniform sampler2D activeMasks;\r\nuniform int activeMasksCount;\r\n\r\nvarying vec3 coord;\r\n\r\n\r\n#include <dithering_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n\r\nvec4 cubicSample(sampler3D volume, vec3 u, vec3 R) {\r\n    #if CUBIC > 0\r\n    vec3 U = u * R + 0.5;\r\n    vec3 F = fract(U);\r\n\r\n    U = floor(U) + F * F * (3. - 2. * F);\r\n    //    U = floor(U) + F*F*F*(F*(F*6.-15.)+10.);   // use if you want smooth gradients\r\n    return texture(volume, (U - 0.5) / R);\r\n    #else\r\n    return texture(volume, u);\r\n    #endif\r\n}\r\n\r\nvoid main() {\r\n\r\n    #include <clipping_planes_fragment>\r\n    #include <logdepthbuf_fragment>\r\n\r\n    float px, scaled_px;\r\n    vec2 cm_coord;\r\n\r\n    #pragma unroll_loop_start\r\n    for (int i = 0; i < TEXTURE_COUNT; i++) {\r\n        px = cubicSample(volumeTexture[i], coord, volumeSize[i]).x;\r\n        scaled_px = (px - low[i]) / (high[i] - low[i]);\r\n        scaled_px = max(min(scaled_px, 0.99), 0.01);\r\n        cm_coord[i] = scaled_px;\r\n    }\r\n    #pragma unroll_loop_end\r\n\r\n    vec4 texelColor = texture(colormap, cm_coord);\r\n\r\n    if (activeMasksCount > 0) {\r\n        float maskValue = texture(mask, coord).r * 255.0;\r\n\r\n        for (int i = 0;i < activeMasksCount; i++) {\r\n            if (int(texture(activeMasks, vec2(float(i) / 255.0, 0.5)).b * 255.0) == int(maskValue)) {\r\n                vec3 cm = texture(maskColors, vec2(maskValue / 255.0, 0.5)).rgb;\r\n\r\n                texelColor.xyz = mix(texelColor.xyz, texelColor.xyz * cm, maskOpacity);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    texelColor.a *= opacity;\r\n    gl_FragColor = texelColor;\r\n\r\n    #include <premultiplied_alpha_fragment>\r\n    #include <dithering_fragment>\r\n}\r\n"},80228:e=>{function t(e){const t=e.length,n=new Uint8Array(t);let r;for(r=0;r<t;r++)n[r]=e.charCodeAt(r);return n}e.exports={colorsToFloat32Array:function(e){const t=new Float32Array(3*e.length);return e.forEach((e,n)=>{t[3*n]=(e>>16&255)/255,t[3*n+1]=(e>>8&255)/255,t[3*n+2]=(255&e)/255}),t},bufferToBase64:function(e){const t=new Uint8Array(e);let n,r="";for(n=0;n<t.length;n++)r+=String.fromCharCode(t[n]);return window.btoa(r)},base64ToArrayBuffer:function(e){return t(window.atob(e))},arrayBufferToBase64:function(e){let t="";const n=new Uint8Array(e),r=n.byteLength;for(let e=0;e<r;e++)t+=String.fromCharCode(n[e]);return window.btoa(t)},stringToArrayBuffer:t}},81151:(e,t,n)=>{const r=n(35395);e.exports=function(e,t){r.init(e,t,e.parameters.clippingPlanes,"clippingPlanes",function(){e.dispatch(e.events.PARAMETERS_CHANGE,{key:"clipping_planes",value:e.parameters.clippingPlanes})})}},81984:e=>{"use strict";e.exports="#define PHONG\r\n\r\nuniform vec3 diffuse;\r\nuniform vec3 emissive;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <dithering_pars_fragment>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <uv2_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <emissivemap_pars_fragment>\r\n#include <envmap_common_pars_fragment>\r\n#include <envmap_pars_fragment>\r\n#include <cube_uv_reflection_fragment>\r\n#include <fog_pars_fragment>\r\n#include <bsdfs>\r\n#include <lights_pars_begin>\r\n#include <lights_phong_pars_fragment>\r\n#include <shadowmap_pars_fragment>\r\n#include <bumpmap_pars_fragment>\r\n#include <normalmap_pars_fragment>\r\n#include <specularmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvarying float perPointOpacity;\r\nvarying vec3 vNormal;\r\n\r\nvoid main() {\r\n\r\n    #include <clipping_planes_fragment>\r\n    vec4 diffuseColor = vec4(diffuse, opacity);\r\n\r\n    diffuseColor.a *= perPointOpacity;\r\n\r\n    ReflectedLight reflectedLight = ReflectedLight(vec3(0.0), vec3(0.0), vec3(0.0), vec3(0.0));\r\n    vec3 totalEmissiveRadiance = emissive;\r\n\r\n    #include <logdepthbuf_fragment>\r\n    #include <map_fragment>\r\n    #include <color_fragment>\r\n    #include <alphamap_fragment>\r\n    #include <alphatest_fragment>\r\n    #include <specularmap_fragment>\r\n    #include <normal_fragment_begin>\r\n    #include <normal_fragment_maps>\r\n    #include <emissivemap_fragment>\r\n\r\n    // accumulation\r\n    #include <lights_phong_fragment>\r\n    #include <lights_fragment_begin>\r\n    #include <lights_fragment_maps>\r\n    #include <lights_fragment_end>\r\n\r\n    // modulation\r\n    #include <aomap_fragment>\r\n\r\n    vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\r\n\r\n    #include <envmap_fragment>\r\n\r\n    gl_FragColor = vec4(outgoingLight, diffuseColor.a);\r\n\r\n    #include <tonemapping_fragment>\r\n    #include <encodings_fragment>\r\n    #include <fog_fragment>\r\n    #include <premultiplied_alpha_fragment>\r\n    #include <dithering_fragment>\r\n\r\n}\r\n"},82054:(e,t,n)=>{const r=n(1184),o=n(76749),i=n(62419);e.exports={getColorLegend:function(e,t){let n,a,s,l,c,d;const p=[],u=[],m=[];let h,g,f,v=0,y=0,_=null;if(e.lastColorMap||(e.lastColorMap={objectId:null,colorRange:[null,null],colorMap:null}),"object"!=typeof t)return;if(p[0]=Math.min(t.color_range[0],t.color_range[1]),p[1]=Math.max(t.color_range[0],t.color_range[1]),e.lastColorMap.objectId===t.id&&e.lastColorMap.colorRange[0]==p[0]&&e.lastColorMap.colorRange[1]==p[1]&&i.isEqual(e.lastColorMap.colorMap,t.color_map.data))return;e.colorMapNode&&(e.getWorld().targetDOMNode.removeChild(e.colorMapNode),e.colorMapNode=null);const x=document.createElementNS("http://www.w3.org/2000/svg","svg"),b=x.namespaceURI,w=document.createElementNS(b,"rect");if(x.setAttribute("class","colorMapLegend"),x.setAttribute("viewBox","0 0 100 100"),x.style.cssText=["position: absolute","bottom: 10px","left: 10px","width: 30vh","height: 30vh","max-width: 250px","max-height: 250px","min-width: 150px","min-height: 150px","z-index: 16777271","pointer-events: none","font-family: KaTeX_Main"].join(";"),Array.isArray(t.volume)){let e=t.color_map.data,n=3+t.volume.length,r=new Set(e.filter(function(e,t){return t%n==0}));f=Array.from(r).map(function(t){for(let r=0;r<e.length;r+=n)if(e[r]===t)return[t,e[r+n-3],e[r+n-2],e[r+n-1]]}).flat()}else f=t.color_map.data;o.createSVGGradient(x,`colormap${t.id}`,f),w.setAttribute("stroke-width",.5.toString(10)),w.setAttribute("stroke-linecap","square"),w.setAttribute("stroke","black"),w.setAttribute("fill",`url(#colormap${t.id})`),w.setAttribute("width",10..toString(10)),w.setAttribute("height",90..toString(10)),w.setAttribute("x",5..toString(10)),w.setAttribute("y",5..toString(10)),x.appendChild(w),p[0]=Math.min(t.color_range[0],t.color_range[1]),p[1]=Math.max(t.color_range[0],t.color_range[1]);const M=p[1]-p[0];for(d=r.pow10ceil(Math.abs(M))/10;y<4;)h=r.fmod(p[0],d),h=h>0?d-h:0,y=Math.floor((Math.abs(M)-h+.001*d)/d),y<4&&(d/=2);for(g=0;g<=y;g++)u.push(p[0]+h+g*d);u.forEach(t=>{l=document.createElementNS(b,"g"),n=document.createElementNS(b,"line"),a=document.createElementNS(b,"text"),s=document.createElementNS(b,"text");const r=5+90*(1-(t-p[0])/M);c=e.parameters.colorbarScientific?t.toPrecision(4):t.toFixed((d.toString(10).split(".")[1]||"").length),n.setAttribute("x1","13"),n.setAttribute("y1",r.toString(10)),n.setAttribute("x2","17"),n.setAttribute("y2",r.toString(10)),n.setAttribute("stroke-width",.5.toString(10)),n.setAttribute("stroke","black"),x.appendChild(n),a.setAttribute("x","0"),a.setAttribute("y","0"),a.setAttribute("alignment-baseline","middle"),a.setAttribute("text-anchor","end"),a.setAttribute("font-size","0.5em"),a.setAttribute("fill","rgb(68, 68, 68)"),a.innerHTML=c,s.setAttribute("x","0.5"),s.setAttribute("y","0.5"),s.setAttribute("alignment-baseline","middle"),s.setAttribute("text-anchor","end"),s.setAttribute("font-size","0.5em"),s.setAttribute("fill","rgb(255, 255, 255)"),s.innerHTML=c,l.setAttribute("pos_y",r.toString(10)),l.appendChild(s),l.appendChild(a),m.push(l),x.appendChild(l)}),e.getWorld().targetDOMNode.appendChild(x),function t(){e.getWorld().width<10||e.getWorld().height<10?null===_&&(_=e.on(e.events.RESIZED,()=>{t()})):(null!==_&&(e.off(e.events.RESIZED,_),_=null),v=m.reduce((e,t)=>Math.max(e,t.getBBox().width),0),m.forEach(e=>{const t=(v+20).toString(10),n=e.getAttribute("pos_y");e.setAttribute("transform",`translate(${t}, ${n})`)}))}(),e.colorMapNode=x,e.lastColorMap={objectId:t.id,colorRange:p,colorMap:t.color_map.data}}}},82391:(e,t,n)=>{const r=n(74094),o=n(46392);e.exports={create:(e,t)=>(e.visible=void 0===e.visible||e.visible,e.color=void 0!==e.color?e.color:65280,e.opacity=void 0!==e.opacity?e.opacity:1,e.point_size=void 0!==e.point_size?e.point_size:1,e.shader=void 0!==e.shader?e.shader:"3dSpecular",e.opacity=Math.max(Math.min(e.opacity,1),0),"mesh"===e.shader?r.create(e,t):o.create(e,t)),update:(e,t,n,i)=>"mesh"===e.shader?r.update(e,t,n,i):o.update(e,t,n,i)}},83349:e=>{"use strict";e.exports="uniform float size;\r\nuniform float scale;\r\n\r\nattribute vec3 color;\r\n\r\n#if (USE_PER_POINT_OPACITY == 1)\r\nattribute float opacities;\r\n#endif\r\n\r\n#if (USE_PER_POINT_SIZE == 1)\r\nattribute float sizes;\r\n#endif\r\n\r\n#if (USE_COLOR_MAP == 1)\r\nuniform sampler2D colormap;\r\nuniform float low;\r\nuniform float high;\r\nattribute float attributes;\r\n#endif\r\n\r\nvarying vec4 vColor;\r\nvarying vec4 mvPosition;\r\n\r\n#include <common>\r\n#include <clipping_planes_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n\r\nvoid main() {\r\n    float perPointOpacity = 1.0;\r\n\r\n    mvPosition = modelViewMatrix * vec4(position, 1.0);\r\n\r\n    float fov = 2.0 * atan(1.0 / projectionMatrix[1][1]) * 180.0 / PI;\r\n    float fovCorrection = tan((PI / 180.0) * fov / 2.0);\r\n\r\n    #if (USE_PER_POINT_SIZE == 1)\r\n    gl_PointSize = sizes * (scale / -mvPosition.z) / fovCorrection;\r\n    #else\r\n    gl_PointSize = size * (scale / -mvPosition.z) / fovCorrection;\r\n    #endif\r\n\r\n    gl_Position = projectionMatrix * mvPosition;\r\n\r\n    #include <logdepthbuf_vertex>\r\n    #include <clipping_planes_vertex>\r\n\r\n    #if (USE_PER_POINT_OPACITY == 1)\r\n    perPointOpacity = opacities;\r\n    #endif\r\n\r\n    #if (USE_COLOR_MAP == 1)\r\n    float scaled_px = (attributes - low) / (high - low);\r\n    vec4 finalSphereColor = texture2D(colormap, vec2(scaled_px, 0.5));\r\n\r\n    finalSphereColor.a *= perPointOpacity;\r\n    vColor = finalSphereColor;\r\n    #else\r\n    vColor = vec4(color, perPointOpacity);\r\n    #endif\r\n}\r\n"},83567:e=>{"use strict";e.exports="precision highp sampler3D;\r\n\r\nuniform sampler2D colormap;\r\nuniform sampler3D volumeTexture;\r\nuniform float low;\r\nuniform float high;\r\nuniform vec3 b1;\r\nuniform vec3 b2;\r\nuniform float opacity;\r\n\r\nvarying vec4 worldPosition;\r\n\r\n#include <common>\r\n#include <dithering_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n    #include <clipping_planes_fragment>\r\n    #include <logdepthbuf_fragment>\r\n\r\n    vec3 coord = (worldPosition.xyz - b1) / (b2 - b1);\r\n    float inv_range = 1.0 / (high - low);\r\n    float px = texture(volumeTexture, coord).x;\r\n    float scaled_px = (px - low) * inv_range;\r\n\r\n    scaled_px = max(min(scaled_px, 0.99), 0.01);\r\n    vec4 texelColor = texture(colormap, vec2(scaled_px, 0.5));\r\n\r\n    texelColor.a *= opacity;\r\n\r\n    gl_FragColor = texelColor;\r\n\r\n    #include <premultiplied_alpha_fragment>\r\n    #include <dithering_fragment>\r\n}\r\n"},84135:(e,t,n)=>{const r=n(47731),o=n(62419),i=n(4184),{error:a}=n(78560);e.exports=function(e,t){let n,s;const l=[];let c;try{return t.objects.forEach((d,p)=>{if(c=!1,r(e,d),n=d&&e.Provider.Objects[d.type],void 0===n)return void a("Loader Error",`Unsupported object type ${d.type}`);s=(new Date).getTime();const u=i.interpolateTimeSeries(d,e.parameters.time),m=t.changes&&t.changes[p]||u.changes||{};if(n.update&&!o.isEmpty(m)){const t=e.getObjectById(u.json.id);void 0!==t&&(c=n.update(d,m,t,e))}c||(Object.keys(m).forEach(e=>{null!==m[e]&&m[e].timeSeries||(u.json[e]=m[e])}),c=n.create(u.json,e).then(t=>{t.visible=u.json.visible;const n=e.addOrUpdateObject(d,t);return t.K3DIdentifier=d.id||`K3DAutoIncrement_${n}`,d.id=t.K3DIdentifier,console.log(`K3D: Object type "${d.type}" loaded in: `,((new Date).getTime()-s)/1e3,"s"),{json:d,obj:t}}).catch(e=>{a("Loader Error",`Object of type "${d.type}" was not loaded. ${e.message}`)})),l.push(c)}),Promise.all(l)}catch(e){throw a("Loader Error","K3D Loader failed, please consult browser error console! "+e.message,!1),e}}},85138:e=>{"use strict";e.exports="uniform vec4 rotation;\r\nuniform vec4 translation;\r\n\r\nvarying vec4 worldPosition;\r\nvarying vec3 localPosition;\r\nvarying vec3 transformedCameraPosition;\r\nvarying vec3 transformedWorldPosition;\r\n\r\nvec3 rotate_vertex_position(vec3 pos, vec3 t, vec4 q) {\r\n    vec3 p = pos.xyz - t.xyz;\r\n\r\n    return p.xyz + 2.0 * cross(cross(p.xyz, q.xyz) + q.w * p.xyz, q.xyz) + t.xyz;\r\n}\r\n\r\nvoid main() {\r\n    vec3 p;\r\n\r\n    #include <begin_vertex>\r\n    #include <project_vertex>\r\n\r\n    localPosition = position;\r\n    worldPosition = modelMatrix * vec4(transformed, 1.0);\r\n\r\n    transformedCameraPosition = rotate_vertex_position(cameraPosition.xyz, translation.xyz, rotation);\r\n    transformedWorldPosition = rotate_vertex_position(worldPosition.xyz, translation.xyz, rotation);\r\n\r\n    #include <worldpos_vertex>\r\n}\r\n"},85356:e=>{"use strict";e.exports="uniform vec2 uScreenSize;\r\nuniform sampler2D uPrevDepthTexture;\r\nuniform int uLayer;\r\nuniform float uDepthOffset;\r\n"},85724:(e,t,n)=>{const r=n(6101),{colorsToFloat32Array:o}=n(80228),i=n(99834)(r),a=n(98947),{commonUpdate:s}=a,{areAllChangesResolve:l}=a,c=n(76749),{getColorsArray:d}=a;e.exports={create:function(e,t){e.width=void 0!==e.width?e.width:.1;const n=new i.MeshLineMaterial({color:new r.Color(1,1,1),opacity:e.opacity,sizeAttenuation:!0,lineWidth:e.width,resolution:new r.Vector2(t.getWorld().width,t.getWorld().height),side:r.DoubleSide},t);let a=e.colors&&e.colors.data||null;const s=new r.Color(e.color);let l=null;const p=e.color_range,u=e.color_map&&e.color_map.data||null,m=e.attribute&&e.attribute.data||null,h=new r.Matrix4,g=e.vertices.data,f=e.indices.data,v=new Set,y="segment"===e.indices_type?2:3;let _,x=[],b=[],w=[];const M=g.length/3;a=a&&a.length===g.length/3?o(a):d(s,g.length/3);for(let e=0;e<f.length;e+=y){_=3===y?[[f[e],f[e+1]],[f[e+1],f[e+2]],[f[e+2],f[e]]]:[[f[e],f[e+1]]];for(let e=0;e<_.length;e++){const t=_[e][0]>_[e][1]?_[e][0]+_[e][1]*M:_[e][1]+_[e][0]*M;if(!v.has(t)){v.add(t);const n=3*_[e][0],r=3*_[e][1];x.push(g[n],g[n+1],g[n+2],g[r],g[r+1],g[r+2]),a&&a.length>0&&w.push(a[n],a[n+1],a[n+2],a[r],a[r+1],a[r+2]),m&&m.length>0&&b.push(m[_[e][0]],m[_[e][1]])}}}if(x=new Float32Array(x),b=new Float32Array(b),p&&u&&b.length>0&&p.length>0&&u.length>0){const e=c.createCanvasGradient(u,1024,1),t=new r.CanvasTexture(e,r.UVMapping,r.ClampToEdgeWrapping,r.ClampToEdgeWrapping,r.NearestFilter,r.NearestFilter);t.needsUpdate=!0,n.uniforms.useMap.value=1,n.uniforms.map.value=t,l=new Float32Array(b.length);for(let e=0;e<b.length;e++)l[e]=(b[e]-p[0])/(p[1]-p[0]);w=null}const E=new i.MeshLine;E.setGeometry(x,!0,null,w,l),E.geometry.computeBoundingSphere(),E.geometry.computeBoundingBox();const C=new r.Mesh(E.geometry,n);C.userData.meshLine=E,C.userData.lastPositions=new Float32Array(x),C.userData.lastUVs=l,C.userData.lastColors=a,h.set.apply(h,e.model_matrix.data),C.applyMatrix4(h),C.updateMatrixWorld();const S=t.on(t.events.RESIZED,()=>{C.material.uniforms.resolution.value.x=t.getWorld().width,C.material.uniforms.resolution.value.y=t.getWorld().height});return C.onRemove=function(){t.off(t.events.RESIZED,S),C.material.uniforms.map.value&&(C.material.uniforms.map.value.dispose(),C.material.uniforms.map.value=void 0)},Promise.resolve(C)},update:function(e,t,n,r){let o=n.userData.lastUVs,i=n.userData.lastPositions;const a=n.userData.lastColors,c={};if(void 0!==n.geometry.attributes.uv&&(void 0===t.color_range||t.color_range.timeSeries||(n.material.uniforms.low.value=t.color_range[0],n.material.uniforms.high.value=t.color_range[1],c.color_range=null),void 0!==t.attribute&&!t.attribute.timeSeries)){if(t.attribute.data.length!==n.geometry.attributes.uv.array.length)return!1;o=new Float32Array(t.attribute.data.length);for(let n=0;n<o.length;n++)o[n]=(t.attribute.data[n]-e.color_range[0])/(e.color_range[1]-e.color_range[0]);n.userData.lastUVs=o}if(void 0!==t.vertices&&!t.vertices.timeSeries){if(t.vertices.data.length!==i.length)return!1;i=t.vertices.data,n.userData.lastPositions=i}return void 0===t.attribute&&void 0===t.vertices||(n.userData.meshLine.setGeometry(i,!0,null,a,o),n.geometry.attributes.position.needsUpdate=!0,n.geometry.computeBoundingSphere(),n.geometry.computeBoundingBox(),c.attribute=null,c.vertices=null),s(e,t,c,n,r),!!l(t,c)&&Promise.resolve({json:e,obj:n})}}},85763:e=>{e.exports=function(e,t,n,r){let o=0;!function i(){const a=Math.min(o+t,e);for(;o<a;++o)n.call(null,o);o<e?setTimeout(i,0):void 0!==r&&r.call(null)}()}},86060:(e,t,n)=>{const r=n(6101),{cameraModes:o}=n(8444),{recalculateFrustum:i}=n(98947);e.exports=function(e){this.camera=new r.PerspectiveCamera(e.parameters.cameraFov,this.width/this.height,.1,1e3),this.camera.position.set(2,-3,.2),this.camera.up.set(0,0,1),this.camera.frustum=new r.Frustum,this.axesHelper.camera=new r.PerspectiveCamera(e.parameters.cameraFov,this.axesHelper.width/this.axesHelper.height,.1,1e3),this.axesHelper.camera.position.set(2,.5,.5),this.axesHelper.camera.lookAt(.5,.5,.5),this.axesHelper.camera.up.copy(this.camera.up),this.setupCamera=function(e,t,n){t&&void 0!==this.camera.fov&&void 0!==this.axesHelper.camera.fov&&(this.camera.fov=t,this.axesHelper.camera.fov=t,this.controls.dispatchEvent({type:"change"})),e&&(this.controls.object.position.fromArray(e),9===e.length&&(this.controls.object.up.fromArray(e,6),this.axesHelper.camera.up.copy(this.controls.object.up)),this.controls.target.fromArray(e,3)),this.camera.updateProjectionMatrix(),this.axesHelper.camera.updateProjectionMatrix(),i(this.camera),this.controls.update(n)},this.setCameraToFitScene=function(t,n){let i=(new r.Box3).setFromArray(e.parameters.grid);if(e.parameters.cameraMode===o.sliceViewer)return;if(!e.parameters.cameraAutoFit&&!t)return;i=e.getSceneBoundingBox()||i,void 0===n&&(n=1.5);const a=i.getBoundingSphere(new r.Sphere),s=a.radius*n/Math.sin(r.Math.degToRad(e.parameters.cameraFov/2));this.camera.position.subVectors(a.center,this.camera.getWorldDirection(new r.Vector3).setLength(s)),e.parameters.cameraMode===o.fly?this.controls.target=this.camera.position.clone().add(this.camera.getWorldDirection(new r.Vector3).setLength(s/2)):this.controls.target=a.center,this.controls.update()}}},86479:(e,t,n)=>{const r=n(6101),o=[[[0,0]],[[4,4],[-4,-4]],[[-2,-6],[6,-2],[-6,2],[2,6]],[[1,-3],[-1,3],[5,1],[-3,-5],[-5,5],[-7,-1],[3,7],[7,-7]],[[1,1],[-1,-3],[-3,2],[4,-1],[-5,-2],[2,5],[5,3],[3,-5],[-2,6],[0,-7],[-4,-6],[-6,4],[-8,0],[7,-4],[6,7],[-7,-8]],[[-4,-7],[-7,-5],[-3,-5],[-5,-4],[-1,-4],[-2,-2],[-6,-1],[-4,0],[-7,1],[-1,2],[-6,3],[-3,3],[-7,6],[-3,6],[-5,7],[-1,7],[5,-7],[1,-6],[6,-5],[4,-4],[2,-3],[7,-2],[1,-1],[4,-1],[2,1],[6,2],[0,4],[4,4],[2,5],[7,5],[5,6],[3,7]]];e.exports=function(e,t,n,i,a,s,l,c,d){return new Promise(p=>{const u=o[Math.max(0,Math.min(c,5))],{autoClear:m}=e,h=r.CopyShader,g=r.UniformsUtils.clone(h.uniforms),f=new r.ShaderMaterial({uniforms:g,vertexShader:h.vertexShader,fragmentShader:h.fragmentShader,premultipliedAlpha:!0,transparent:!0,blending:r.AdditiveBlending,depthTest:!1,depthWrite:!1}),v=new r.WebGLRenderTarget(i.width,i.height,{minFilter:r.LinearFilter,magFilter:r.LinearFilter,format:r.RGBAFormat,stencilBuffer:!0}),y=new r.OrthographicCamera(-1,1,1,-1,0,1),_=new r.Scene,x=new r.Mesh(new r.PlaneBufferGeometry(2,2),f);x.frustumCulled=!1,_.add(x),e.autoClear=!1;let b=new r.Color;e.getClearColor(b),b=b.getHex();const w=e.getClearAlpha(),M=1/u.length;g.tDiffuse.value=v.texture;const E=new Uint8ClampedArray(a*s*4);let C=Promise.resolve();l.forEach(r=>{C=C.then(()=>{const{width:o}=i,l=r[1];for(let c=0;c<u.length;c++){const p=u[c];n.setViewOffset(a,s,.0625*p[0],.0625*p[1]+r[0],o,l);let m=M;m+=.03125*((c+.5)/u.length-.5),g.opacity.value=m,e.setClearColor(0,0),e.setRenderTarget(v),e.clear(),d(t,n,v),e.setRenderTarget(i),0===c&&(e.setClearColor(0,0),e.clear()),e.render(_,y)}E.set(function(e,t){const n=new Float32Array(t.width*t.height*4),r=new Uint8ClampedArray(t.width*t.height*4);let o;for(e.readRenderTargetPixels(t,0,0,t.width,t.height,n),o=0;o<n.length;o++)r[o]=Math.floor(256*n[o]);return r}(e,i).subarray(0,o*l*4),(s-l-r[0])*o*4)}),C=C.then(()=>new Promise(e=>{setTimeout(e,100)}))}),C=C.then(()=>{n.clearViewOffset&&n.clearViewOffset(),e.autoClear=m,e.setClearColor(b,w),v.dispose(),p(E)})})}},87564:(e,t,n)=>{const r=n(44186),o=n(39621);function i(e,t,n){return new Promise((r,i)=>{const a=document.createElement("canvas"),s=a.getContext("2d"),l=document.createElement("canvas"),{clearColor:c}=e.parameters,d=e.getWorld(),p=d.renderer.domElement;let u,m;if(m=(new Date).getTime(),a.width=Math.floor(p.width*t),l.width=Math.floor(p.width*t),a.height=Math.floor(p.height*t),l.height=Math.floor(p.height*t),e.heavyOperationAsync=!0,e.labels=[],e.dispatch(e.events.BEFORE_RENDER),c>=0&&(s.fillStyle=`rgb(${(16711680&c)>>16},${(65280&c)>>8},${255&c})`,s.fillRect(0,0,a.width,a.height)),n)u=Promise.resolve();else{const n=document.getElementsByTagName("style");let r="";for(let e=0;e<n.length;e++)r+=n[e].outerHTML;u=o.drawHTML(`<style>body{margin:0;}</style>\n                ${r}\n                ${d.overlayDOMNode.outerHTML}\n                ${e.colorMapNode?e.colorMapNode.outerHTML:""}`,l,{zoom:t})}e.heavyOperationAsync=!0,u.then(t=>{console.log("K3D: Screenshot [html]: "+((new Date).getTime()-m)/1e3,"s"),m=(new Date).getTime(),d.renderOffScreen(a.width,a.height).then(n=>{console.log("K3D: Screenshot [canvas]: "+((new Date).getTime()-m)/1e3,"s"),m=(new Date).getTime(),s.scale(1,-1),n.forEach(e=>{const t=new ImageData(e,a.width,a.height),n=document.createElement("canvas"),r=n.getContext("2d");n.width=t.width,n.height=t.height,r.putImageData(t,0,0),s.drawImage(n,0,0,a.width,-a.height)}),t&&(s.scale(1,-1),s.drawImage(l,0,0)),e.heavyOperationAsync=!1,r(a)})},e=>{i(e)})})}e.exports={screenshotGUI:function(e,t){const n={screenshot(){i(t,t.parameters.screenshotScale).then(e=>{e.toBlob(e=>{let n=`K3D-${Date.now()}.png`;t.parameters.name&&(n=`${t.parameters.name}.png`),r.saveAs(e,n)})},()=>{console.error("Failed to render screenshot.")})}};e.add(n,"screenshot").name("Screenshot")},getScreenshot:i}},87570:(e,t,n)=>{const r=n(6101),{viewModes:o}=n(69358);e.exports=function(e,t,n,i){function a(e){const t=e.voxel.getVoxelChunkObject(e.voxel.generate());let n;for(n=0;n<e.children.length;n++)e.children[n].geometry=t.children[n].geometry}function s(n,o){const i=(new r.Matrix4).copy(t.matrixWorld).invert(),a=(new r.Matrix3).getNormalMatrix(i),s=n.point.clone().applyMatrix4(i),l=n.face.normal.clone().applyMatrix3(a).normalize(),c=o?.5:-.5;s.add(l.multiplyScalar(c/Math.max(e.voxelSize.width,e.voxelSize.height,e.voxelSize.length)));const d=Math.floor(s.x*e.voxelSize.width)+t.voxel.chunk.offset[0],p=Math.floor(s.y*e.voxelSize.height)+t.voxel.chunk.offset[1],u=Math.floor(s.z*e.voxelSize.length)+t.voxel.chunk.offset[2];return!(d<0||p<0||u<0||d>=e.voxelSize.width||p>=e.voxelSize.height||u>=e.voxelSize.length)&&{x:d,y:p,z:u}}function l(t){return e.children.find(e=>!!(e.voxel&&t.x>=e.voxel.chunk.offset[0]&&t.x<=e.voxel.chunk.offset[0]+e.voxel.chunk.size[0]&&t.y>=e.voxel.chunk.offset[1]&&t.y<=e.voxel.chunk.offset[1]+e.voxel.chunk.size[1]&&t.z>=e.voxel.chunk.offset[2]&&t.z<=e.voxel.chunk.offset[2]+e.voxel.chunk.size[2])&&e)}function c(e,t){const n=l({x:e.x+t.x,y:e.y+t.y,z:e.z+t.z});n&&a(n)}return{onHover(t,r){switch(r){case o.add:return function(t){const r=s(t,!0);return!!r&&(n.visible=!0,n.position.set(r.x/e.voxelSize.width,r.y/e.voxelSize.height,r.z/e.voxelSize.length),!0)}(t);case o.change:case o.callback:return function(t){const r=s(t,!1);return!!r&&(n.visible=!0,n.position.set(r.x/e.voxelSize.width,r.y/e.voxelSize.height,r.z/e.voxelSize.length),!0)}(t);default:return!1}},onClick(r,d){switch(d){case o.add:return function(r){const o=s(r,!0);if(!o)return!1;const c=o.x+o.y*e.voxelSize.width+o.z*e.voxelSize.width*e.voxelSize.height;t.voxel.chunk.voxels instanceof Uint8Array?t.voxel.chunk.voxels[c]=i.parameters.voxelPaintColor:t.voxel.chunk.voxels.set(o.x,o.y,o.z,i.parameters.voxelPaintColor,!0),a(t);const d=l(o);return d&&t.uuid!==d.uuid&&a(d),n.visible=!1,!0}(r);case o.change:return function(r){const o=s(r,!1);if(!o)return!1;const l=o.x+o.y*e.voxelSize.width+o.z*e.voxelSize.width*e.voxelSize.height;return t.voxel.chunk.voxels instanceof Uint8Array?t.voxel.chunk.voxels[l]=i.parameters.voxelPaintColor:t.voxel.chunk.voxels.set(o.x,o.y,o.z,i.parameters.voxelPaintColor,!0),a(t),o.x===t.voxel.chunk.offset.x&&c(o,{x:-1,y:0,z:0}),o.x===t.voxel.chunk.offset.x+t.voxel.chunk.size-1&&c(o,{x:1,y:0,z:0}),o.y===t.voxel.chunk.offset.y&&c(o,{x:0,y:-1,z:0}),o.y===t.voxel.chunk.offset.y+t.voxel.chunk.size-1&&c(o,{x:0,y:1,z:0}),o.z===t.voxel.chunk.offset.z&&c(o,{x:1,y:0,z:-1}),o.z===t.voxel.chunk.offset.z+t.voxel.chunk.size-1&&c(o,{x:0,y:0,z:1}),n.visible=!1,!0}(r);case o.callback:return function(t){const n=s(t,!1);return n&&i.dispatch(i.events.VOXELS_CALLBACK,{coord:n,object:e}),!1}(r);default:return!1}}}}},91384:(e,t,n)=>{const r=n(6101),{colorsToFloat32Array:o}=n(80228),i=n(98947),{commonUpdate:a}=i,{areAllChangesResolve:s}=i,{getColorsArray:l}=i,{handleColorMap:c}=i;e.exports={create(e){const t=new r.BufferGeometry,n=new r.MeshBasicMaterial({opacity:e.opacity,depthWrite:1===e.opacity,transparent:1!==e.opacity}),i=e.colors&&e.colors.data||null,a=new r.Color(e.color);let s;const d=e.color_range,p=e.color_map&&e.color_map.data||null,u=e.attribute&&e.attribute.data||null,m=new r.Line(t,n),h=new r.Matrix4,g=e.vertices.data;return u&&d&&p&&u.length>0&&d.length>0&&p.length>0?c(t,p,d,u,n):(s=i&&i.length===g.length/3?o(i):l(a,g.length/3),n.setValues({vertexColors:r.VertexColors}),t.setAttribute("color",new r.BufferAttribute(s,3))),t.setAttribute("position",new r.BufferAttribute(g,3)),t.computeBoundingSphere(),t.computeBoundingBox(),h.set.apply(h,e.model_matrix.data),m.applyMatrix4(h),m.updateMatrixWorld(),Promise.resolve(m)},update(e,t,n,r){const o={};if(void 0!==n.geometry.attributes.uv&&(void 0===t.color_range||t.color_range.timeSeries||(n.material.uniforms.low.value=t.color_range[0],n.material.uniforms.high.value=t.color_range[1],o.color_range=null),void 0!==t.attribute&&!t.attribute.timeSeries&&t.attribute.data.length===n.geometry.attributes.uv.array.length)){const r=n.geometry.attributes.uv.array;for(let n=0;n<r.length;n++)r[n]=(t.attribute.data[n]-e.color_range[0])/(e.color_range[1]-e.color_range[0]);n.geometry.attributes.uv.needsUpdate=!0,o.attribute=null}return void 0===t.vertices||t.vertices.timeSeries||t.vertices.data.length!==n.geometry.attributes.position.array.length||(n.geometry.attributes.position.array.set(t.vertices.data),n.geometry.attributes.position.needsUpdate=!0,n.geometry.computeBoundingSphere(),n.geometry.computeBoundingBox(),o.vertices=null),a(e,t,o,n,r),!!s(t,o)&&Promise.resolve({json:e,obj:n})}}},92367:(e,t,n)=>{const r=n(67483),o=n(6101);e.exports={prepareGeometry(e){const t=e.clone(),n=[];for(let e=0,r=t.attributes.position.count;e<r;e++)n.push(e,e,e);return t.setIndex(n),t},Intersect:e=>function(t){let n=[];const i=new o.Matrix4;i.copy(e.matrixWorld).invert(),t.ray.applyMatrix4(i);const{ray:a}=t;let s=1/0,l=e.material.size/2||1,c=l/((e.scale.x+e.scale.y+e.scale.z)/3),d=c*c,p=null;return e.geometry.boundsTree.shapecast({boundsTraverseOrder:function(e){return e.distanceToPoint(a.origin)},intersectsBounds:function(e,t,n){return n>s?r.NOT_INTERSECTED:(e.expandByScalar(c),a.intersectsBox(e)?r.INTERSECTED:r.NOT_INTERSECTED)},intersectsTriangle:function(t,n){const r=a.distanceSqToPoint(t.a);if(e.geometry.attributes.sizes||e.isInstancedMesh){if(e.geometry.attributes.sizes&&(l=e.geometry.attributes.sizes.array[n]/2),e.isInstancedMesh){let t=(new o.Matrix4).fromArray(e.instanceMatrix.array,16*n);l=t.getMaxScaleOnAxis()/2}c=l/((e.scale.x+e.scale.y+e.scale.z)/3),d=c*c}if(r<d){const r=a.origin.distanceTo(t.a);r<s&&(s=r,p={object:e,point:t.a,distance:r,index:n})}}}),s!==1/0&&n.push(p),n}}},92549:e=>{e.exports='<style>body { margin: 0;}</style><div id="canvasTarget" style="width: 100%; height: 100%;"></div>'},93512:e=>{"use strict";e.exports="#include <common>\r\n#include <clipping_planes_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n\r\nattribute vec3 normals;\r\nuniform vec3 volumeSize[TEXTURE_COUNT];\r\nvarying vec3 coord;\r\n\r\nvoid main() {\r\n    coord = position + vec3(0.5) + 0.5 / volumeSize[0];\r\n\r\n    vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\r\n\r\n    #include <clipping_planes_vertex>\r\n\r\n    gl_Position = projectionMatrix * mvPosition;\r\n\r\n    #include <logdepthbuf_vertex>\r\n}"},95080:e=>{e.exports=function e(t){const n=new Uint16Array(t);return n.constructor=e,n}},96973:(e,t,n)=>{const r=n(6101);let o=n(22919);const{areAllChangesResolve:i}=n(98947);function a(e){return`#${(e=parseInt(e,10)+16777216).toString(16).substr(1)}`}o=o.default||o,e.exports={create(e,t){e.visible=void 0===e.visible||e.visible,e.color=void 0!==e.color?e.color:0;const n=e.text||"\\KaTeX",{color:i}=e,s=e.reference_point||"lb";let{position:l}=e;const c=e.size||1,d=new r.Object3D,{overlayDOMNode:p}=t.getWorld(),u=t.getWorld();let m,h=[];for(l.data?d.positions=l.data:d.positions=l,d.text=n,m=0;m<d.positions.length/2;m++){const r=document.createElement("div");e.is_html?(r.innerHTML=Array.isArray(n)?n[m]:n,r.style.cssText="pointer-events: all"):r.innerHTML=o.renderToString(Array.isArray(n)?n[m]:n,{displayMode:!0}),l.data&&(l=l.data),r.style.position="absolute",r.style.color=a(i),r.style.fontSize=`${c}em`,e.label_box&&(r.style.padding="5px",r.style.background=t.getWorld().targetDOMNode.style.backgroundColor,r.style.border=`1px solid ${a(i)}`,r.style.borderRadius="10px"),p.appendChild(r),h.push(r)}const g=t.on(t.events.BEFORE_RENDER,function(){h.forEach(function(e,t){let n,r;const o=d.positions[2*t]*u.width,i=d.positions[2*t+1]*u.height;switch(s[0]){case"l":n=`${o}px`;break;case"c":n=`calc(${o}px - 50%)`;break;case"r":n=`calc(${o}px - 100%)`}switch(s[1]){case"t":r=`${i}px`;break;case"c":r=`calc(${i}px - 50%)`;break;case"b":r=`calc(${i}px - 100%)`}e.style.transform=`translate(${n},${r})`,e.style.zIndex=16777271})});return d.domElements=h,d.onRemove=function(){h.forEach(function(e){p.removeChild(e),e=null}),h=[],t.off(t.events.BEFORE_RENDER,g)},d.hide=function(){h.forEach(function(e){e.style.display="none"})},d.show=function(){h.forEach(function(e){e.style.display="block"})},Promise.resolve(d)},update(e,t,n){const r={};return void 0===t.text||t.text.timeSeries||(n.domElements.forEach(function(n,r){let i=Array.isArray(t.text)?t.text[r]:t.text;e.is_html?(n.innerHTML=i,n.style.pointerEvents="all"):(n.innerHTML=o.renderToString(i,{displayMode:!0}),n.style.pointerEvents="none")}),r.text=null),void 0===t.position||t.position.timeSeries||(n.positions=t.position.data||t.position,r.position=null),!!i(t,r)&&Promise.resolve({json:e,obj:n})}}},97132:(e,t,n)=>{const r=n(6101),o=n(69522),{areAllChangesResolve:i}=n(98947),{commonUpdate:a}=n(98947),s=n(80228);e.exports={create:(e,t)=>new Promise(n=>{const i=new r.PlaneBufferGeometry(1,1),a=new r.Matrix4,l=new r.Texture;let c,d;e.interpolation=void 0===e.interpolation||e.interpolation;const p=document.createElement("img");if(p.src=`data:image/${e.file_format};base64,${s.bufferToBase64(e.binary.data.buffer)}`,9===e.puv.data.length){const t=i.attributes.position.array,n=(new r.Vector3).fromArray(e.puv.data,0),o=(new r.Vector3).fromArray(e.puv.data,3),a=(new r.Vector3).fromArray(e.puv.data,6);n.toArray(t,0),n.clone().add(o).toArray(t,3),n.clone().add(a).toArray(t,6),n.clone().add(a).add(o).toArray(t,9),i.computeVertexNormals()}i.computeBoundingSphere(),i.computeBoundingBox(),p.onload=function(){c=new r.MeshBasicMaterial({color:16777215,side:r.DoubleSide,map:l}),d=new r.Mesh(i,c),o.init(e,d,t),a.set.apply(a,e.model_matrix.data),d.applyMatrix4(a),d.updateMatrixWorld(),e.interpolation?(l.minFilter=r.LinearFilter,l.magFilter=r.LinearFilter):(l.minFilter=r.NearestFilter,l.magFilter=r.NearestFilter),l.image=p,l.flipY=!1,l.minFilter=r.LinearFilter,l.needsUpdate=!0,n(d)}}),update(e,t,n,r){const s={};return o.update(e,t,s,n),a(e,t,s,n,r),!!i(t,s)&&Promise.resolve({json:e,obj:n})}}},98947:(e,t,n)=>{const r=n(6101),{createCanvasGradient:o}=n(76749),i=n(95080);function a(e){return[e.targetDOMNode.offsetWidth,e.targetDOMNode.offsetHeight]}function s(e){const t={front:r.FrontSide,back:r.BackSide,double:r.DoubleSide};return e.opacity<1?t.double:e.side&&t[e.side]||t.front}e.exports={closestPowOfTwo:e=>2**Math.ceil(Math.log(e)/Math.log(2)),getObjectById:(e,t)=>e.ObjectsById[t],getSpaceDimensionsFromTargetElement:a,resizeListener(e){const t=a(e);e.width=t[0],e.height=t[1],e.camera.aspect=e.width/e.height,e.camera.updateProjectionMatrix(),e.renderer.setSize(e.width,e.height)},getColorsArray(e,t){const n=new Float32Array(3*t);let r;for(r=0;r<n.length;r+=3)n[r]=e.r,n[r+1]=e.g,n[r+2]=e.b;return n},getTwoColorsArray(e,t,n){const r=new Float32Array(3*n);let o;for(o=0;o<r.length;o+=6)r[o]=e.r,r[o+1]=e.g,r[o+2]=e.b,r[o+3]=t.r,r[o+4]=t.g,r[o+5]=t.b;return r},expandBoundingBox(e,t){e.min.x-=t,e.max.x+=t,e.min.y-=t,e.max.y+=t,e.min.z-=t,e.max.z+=t},generateArrow(e,t,n,o,i,a,s){const l=new r.Vector3,c=(new r.Vector3).subVectors(i,o),d=c.length(),p=[];let u,m,h=new r.Quaternion;if(c.normalize(),t.push(o.x,o.y,o.z),null!==e){for(e=e.clone(),m=(new r.Vector3).copy(o).add(c.clone().multiplyScalar(d-s)),t.push(m.x,m.y,m.z),u=0;u<e.attributes.position.count;u++)p.push(a.r),p.push(a.g),p.push(a.b);e.setAttribute("color",new r.Float32BufferAttribute(p,3)),c.y>.99999?h.set(0,0,0,1):c.y<-.99999?h.set(1,0,0,0):(l.set(c.z,0,-c.x).normalize(),h=(new r.Quaternion).setFromAxisAngle(l,Math.acos(c.y))),e.applyMatrix4((new r.Matrix4).makeRotationFromQuaternion(h)),e.translate(i.x,i.y,i.z),n?n.push(e):n=[e]}else t.push(i.x,i.y,i.z);return n},handleColorMap(e,t,n,i,a){let s,l;const c=o(t,1024,1),d=new r.CanvasTexture(c,r.UVMapping,r.ClampToEdgeWrapping,r.ClampToEdgeWrapping,r.NearestFilter,r.NearestFilter);if(d.needsUpdate=!0,a.setValues({map:d,color:16777215}),i){for(s=new Float32Array(i.length),l=0;l<i.length;l++)s[l]=(i[l]-n[0])/(n[1]-n[0]);e.setAttribute("uv",new r.BufferAttribute(s,1))}},typedArrayToThree:e=>e===Int16Array?r.ShortType:e===Int32Array?r.IntType:e===i?r.HalfFloatType:e===Float32Array?r.FloatType:null,areAllChangesResolve:(e,t)=>Object.keys(e).every(e=>void 0!==t[e]),recalculateFrustum(e){e.frustum.setFromProjectionMatrix((new r.Matrix4).multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse))},commonUpdate(e,t,n,o,i){if(null!==n.model_matrix&&void 0!==t.model_matrix&&!t.model_matrix.timeSeries){const e=new r.Matrix4;e.set.apply(e,t.model_matrix.data),o.initialPosition?o.position.copy(o.initialPosition):o.position.set(0,0,0),o.rotation.set(0,0,0),o.scale.set(1,1,1),o.applyMatrix4(e),o.updateMatrixWorld(),o.transformControls&&o.transformControls.updateMatrixWorld(),n.model_matrix=null}null===n.visible||void 0===t.visible||t.visible.timeSeries||(o.visible=t.visible,n.visible=null),null===n.opacity||void 0===t.opacity||t.opacity.timeSeries||(o.material.opacity=t.opacity,o.material.side=s({opacity:t.opacity,side:e.side}),o.material.uniforms&&o.material.uniforms.opacity&&(o.material.uniforms.opacity.value=t.opacity),0===i.parameters.depthPeels&&(o.material.depthWrite=1===t.opacity,o.material.transparent=1!==t.opacity),o.material.needsUpdate=!0,n.opacity=null),null===n.shininess||void 0===t.shininess||t.shininess.timeSeries||(o.material.shininess=t.shininess,o.material.uniforms&&o.material.uniforms.shininess&&(o.material.uniforms.shininess.value=t.shininess),o.material.needsUpdate=!0,n.opacity=null)},ensure256size(e){const t=new Float32Array(256);for(let n=0;n<Math.min(256,e.length);n++)t[n]=e[n];return t},getSide:s}},99834:e=>{e.exports=function(e){function t(){this.positions=[],this.previous=[],this.next=[],this.side=[],this.width=[],this.indices_array=[],this.uvs=[],this.counters=[],this.geometry=new e.BufferGeometry}function n(t,n){let r;function o(e,t){return void 0===e?t:e}return t=t||{},this.lineWidth=o(t.lineWidth,1),this.map=o(t.map,null),this.useMap=o(t.useMap,0),this.color=o(t.color,new e.Color(16777215)),this.opacity=o(t.opacity,1),this.resolution=o(t.resolution,new e.Vector2(1,1)),this.sizeAttenuation=o(t.sizeAttenuation,1),this.near=o(t.near,1),this.far=o(t.far,1),this.visibility=o(t.visibility,1),r=new e.ShaderMaterial({uniforms:{lineWidth:{type:"f",value:this.lineWidth},map:{type:"t",value:this.map},useMap:{type:"f",value:this.useMap},color:{type:"c",value:this.color},opacity:{type:"f",value:this.opacity},resolution:{type:"v2",value:this.resolution},sizeAttenuation:{type:"f",value:this.sizeAttenuation},near:{type:"f",value:this.near},far:{type:"f",value:this.far},visibility:{type:"f",value:this.visibility}},vertexShader:["precision highp float;","","attribute vec3 previous;","attribute vec3 next;","attribute vec3 colors;","attribute float side;","attribute float width;","attribute float counters;","","uniform vec2 resolution;","uniform float lineWidth;","uniform vec3 color;","uniform float opacity;","uniform float near;","uniform float far;","uniform float sizeAttenuation;","","varying vec2 vUV;","varying vec4 vColor;","varying float vCounters;","","#include <common>","#include <logdepthbuf_pars_vertex>","#include <clipping_planes_pars_vertex>","","vec2 fix( vec4 i, float aspect ) {","","    vec2 res = i.xy / i.w;","    res.x *= aspect;","    vCounters = counters;","    return res;","","}","","void main() {","","    float aspect = resolution.x / resolution.y;","    float pixelWidthRatio = 1. / (resolution.x * projectionMatrix[0][0]);","","    vColor = vec4( color * colors, opacity );","    vUV = uv;","","    vec3 mvPosition = (modelViewMatrix * vec4(position, 1.0)).xyz;","    #include <clipping_planes_vertex>","","    mat4 m = projectionMatrix * modelViewMatrix;","    vec4 finalPosition = m * vec4( position, 1.0 );","    vec4 prevPos = m * vec4( previous, 1.0 );","    vec4 nextPos = m * vec4( next, 1.0 );","","    vec2 currentP = fix( finalPosition, aspect );","    vec2 prevP = fix( prevPos, aspect );","    vec2 nextP = fix( nextPos, aspect );","","    float pixelWidth = finalPosition.w * pixelWidthRatio;","    float w = 1.8 * pixelWidth * lineWidth * width;","","    if( sizeAttenuation == 1. ) {","        w = max(1.8 * pixelWidth * 2.0, 1.8 * lineWidth * width);","    }","","    vec2 dir;","    if( nextP == currentP ) dir = normalize( currentP - prevP );","    else if( prevP == currentP ) dir = normalize( nextP - currentP );","    else {","        vec2 dir1 = normalize( currentP - prevP );","        vec2 dir2 = normalize( nextP - currentP );","        dir = normalize( dir1 + dir2 );","","        vec2 perp = vec2( -dir1.y, dir1.x );","        vec2 miter = vec2( -dir.y, dir.x );","        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );","","    }","","    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;","    vec2 normal = vec2( -dir.y, dir.x );","    normal.x /= aspect;","    normal *= .5 * w;","","    vec4 offset = vec4( normal * side, 0.0, 1.0 );","    finalPosition.xy += offset.xy;","","","    gl_Position = finalPosition;","    #include <logdepthbuf_vertex>","","}"].join("\r\n"),fragmentShader:["precision mediump float;","","uniform sampler2D map;","uniform float useMap;","uniform float visibility;","","varying vec2 vUV;","varying vec4 vColor;","varying float vCounters;","","#include <logdepthbuf_pars_fragment>","#include <clipping_planes_pars_fragment>","","void main() {",""," #include <clipping_planes_fragment>"," #include <logdepthbuf_fragment>","","    vec4 c = vColor;","    if( useMap == 1. ) c *= texture2D( map, vUV);","    gl_FragColor = c;","    gl_FragColor.a *= step(vCounters, visibility);","}"].join("\r\n"),clipping:!0}),t.transparent=1!==this.opacity,r.depthWrite=1===this.opacity,delete t.lineWidth,delete t.map,delete t.useMap,delete t.color,delete t.opacity,delete t.resolution,delete t.sizeAttenuation,delete t.near,delete t.far,delete t.visibility,r.type="MeshLineMaterial",r.setValues(t),r}return t.prototype.setGeometry=function(e,t,n,r,o){let i,a,s;if(e instanceof Float32Array||e instanceof Array)for(this.positions=new Float32Array(2*e.length),this.counters=new Float32Array(2*e.length/3),i=0;i<e.length;i+=3)a=i/e.length,this.positions[2*i]=this.positions[2*i+3]=e[i],this.positions[2*i+1]=this.positions[2*i+4]=e[i+1],this.positions[2*i+2]=this.positions[2*i+5]=e[i+2],this.counters[2*i]=this.counters[2*i+1]=a;for(s=this.positions.length/6,this.width=new Float32Array(2*s),this.colors=new Float32Array(6*s),this.uvs=new Float32Array(4*s),i=0;i<s;i++)this.width[2*i]=this.width[2*i+1]=n?n[i]:1,r?(this.colors[6*i]=this.colors[6*i+3]=r[3*i],this.colors[6*i+1]=this.colors[6*i+4]=r[3*i+1],this.colors[6*i+2]=this.colors[6*i+5]=r[3*i+2]):this.colors[6*i]=this.colors[6*i+1]=this.colors[6*i+2]=this.colors[6*i+3]=this.colors[6*i+4]=this.colors[6*i+5]=1,o?(this.uvs[4*i]=this.uvs[4*i+2]=o[i],this.uvs[4*i+1]=0,this.uvs[4*i+3]=1):(this.uvs[4*i]=this.uvs[4*i+2]=i/(s-1),this.uvs[4*i+1]=0,this.uvs[4*i+3]=1);this.process(t)},t.prototype.compareV3=function(e,t){const n=6*e,r=6*t;return this.positions[n]===this.positions[r]&&this.positions[n+1]===this.positions[r+1]&&this.positions[n+2]===this.positions[r+2]},t.prototype.copyV3=function(e){const t=6*e;return[this.positions[t],this.positions[t+1],this.positions[t+2]]},t.prototype.process=function(t){const n=this.positions.length/6;let r,o,i,a,s;for(this.previous=new Float32Array(12*n/2),this.next=new Float32Array(12*n/2),this.side=new Float32Array(2*n),this.indices_array=new Uint32Array(6*(Math.max(n,1)-1)),r=0;r<n;r++)this.side[2*r]=1,this.side[2*r+1]=-1;if(t){for(r=0;r<n;r+=2)s=r/2*12,this.previous[s]=this.previous[s+3]=this.previous[s+6]=this.previous[s+9]=this.positions[6*r],this.previous[s+1]=this.previous[s+4]=this.previous[s+7]=this.previous[s+10]=this.positions[6*r+1],this.previous[s+2]=this.previous[s+5]=this.previous[s+8]=this.previous[s+11]=this.positions[6*r+2];for(r=0;r<n;r+=2)i=r+1,s=r/2*12,this.next[s]=this.next[s+3]=this.next[s+6]=this.next[s+9]=this.positions[6*i],this.next[s+1]=this.next[s+4]=this.next[s+7]=this.next[s+10]=this.positions[6*i+1],this.next[s+2]=this.next[s+5]=this.next[s+8]=this.next[s+11]=this.positions[6*i+2];for(r=0;r<n-1;r+=2)o=2*r,this.indices_array[6*r]=o,this.indices_array[6*r+1]=o+1,this.indices_array[6*r+2]=o+2,this.indices_array[6*r+3]=o+2,this.indices_array[6*r+4]=o+1,this.indices_array[6*r+5]=o+3}else{for(a=this.compareV3(0,n-1)?this.copyV3(n-2):this.copyV3(0),this.previous[0]=this.previous[3]=a[0],this.previous[1]=this.previous[4]=a[1],this.previous[2]=this.previous[5]=a[2],r=0;r<n-1;r++)a=this.copyV3(r),this.previous[6+6*r]=this.previous[6+6*r+3]=a[0],this.previous[6+6*r+1]=this.previous[6+6*r+4]=a[1],this.previous[6+6*r+2]=this.previous[6+6*r+5]=a[2];for(r=1;r<n;r++)a=this.copyV3(r),this.next[6*(r-1)]=this.next[6*(r-1)+3]=a[0],this.next[6*(r-1)+1]=this.next[6*(r-1)+4]=a[1],this.next[6*(r-1)+2]=this.next[6*(r-1)+5]=a[2];for(a=this.compareV3(n-1,0)?this.copyV3(1):this.copyV3(n-1),this.next[6*(n-1)]=this.next[6*(n-1)+3]=a[0],this.next[6*(n-1)+1]=this.next[6*(n-1)+4]=a[1],this.next[6*(n-1)+2]=this.next[6*(n-1)+5]=a[2],r=0;r<n-1;r++)o=2*r,this.indices_array[6*r]=o,this.indices_array[6*r+1]=o+1,this.indices_array[6*r+2]=o+2,this.indices_array[6*r+3]=o+2,this.indices_array[6*r+4]=o+1,this.indices_array[6*r+5]=o+3}this.attributes?(this.attributes.position.copyArray(this.positions),this.attributes.position.needsUpdate=!0,this.attributes.previous.copyArray(this.previous),this.attributes.previous.needsUpdate=!0,this.attributes.next.copyArray(this.next),this.attributes.next.needsUpdate=!0,this.attributes.side.copyArray(this.side),this.attributes.side.needsUpdate=!0,this.attributes.width.copyArray(this.width),this.attributes.width.needsUpdate=!0,this.attributes.uv.copyArray(this.uvs),this.attributes.uv.needsUpdate=!0,this.attributes.index.copyArray(this.indices_array),this.attributes.index.needsUpdate=!0,this.attributes.colors.copyArray(this.colors),this.attributes.colors.needsUpdate=!0):this.attributes={position:new e.BufferAttribute(this.positions,3),previous:new e.BufferAttribute(this.previous,3),next:new e.BufferAttribute(this.next,3),side:new e.BufferAttribute(this.side,1),width:new e.BufferAttribute(this.width,1),uv:new e.BufferAttribute(this.uvs,2),index:new e.BufferAttribute(this.indices_array,1),counters:new e.BufferAttribute(this.counters,1),colors:new e.BufferAttribute(this.colors,3)},this.geometry.setAttribute("position",this.attributes.position),this.geometry.setAttribute("previous",this.attributes.previous),this.geometry.setAttribute("next",this.attributes.next),this.geometry.setAttribute("side",this.attributes.side),this.geometry.setAttribute("width",this.attributes.width),this.geometry.setAttribute("uv",this.attributes.uv),this.geometry.setAttribute("counters",this.attributes.counters),this.geometry.setAttribute("colors",this.attributes.colors),this.geometry.setIndex(this.attributes.index)},n.prototype=Object.create(e.Material.prototype),n.prototype.constructor=n,n.prototype.isMeshLineMaterial=!0,n.prototype.copy=function(t){return e.Material.prototype.copy.call(this,t),this.lineWidth=t.lineWidth,this.map=t.map,this.useMap=t.useMap,this.color.copy(t.color),this.opacity=t.opacity,this.resolution.copy(t.resolution),this.sizeAttenuation=t.sizeAttenuation,this.near=t.near,this.far=t.far,this.visibility=t.visibility,this},{MeshLine:t,MeshLineMaterial:n}}}}]);